/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.18.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.camunda.rest.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import io.micronaut.core.annotation.Introspected;
import io.micronaut.core.annotation.Nullable;

import javax.annotation.Generated;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * A Job instance query which defines a list of Job instances
 */
@JsonPropertyOrder({
  JobQueryDto.JSON_PROPERTY_JOB_ID,
  JobQueryDto.JSON_PROPERTY_JOB_IDS,
  JobQueryDto.JSON_PROPERTY_JOB_DEFINITION_ID,
  JobQueryDto.JSON_PROPERTY_PROCESS_INSTANCE_ID,
  JobQueryDto.JSON_PROPERTY_PROCESS_INSTANCE_IDS,
  JobQueryDto.JSON_PROPERTY_EXECUTION_ID,
  JobQueryDto.JSON_PROPERTY_PROCESS_DEFINITION_ID,
  JobQueryDto.JSON_PROPERTY_PROCESS_DEFINITION_KEY,
  JobQueryDto.JSON_PROPERTY_ACTIVITY_ID,
  JobQueryDto.JSON_PROPERTY_WITH_RETRIES_LEFT,
  JobQueryDto.JSON_PROPERTY_EXECUTABLE,
  JobQueryDto.JSON_PROPERTY_TIMERS,
  JobQueryDto.JSON_PROPERTY_MESSAGES,
  JobQueryDto.JSON_PROPERTY_DUE_DATES,
  JobQueryDto.JSON_PROPERTY_CREATE_TIMES,
  JobQueryDto.JSON_PROPERTY_WITH_EXCEPTION,
  JobQueryDto.JSON_PROPERTY_EXCEPTION_MESSAGE,
  JobQueryDto.JSON_PROPERTY_FAILED_ACTIVITY_ID,
  JobQueryDto.JSON_PROPERTY_NO_RETRIES_LEFT,
  JobQueryDto.JSON_PROPERTY_ACTIVE,
  JobQueryDto.JSON_PROPERTY_SUSPENDED,
  JobQueryDto.JSON_PROPERTY_PRIORITY_LOWER_THAN_OR_EQUALS,
  JobQueryDto.JSON_PROPERTY_PRIORITY_HIGHER_THAN_OR_EQUALS,
  JobQueryDto.JSON_PROPERTY_TENANT_ID_IN,
  JobQueryDto.JSON_PROPERTY_WITHOUT_TENANT_ID,
  JobQueryDto.JSON_PROPERTY_INCLUDE_JOBS_WITHOUT_TENANT_ID,
  JobQueryDto.JSON_PROPERTY_SORTING
})
@JsonTypeName("JobQueryDto")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen")
@Introspected
public class JobQueryDto {
    public static final String JSON_PROPERTY_JOB_ID = "jobId";
    private String jobId;

    public static final String JSON_PROPERTY_JOB_IDS = "jobIds";
    private List<String> jobIds = null;

    public static final String JSON_PROPERTY_JOB_DEFINITION_ID = "jobDefinitionId";
    private String jobDefinitionId;

    public static final String JSON_PROPERTY_PROCESS_INSTANCE_ID = "processInstanceId";
    private String processInstanceId;

    public static final String JSON_PROPERTY_PROCESS_INSTANCE_IDS = "processInstanceIds";
    private List<String> processInstanceIds = null;

    public static final String JSON_PROPERTY_EXECUTION_ID = "executionId";
    private String executionId;

    public static final String JSON_PROPERTY_PROCESS_DEFINITION_ID = "processDefinitionId";
    private String processDefinitionId;

    public static final String JSON_PROPERTY_PROCESS_DEFINITION_KEY = "processDefinitionKey";
    private String processDefinitionKey;

    public static final String JSON_PROPERTY_ACTIVITY_ID = "activityId";
    private String activityId;

    public static final String JSON_PROPERTY_WITH_RETRIES_LEFT = "withRetriesLeft";
    private Boolean withRetriesLeft;

    public static final String JSON_PROPERTY_EXECUTABLE = "executable";
    private Boolean executable;

    public static final String JSON_PROPERTY_TIMERS = "timers";
    private Boolean timers;

    public static final String JSON_PROPERTY_MESSAGES = "messages";
    private Boolean messages;

    public static final String JSON_PROPERTY_DUE_DATES = "dueDates";
    private List<JobConditionQueryParameterDto> dueDates = null;

    public static final String JSON_PROPERTY_CREATE_TIMES = "createTimes";
    private List<JobConditionQueryParameterDto> createTimes = null;

    public static final String JSON_PROPERTY_WITH_EXCEPTION = "withException";
    private Boolean withException;

    public static final String JSON_PROPERTY_EXCEPTION_MESSAGE = "exceptionMessage";
    private String exceptionMessage;

    public static final String JSON_PROPERTY_FAILED_ACTIVITY_ID = "failedActivityId";
    private String failedActivityId;

    public static final String JSON_PROPERTY_NO_RETRIES_LEFT = "noRetriesLeft";
    private Boolean noRetriesLeft;

    public static final String JSON_PROPERTY_ACTIVE = "active";
    private Boolean active;

    public static final String JSON_PROPERTY_SUSPENDED = "suspended";
    private Boolean suspended;

    public static final String JSON_PROPERTY_PRIORITY_LOWER_THAN_OR_EQUALS = "priorityLowerThanOrEquals";
    private Long priorityLowerThanOrEquals;

    public static final String JSON_PROPERTY_PRIORITY_HIGHER_THAN_OR_EQUALS = "priorityHigherThanOrEquals";
    private Long priorityHigherThanOrEquals;

    public static final String JSON_PROPERTY_TENANT_ID_IN = "tenantIdIn";
    private List<String> tenantIdIn = null;

    public static final String JSON_PROPERTY_WITHOUT_TENANT_ID = "withoutTenantId";
    private Boolean withoutTenantId;

    public static final String JSON_PROPERTY_INCLUDE_JOBS_WITHOUT_TENANT_ID = "includeJobsWithoutTenantId";
    private Boolean includeJobsWithoutTenantId;

    public static final String JSON_PROPERTY_SORTING = "sorting";
    private List<JobQueryDtoSortingInner> sorting = null;

    public JobQueryDto() {
    }

    public JobQueryDto jobId(String jobId) {
        this.jobId = jobId;
        return this;
    }

    /**
     * Filter by job id.
     * @return jobId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_JOB_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getJobId() {
        return jobId;
    }

    @JsonProperty(JSON_PROPERTY_JOB_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setJobId(String jobId) {
        this.jobId = jobId;
    }

    public JobQueryDto jobIds(List<String> jobIds) {
        this.jobIds = jobIds;
        return this;
    }

    public JobQueryDto addJobIdsItem(String jobIdsItem) {
        if (this.jobIds == null) {
            this.jobIds = new ArrayList<>();
        }
        this.jobIds.add(jobIdsItem);
        return this;
    }

    /**
     * Filter by a  list of job ids.
     * @return jobIds
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_JOB_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<String> getJobIds() {
        return jobIds;
    }

    @JsonProperty(JSON_PROPERTY_JOB_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setJobIds(List<String> jobIds) {
        this.jobIds = jobIds;
    }

    public JobQueryDto jobDefinitionId(String jobDefinitionId) {
        this.jobDefinitionId = jobDefinitionId;
        return this;
    }

    /**
     * Only select jobs which exist for the given job definition.
     * @return jobDefinitionId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_JOB_DEFINITION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getJobDefinitionId() {
        return jobDefinitionId;
    }

    @JsonProperty(JSON_PROPERTY_JOB_DEFINITION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setJobDefinitionId(String jobDefinitionId) {
        this.jobDefinitionId = jobDefinitionId;
    }

    public JobQueryDto processInstanceId(String processInstanceId) {
        this.processInstanceId = processInstanceId;
        return this;
    }

    /**
     * Only select jobs which exist for the given process instance.
     * @return processInstanceId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_PROCESS_INSTANCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getProcessInstanceId() {
        return processInstanceId;
    }

    @JsonProperty(JSON_PROPERTY_PROCESS_INSTANCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setProcessInstanceId(String processInstanceId) {
        this.processInstanceId = processInstanceId;
    }

    public JobQueryDto processInstanceIds(List<String> processInstanceIds) {
        this.processInstanceIds = processInstanceIds;
        return this;
    }

    public JobQueryDto addProcessInstanceIdsItem(String processInstanceIdsItem) {
        if (this.processInstanceIds == null) {
            this.processInstanceIds = new ArrayList<>();
        }
        this.processInstanceIds.add(processInstanceIdsItem);
        return this;
    }

    /**
     * Only select jobs which exist for the given  list of process instance ids.
     * @return processInstanceIds
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_PROCESS_INSTANCE_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<String> getProcessInstanceIds() {
        return processInstanceIds;
    }

    @JsonProperty(JSON_PROPERTY_PROCESS_INSTANCE_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setProcessInstanceIds(List<String> processInstanceIds) {
        this.processInstanceIds = processInstanceIds;
    }

    public JobQueryDto executionId(String executionId) {
        this.executionId = executionId;
        return this;
    }

    /**
     * Only select jobs which exist for the given execution.
     * @return executionId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_EXECUTION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getExecutionId() {
        return executionId;
    }

    @JsonProperty(JSON_PROPERTY_EXECUTION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setExecutionId(String executionId) {
        this.executionId = executionId;
    }

    public JobQueryDto processDefinitionId(String processDefinitionId) {
        this.processDefinitionId = processDefinitionId;
        return this;
    }

    /**
     * Filter by the id of the process definition the jobs run on.
     * @return processDefinitionId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getProcessDefinitionId() {
        return processDefinitionId;
    }

    @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setProcessDefinitionId(String processDefinitionId) {
        this.processDefinitionId = processDefinitionId;
    }

    public JobQueryDto processDefinitionKey(String processDefinitionKey) {
        this.processDefinitionKey = processDefinitionKey;
        return this;
    }

    /**
     * Filter by the key of the process definition the jobs run on.
     * @return processDefinitionKey
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getProcessDefinitionKey() {
        return processDefinitionKey;
    }

    @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setProcessDefinitionKey(String processDefinitionKey) {
        this.processDefinitionKey = processDefinitionKey;
    }

    public JobQueryDto activityId(String activityId) {
        this.activityId = activityId;
        return this;
    }

    /**
     * Only select jobs which exist for an activity with the given id.
     * @return activityId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_ACTIVITY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getActivityId() {
        return activityId;
    }

    @JsonProperty(JSON_PROPERTY_ACTIVITY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setActivityId(String activityId) {
        this.activityId = activityId;
    }

    public JobQueryDto withRetriesLeft(Boolean withRetriesLeft) {
        this.withRetriesLeft = withRetriesLeft;
        return this;
    }

    /**
     * Only select jobs which have retries left. Value may only be &#x60;true&#x60;, as &#x60;false&#x60; is the default behavior.
     * @return withRetriesLeft
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_WITH_RETRIES_LEFT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getWithRetriesLeft() {
        return withRetriesLeft;
    }

    @JsonProperty(JSON_PROPERTY_WITH_RETRIES_LEFT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setWithRetriesLeft(Boolean withRetriesLeft) {
        this.withRetriesLeft = withRetriesLeft;
    }

    public JobQueryDto executable(Boolean executable) {
        this.executable = executable;
        return this;
    }

    /**
     * Only select jobs which are executable, i.e., retries &gt; 0 and due date is &#x60;null&#x60; or due date is in the past. Value may only be &#x60;true&#x60;, as &#x60;false&#x60; is the default behavior.
     * @return executable
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_EXECUTABLE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getExecutable() {
        return executable;
    }

    @JsonProperty(JSON_PROPERTY_EXECUTABLE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setExecutable(Boolean executable) {
        this.executable = executable;
    }

    public JobQueryDto timers(Boolean timers) {
        this.timers = timers;
        return this;
    }

    /**
     * Only select jobs that are timers. Cannot be used together with &#x60;messages&#x60;. Value may only be &#x60;true&#x60;, as &#x60;false&#x60; is the default behavior.
     * @return timers
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_TIMERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getTimers() {
        return timers;
    }

    @JsonProperty(JSON_PROPERTY_TIMERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTimers(Boolean timers) {
        this.timers = timers;
    }

    public JobQueryDto messages(Boolean messages) {
        this.messages = messages;
        return this;
    }

    /**
     * Only select jobs that are messages. Cannot be used together with &#x60;timers&#x60;. Value may only be &#x60;true&#x60;, as &#x60;false&#x60; is the default behavior.
     * @return messages
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_MESSAGES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getMessages() {
        return messages;
    }

    @JsonProperty(JSON_PROPERTY_MESSAGES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMessages(Boolean messages) {
        this.messages = messages;
    }

    public JobQueryDto dueDates(List<JobConditionQueryParameterDto> dueDates) {
        this.dueDates = dueDates;
        return this;
    }

    public JobQueryDto addDueDatesItem(JobConditionQueryParameterDto dueDatesItem) {
        if (this.dueDates == null) {
            this.dueDates = new ArrayList<>();
        }
        this.dueDates.add(dueDatesItem);
        return this;
    }

    /**
     * Only select jobs where the due date is lower or higher than the given date. 
     * @return dueDates
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_DUE_DATES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<JobConditionQueryParameterDto> getDueDates() {
        return dueDates;
    }

    @JsonProperty(JSON_PROPERTY_DUE_DATES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDueDates(List<JobConditionQueryParameterDto> dueDates) {
        this.dueDates = dueDates;
    }

    public JobQueryDto createTimes(List<JobConditionQueryParameterDto> createTimes) {
        this.createTimes = createTimes;
        return this;
    }

    public JobQueryDto addCreateTimesItem(JobConditionQueryParameterDto createTimesItem) {
        if (this.createTimes == null) {
            this.createTimes = new ArrayList<>();
        }
        this.createTimes.add(createTimesItem);
        return this;
    }

    /**
     * Only select jobs created before or after the given date. 
     * @return createTimes
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_CREATE_TIMES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<JobConditionQueryParameterDto> getCreateTimes() {
        return createTimes;
    }

    @JsonProperty(JSON_PROPERTY_CREATE_TIMES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCreateTimes(List<JobConditionQueryParameterDto> createTimes) {
        this.createTimes = createTimes;
    }

    public JobQueryDto withException(Boolean withException) {
        this.withException = withException;
        return this;
    }

    /**
     * Only select jobs that failed due to an exception. Value may only be &#x60;true&#x60;, as &#x60;false&#x60; is the default behavior.
     * @return withException
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_WITH_EXCEPTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getWithException() {
        return withException;
    }

    @JsonProperty(JSON_PROPERTY_WITH_EXCEPTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setWithException(Boolean withException) {
        this.withException = withException;
    }

    public JobQueryDto exceptionMessage(String exceptionMessage) {
        this.exceptionMessage = exceptionMessage;
        return this;
    }

    /**
     * Only select jobs that failed due to an exception with the given message.
     * @return exceptionMessage
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_EXCEPTION_MESSAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getExceptionMessage() {
        return exceptionMessage;
    }

    @JsonProperty(JSON_PROPERTY_EXCEPTION_MESSAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setExceptionMessage(String exceptionMessage) {
        this.exceptionMessage = exceptionMessage;
    }

    public JobQueryDto failedActivityId(String failedActivityId) {
        this.failedActivityId = failedActivityId;
        return this;
    }

    /**
     * Only select jobs that failed due to an exception at an activity with the given id.
     * @return failedActivityId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_FAILED_ACTIVITY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getFailedActivityId() {
        return failedActivityId;
    }

    @JsonProperty(JSON_PROPERTY_FAILED_ACTIVITY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFailedActivityId(String failedActivityId) {
        this.failedActivityId = failedActivityId;
    }

    public JobQueryDto noRetriesLeft(Boolean noRetriesLeft) {
        this.noRetriesLeft = noRetriesLeft;
        return this;
    }

    /**
     * Only select jobs which have no retries left. Value may only be &#x60;true&#x60;, as &#x60;false&#x60; is the default behavior.
     * @return noRetriesLeft
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_NO_RETRIES_LEFT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getNoRetriesLeft() {
        return noRetriesLeft;
    }

    @JsonProperty(JSON_PROPERTY_NO_RETRIES_LEFT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNoRetriesLeft(Boolean noRetriesLeft) {
        this.noRetriesLeft = noRetriesLeft;
    }

    public JobQueryDto active(Boolean active) {
        this.active = active;
        return this;
    }

    /**
     * Only include active jobs. Value may only be &#x60;true&#x60;, as &#x60;false&#x60; is the default behavior.
     * @return active
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_ACTIVE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getActive() {
        return active;
    }

    @JsonProperty(JSON_PROPERTY_ACTIVE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setActive(Boolean active) {
        this.active = active;
    }

    public JobQueryDto suspended(Boolean suspended) {
        this.suspended = suspended;
        return this;
    }

    /**
     * Only include suspended jobs. Value may only be &#x60;true&#x60;, as &#x60;false&#x60; is the default behavior.
     * @return suspended
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_SUSPENDED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getSuspended() {
        return suspended;
    }

    @JsonProperty(JSON_PROPERTY_SUSPENDED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSuspended(Boolean suspended) {
        this.suspended = suspended;
    }

    public JobQueryDto priorityLowerThanOrEquals(Long priorityLowerThanOrEquals) {
        this.priorityLowerThanOrEquals = priorityLowerThanOrEquals;
        return this;
    }

    /**
     * Only include jobs with a priority lower than or equal to the given value. Value must be a valid &#x60;long&#x60; value.
     * @return priorityLowerThanOrEquals
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_PRIORITY_LOWER_THAN_OR_EQUALS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Long getPriorityLowerThanOrEquals() {
        return priorityLowerThanOrEquals;
    }

    @JsonProperty(JSON_PROPERTY_PRIORITY_LOWER_THAN_OR_EQUALS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPriorityLowerThanOrEquals(Long priorityLowerThanOrEquals) {
        this.priorityLowerThanOrEquals = priorityLowerThanOrEquals;
    }

    public JobQueryDto priorityHigherThanOrEquals(Long priorityHigherThanOrEquals) {
        this.priorityHigherThanOrEquals = priorityHigherThanOrEquals;
        return this;
    }

    /**
     * Only include jobs with a priority higher than or equal to the given value. Value must be a valid &#x60;long&#x60; value.
     * @return priorityHigherThanOrEquals
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_PRIORITY_HIGHER_THAN_OR_EQUALS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Long getPriorityHigherThanOrEquals() {
        return priorityHigherThanOrEquals;
    }

    @JsonProperty(JSON_PROPERTY_PRIORITY_HIGHER_THAN_OR_EQUALS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPriorityHigherThanOrEquals(Long priorityHigherThanOrEquals) {
        this.priorityHigherThanOrEquals = priorityHigherThanOrEquals;
    }

    public JobQueryDto tenantIdIn(List<String> tenantIdIn) {
        this.tenantIdIn = tenantIdIn;
        return this;
    }

    public JobQueryDto addTenantIdInItem(String tenantIdInItem) {
        if (this.tenantIdIn == null) {
            this.tenantIdIn = new ArrayList<>();
        }
        this.tenantIdIn.add(tenantIdInItem);
        return this;
    }

    /**
     * Only include jobs which belong to one of the passed  tenant ids.
     * @return tenantIdIn
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_TENANT_ID_IN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<String> getTenantIdIn() {
        return tenantIdIn;
    }

    @JsonProperty(JSON_PROPERTY_TENANT_ID_IN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTenantIdIn(List<String> tenantIdIn) {
        this.tenantIdIn = tenantIdIn;
    }

    public JobQueryDto withoutTenantId(Boolean withoutTenantId) {
        this.withoutTenantId = withoutTenantId;
        return this;
    }

    /**
     * Only include jobs which belong to no tenant. Value may only be &#x60;true&#x60;, as &#x60;false&#x60; is the default behavior.
     * @return withoutTenantId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_WITHOUT_TENANT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getWithoutTenantId() {
        return withoutTenantId;
    }

    @JsonProperty(JSON_PROPERTY_WITHOUT_TENANT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setWithoutTenantId(Boolean withoutTenantId) {
        this.withoutTenantId = withoutTenantId;
    }

    public JobQueryDto includeJobsWithoutTenantId(Boolean includeJobsWithoutTenantId) {
        this.includeJobsWithoutTenantId = includeJobsWithoutTenantId;
        return this;
    }

    /**
     * Include jobs which belong to no tenant. Can be used in combination with &#x60;tenantIdIn&#x60;. Value may only be &#x60;true&#x60;, as &#x60;false&#x60; is the default behavior.
     * @return includeJobsWithoutTenantId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_INCLUDE_JOBS_WITHOUT_TENANT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getIncludeJobsWithoutTenantId() {
        return includeJobsWithoutTenantId;
    }

    @JsonProperty(JSON_PROPERTY_INCLUDE_JOBS_WITHOUT_TENANT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIncludeJobsWithoutTenantId(Boolean includeJobsWithoutTenantId) {
        this.includeJobsWithoutTenantId = includeJobsWithoutTenantId;
    }

    public JobQueryDto sorting(List<JobQueryDtoSortingInner> sorting) {
        this.sorting = sorting;
        return this;
    }

    public JobQueryDto addSortingItem(JobQueryDtoSortingInner sortingItem) {
        if (this.sorting == null) {
            this.sorting = new ArrayList<>();
        }
        this.sorting.add(sortingItem);
        return this;
    }

    /**
     * An array of criteria to sort the result by. Each element of the array is                        an object that specifies one ordering. The position in the array                        identifies the rank of an ordering, i.e., whether it is primary, secondary,                        etc. Does not have an effect for the &#x60;count&#x60; endpoint.
     * @return sorting
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_SORTING)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<JobQueryDtoSortingInner> getSorting() {
        return sorting;
    }

    @JsonProperty(JSON_PROPERTY_SORTING)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSorting(List<JobQueryDtoSortingInner> sorting) {
        this.sorting = sorting;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        JobQueryDto jobQueryDto = (JobQueryDto) o;
        return Objects.equals(this.jobId, jobQueryDto.jobId) &&
            Objects.equals(this.jobIds, jobQueryDto.jobIds) &&
            Objects.equals(this.jobDefinitionId, jobQueryDto.jobDefinitionId) &&
            Objects.equals(this.processInstanceId, jobQueryDto.processInstanceId) &&
            Objects.equals(this.processInstanceIds, jobQueryDto.processInstanceIds) &&
            Objects.equals(this.executionId, jobQueryDto.executionId) &&
            Objects.equals(this.processDefinitionId, jobQueryDto.processDefinitionId) &&
            Objects.equals(this.processDefinitionKey, jobQueryDto.processDefinitionKey) &&
            Objects.equals(this.activityId, jobQueryDto.activityId) &&
            Objects.equals(this.withRetriesLeft, jobQueryDto.withRetriesLeft) &&
            Objects.equals(this.executable, jobQueryDto.executable) &&
            Objects.equals(this.timers, jobQueryDto.timers) &&
            Objects.equals(this.messages, jobQueryDto.messages) &&
            Objects.equals(this.dueDates, jobQueryDto.dueDates) &&
            Objects.equals(this.createTimes, jobQueryDto.createTimes) &&
            Objects.equals(this.withException, jobQueryDto.withException) &&
            Objects.equals(this.exceptionMessage, jobQueryDto.exceptionMessage) &&
            Objects.equals(this.failedActivityId, jobQueryDto.failedActivityId) &&
            Objects.equals(this.noRetriesLeft, jobQueryDto.noRetriesLeft) &&
            Objects.equals(this.active, jobQueryDto.active) &&
            Objects.equals(this.suspended, jobQueryDto.suspended) &&
            Objects.equals(this.priorityLowerThanOrEquals, jobQueryDto.priorityLowerThanOrEquals) &&
            Objects.equals(this.priorityHigherThanOrEquals, jobQueryDto.priorityHigherThanOrEquals) &&
            Objects.equals(this.tenantIdIn, jobQueryDto.tenantIdIn) &&
            Objects.equals(this.withoutTenantId, jobQueryDto.withoutTenantId) &&
            Objects.equals(this.includeJobsWithoutTenantId, jobQueryDto.includeJobsWithoutTenantId) &&
            Objects.equals(this.sorting, jobQueryDto.sorting);
    }

    @Override
    public int hashCode() {
        return Objects.hash(jobId, jobIds, jobDefinitionId, processInstanceId, processInstanceIds, executionId, processDefinitionId, processDefinitionKey, activityId, withRetriesLeft, executable, timers, messages, dueDates, createTimes, withException, exceptionMessage, failedActivityId, noRetriesLeft, active, suspended, priorityLowerThanOrEquals, priorityHigherThanOrEquals, tenantIdIn, withoutTenantId, includeJobsWithoutTenantId, sorting);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class JobQueryDto {\n");
        sb.append("    jobId: ").append(toIndentedString(jobId)).append("\n");
        sb.append("    jobIds: ").append(toIndentedString(jobIds)).append("\n");
        sb.append("    jobDefinitionId: ").append(toIndentedString(jobDefinitionId)).append("\n");
        sb.append("    processInstanceId: ").append(toIndentedString(processInstanceId)).append("\n");
        sb.append("    processInstanceIds: ").append(toIndentedString(processInstanceIds)).append("\n");
        sb.append("    executionId: ").append(toIndentedString(executionId)).append("\n");
        sb.append("    processDefinitionId: ").append(toIndentedString(processDefinitionId)).append("\n");
        sb.append("    processDefinitionKey: ").append(toIndentedString(processDefinitionKey)).append("\n");
        sb.append("    activityId: ").append(toIndentedString(activityId)).append("\n");
        sb.append("    withRetriesLeft: ").append(toIndentedString(withRetriesLeft)).append("\n");
        sb.append("    executable: ").append(toIndentedString(executable)).append("\n");
        sb.append("    timers: ").append(toIndentedString(timers)).append("\n");
        sb.append("    messages: ").append(toIndentedString(messages)).append("\n");
        sb.append("    dueDates: ").append(toIndentedString(dueDates)).append("\n");
        sb.append("    createTimes: ").append(toIndentedString(createTimes)).append("\n");
        sb.append("    withException: ").append(toIndentedString(withException)).append("\n");
        sb.append("    exceptionMessage: ").append(toIndentedString(exceptionMessage)).append("\n");
        sb.append("    failedActivityId: ").append(toIndentedString(failedActivityId)).append("\n");
        sb.append("    noRetriesLeft: ").append(toIndentedString(noRetriesLeft)).append("\n");
        sb.append("    active: ").append(toIndentedString(active)).append("\n");
        sb.append("    suspended: ").append(toIndentedString(suspended)).append("\n");
        sb.append("    priorityLowerThanOrEquals: ").append(toIndentedString(priorityLowerThanOrEquals)).append("\n");
        sb.append("    priorityHigherThanOrEquals: ").append(toIndentedString(priorityHigherThanOrEquals)).append("\n");
        sb.append("    tenantIdIn: ").append(toIndentedString(tenantIdIn)).append("\n");
        sb.append("    withoutTenantId: ").append(toIndentedString(withoutTenantId)).append("\n");
        sb.append("    includeJobsWithoutTenantId: ").append(toIndentedString(includeJobsWithoutTenantId)).append("\n");
        sb.append("    sorting: ").append(toIndentedString(sorting)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

