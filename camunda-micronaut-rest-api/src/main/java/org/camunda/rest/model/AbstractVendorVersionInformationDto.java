/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.18.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.camunda.rest.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import io.micronaut.core.annotation.Introspected;
import io.micronaut.core.annotation.Nullable;

import javax.annotation.Generated;
import java.util.Objects;

/**
 * AbstractVendorVersionInformationDto
 */
@JsonPropertyOrder({
  AbstractVendorVersionInformationDto.JSON_PROPERTY_VENDOR,
  AbstractVendorVersionInformationDto.JSON_PROPERTY_VERSION
})
@JsonTypeName("AbstractVendorVersionInformationDto")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen")
@Introspected
public class AbstractVendorVersionInformationDto {
    public static final String JSON_PROPERTY_VENDOR = "vendor";
    private String vendor;

    public static final String JSON_PROPERTY_VERSION = "version";
    private String version;

    public AbstractVendorVersionInformationDto() {
    }

    public AbstractVendorVersionInformationDto vendor(String vendor) {
        this.vendor = vendor;
        return this;
    }

    /**
     * Information about the vendor.
     * @return vendor
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_VENDOR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getVendor() {
        return vendor;
    }

    @JsonProperty(JSON_PROPERTY_VENDOR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setVendor(String vendor) {
        this.vendor = vendor;
    }

    public AbstractVendorVersionInformationDto version(String version) {
        this.version = version;
        return this;
    }

    /**
     * Information about the version.
     * @return version
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_VERSION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getVersion() {
        return version;
    }

    @JsonProperty(JSON_PROPERTY_VERSION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setVersion(String version) {
        this.version = version;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AbstractVendorVersionInformationDto abstractVendorVersionInformationDto = (AbstractVendorVersionInformationDto) o;
        return Objects.equals(this.vendor, abstractVendorVersionInformationDto.vendor) &&
            Objects.equals(this.version, abstractVendorVersionInformationDto.version);
    }

    @Override
    public int hashCode() {
        return Objects.hash(vendor, version);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class AbstractVendorVersionInformationDto {\n");
        sb.append("    vendor: ").append(toIndentedString(vendor)).append("\n");
        sb.append("    version: ").append(toIndentedString(version)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

