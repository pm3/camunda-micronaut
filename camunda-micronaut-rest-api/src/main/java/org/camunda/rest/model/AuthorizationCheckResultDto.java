/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.18.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.camunda.rest.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import io.micronaut.core.annotation.Introspected;
import io.micronaut.core.annotation.Nullable;

import javax.annotation.Generated;
import java.util.Objects;

/**
 * AuthorizationCheckResultDto
 */
@JsonPropertyOrder({
  AuthorizationCheckResultDto.JSON_PROPERTY_PERMISSION_NAME,
  AuthorizationCheckResultDto.JSON_PROPERTY_RESOURCE_NAME,
  AuthorizationCheckResultDto.JSON_PROPERTY_RESOURCE_ID,
  AuthorizationCheckResultDto.JSON_PROPERTY_IS_AUTHORIZED
})
@JsonTypeName("AuthorizationCheckResultDto")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen")
@Introspected
public class AuthorizationCheckResultDto {
    public static final String JSON_PROPERTY_PERMISSION_NAME = "permissionName";
    private String permissionName;

    public static final String JSON_PROPERTY_RESOURCE_NAME = "resourceName";
    private String resourceName;

    public static final String JSON_PROPERTY_RESOURCE_ID = "resourceId";
    private String resourceId;

    public static final String JSON_PROPERTY_IS_AUTHORIZED = "isAuthorized";
    private Boolean isAuthorized;

    public AuthorizationCheckResultDto() {
    }

    public AuthorizationCheckResultDto permissionName(String permissionName) {
        this.permissionName = permissionName;
        return this;
    }

    /**
     * Name of the permission which was checked.
     * @return permissionName
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_PERMISSION_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getPermissionName() {
        return permissionName;
    }

    @JsonProperty(JSON_PROPERTY_PERMISSION_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPermissionName(String permissionName) {
        this.permissionName = permissionName;
    }

    public AuthorizationCheckResultDto resourceName(String resourceName) {
        this.resourceName = resourceName;
        return this;
    }

    /**
     * The name of the resource for which the permission check was performed.
     * @return resourceName
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_RESOURCE_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getResourceName() {
        return resourceName;
    }

    @JsonProperty(JSON_PROPERTY_RESOURCE_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setResourceName(String resourceName) {
        this.resourceName = resourceName;
    }

    public AuthorizationCheckResultDto resourceId(String resourceId) {
        this.resourceId = resourceId;
        return this;
    }

    /**
     * The id of the resource for which the permission check was performed.
     * @return resourceId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_RESOURCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getResourceId() {
        return resourceId;
    }

    @JsonProperty(JSON_PROPERTY_RESOURCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setResourceId(String resourceId) {
        this.resourceId = resourceId;
    }

    public AuthorizationCheckResultDto isAuthorized(Boolean isAuthorized) {
        this.isAuthorized = isAuthorized;
        return this;
    }

    /**
     * True / false for isAuthorized.
     * @return isAuthorized
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_IS_AUTHORIZED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getIsAuthorized() {
        return isAuthorized;
    }

    @JsonProperty(JSON_PROPERTY_IS_AUTHORIZED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIsAuthorized(Boolean isAuthorized) {
        this.isAuthorized = isAuthorized;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AuthorizationCheckResultDto authorizationCheckResultDto = (AuthorizationCheckResultDto) o;
        return Objects.equals(this.permissionName, authorizationCheckResultDto.permissionName) &&
            Objects.equals(this.resourceName, authorizationCheckResultDto.resourceName) &&
            Objects.equals(this.resourceId, authorizationCheckResultDto.resourceId) &&
            Objects.equals(this.isAuthorized, authorizationCheckResultDto.isAuthorized);
    }

    @Override
    public int hashCode() {
        return Objects.hash(permissionName, resourceName, resourceId, isAuthorized);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class AuthorizationCheckResultDto {\n");
        sb.append("    permissionName: ").append(toIndentedString(permissionName)).append("\n");
        sb.append("    resourceName: ").append(toIndentedString(resourceName)).append("\n");
        sb.append("    resourceId: ").append(toIndentedString(resourceId)).append("\n");
        sb.append("    isAuthorized: ").append(toIndentedString(isAuthorized)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

