/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.18.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.camunda.rest.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import io.micronaut.core.annotation.Introspected;
import io.micronaut.core.annotation.Nullable;

import javax.annotation.Generated;
import java.util.Objects;

/**
 * HistoricActivityStatisticsDto
 */
@JsonPropertyOrder({
  HistoricActivityStatisticsDto.JSON_PROPERTY_ID,
  HistoricActivityStatisticsDto.JSON_PROPERTY_INSTANCES,
  HistoricActivityStatisticsDto.JSON_PROPERTY_CANCELED,
  HistoricActivityStatisticsDto.JSON_PROPERTY_FINISHED,
  HistoricActivityStatisticsDto.JSON_PROPERTY_COMPLETE_SCOPE,
  HistoricActivityStatisticsDto.JSON_PROPERTY_OPEN_INCIDENTS,
  HistoricActivityStatisticsDto.JSON_PROPERTY_RESOLVED_INCIDENTS,
  HistoricActivityStatisticsDto.JSON_PROPERTY_DELETED_INCIDENTS
})
@JsonTypeName("HistoricActivityStatisticsDto")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen")
@Introspected
public class HistoricActivityStatisticsDto {
    public static final String JSON_PROPERTY_ID = "id";
    private String id;

    public static final String JSON_PROPERTY_INSTANCES = "instances";
    private Long instances;

    public static final String JSON_PROPERTY_CANCELED = "canceled";
    private Long canceled;

    public static final String JSON_PROPERTY_FINISHED = "finished";
    private Long finished;

    public static final String JSON_PROPERTY_COMPLETE_SCOPE = "completeScope";
    private Long completeScope;

    public static final String JSON_PROPERTY_OPEN_INCIDENTS = "openIncidents";
    private Long openIncidents;

    public static final String JSON_PROPERTY_RESOLVED_INCIDENTS = "resolvedIncidents";
    private Long resolvedIncidents;

    public static final String JSON_PROPERTY_DELETED_INCIDENTS = "deletedIncidents";
    private Long deletedIncidents;

    public HistoricActivityStatisticsDto() {
    }

    public HistoricActivityStatisticsDto id(String id) {
        this.id = id;
        return this;
    }

    /**
     * The id of the activity the results are aggregated for.
     * @return id
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setId(String id) {
        this.id = id;
    }

    public HistoricActivityStatisticsDto instances(Long instances) {
        this.instances = instances;
        return this;
    }

    /**
     * The total number of all running instances of the activity.
     * @return instances
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_INSTANCES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Long getInstances() {
        return instances;
    }

    @JsonProperty(JSON_PROPERTY_INSTANCES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setInstances(Long instances) {
        this.instances = instances;
    }

    public HistoricActivityStatisticsDto canceled(Long canceled) {
        this.canceled = canceled;
        return this;
    }

    /**
     * The total number of all canceled instances of the activity. **Note:** Will be &#x60;0&#x60; (not &#x60;null&#x60;), if canceled activity instances were excluded.
     * @return canceled
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_CANCELED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Long getCanceled() {
        return canceled;
    }

    @JsonProperty(JSON_PROPERTY_CANCELED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCanceled(Long canceled) {
        this.canceled = canceled;
    }

    public HistoricActivityStatisticsDto finished(Long finished) {
        this.finished = finished;
        return this;
    }

    /**
     * The total number of all finished instances of the activity. **Note:** Will be &#x60;0&#x60; (not &#x60;null&#x60;), if finished activity instances were excluded.
     * @return finished
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_FINISHED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Long getFinished() {
        return finished;
    }

    @JsonProperty(JSON_PROPERTY_FINISHED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFinished(Long finished) {
        this.finished = finished;
    }

    public HistoricActivityStatisticsDto completeScope(Long completeScope) {
        this.completeScope = completeScope;
        return this;
    }

    /**
     * The total number of all instances which completed a scope of the activity. **Note:** Will be &#x60;0&#x60; (not &#x60;null&#x60;), if activity instances which completed a scope were excluded.
     * @return completeScope
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_COMPLETE_SCOPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Long getCompleteScope() {
        return completeScope;
    }

    @JsonProperty(JSON_PROPERTY_COMPLETE_SCOPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCompleteScope(Long completeScope) {
        this.completeScope = completeScope;
    }

    public HistoricActivityStatisticsDto openIncidents(Long openIncidents) {
        this.openIncidents = openIncidents;
        return this;
    }

    /**
     * The total number of open incidents for the activity. **Note:** Will be &#x60;0&#x60; (not &#x60;null&#x60;), if &#x60;incidents&#x60; is set to &#x60;false&#x60;.
     * @return openIncidents
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_OPEN_INCIDENTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Long getOpenIncidents() {
        return openIncidents;
    }

    @JsonProperty(JSON_PROPERTY_OPEN_INCIDENTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOpenIncidents(Long openIncidents) {
        this.openIncidents = openIncidents;
    }

    public HistoricActivityStatisticsDto resolvedIncidents(Long resolvedIncidents) {
        this.resolvedIncidents = resolvedIncidents;
        return this;
    }

    /**
     * The total number of resolved incidents for the activity. **Note:** Will be &#x60;0&#x60; (not &#x60;null&#x60;), if &#x60;incidents&#x60; is set to &#x60;false&#x60;.
     * @return resolvedIncidents
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_RESOLVED_INCIDENTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Long getResolvedIncidents() {
        return resolvedIncidents;
    }

    @JsonProperty(JSON_PROPERTY_RESOLVED_INCIDENTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setResolvedIncidents(Long resolvedIncidents) {
        this.resolvedIncidents = resolvedIncidents;
    }

    public HistoricActivityStatisticsDto deletedIncidents(Long deletedIncidents) {
        this.deletedIncidents = deletedIncidents;
        return this;
    }

    /**
     * The total number of deleted incidents for the activity. **Note:** Will be &#x60;0&#x60; (not &#x60;null&#x60;), if &#x60;incidents&#x60; is set to &#x60;false&#x60;.
     * @return deletedIncidents
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_DELETED_INCIDENTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Long getDeletedIncidents() {
        return deletedIncidents;
    }

    @JsonProperty(JSON_PROPERTY_DELETED_INCIDENTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDeletedIncidents(Long deletedIncidents) {
        this.deletedIncidents = deletedIncidents;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        HistoricActivityStatisticsDto historicActivityStatisticsDto = (HistoricActivityStatisticsDto) o;
        return Objects.equals(this.id, historicActivityStatisticsDto.id) &&
            Objects.equals(this.instances, historicActivityStatisticsDto.instances) &&
            Objects.equals(this.canceled, historicActivityStatisticsDto.canceled) &&
            Objects.equals(this.finished, historicActivityStatisticsDto.finished) &&
            Objects.equals(this.completeScope, historicActivityStatisticsDto.completeScope) &&
            Objects.equals(this.openIncidents, historicActivityStatisticsDto.openIncidents) &&
            Objects.equals(this.resolvedIncidents, historicActivityStatisticsDto.resolvedIncidents) &&
            Objects.equals(this.deletedIncidents, historicActivityStatisticsDto.deletedIncidents);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, instances, canceled, finished, completeScope, openIncidents, resolvedIncidents, deletedIncidents);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class HistoricActivityStatisticsDto {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    instances: ").append(toIndentedString(instances)).append("\n");
        sb.append("    canceled: ").append(toIndentedString(canceled)).append("\n");
        sb.append("    finished: ").append(toIndentedString(finished)).append("\n");
        sb.append("    completeScope: ").append(toIndentedString(completeScope)).append("\n");
        sb.append("    openIncidents: ").append(toIndentedString(openIncidents)).append("\n");
        sb.append("    resolvedIncidents: ").append(toIndentedString(resolvedIncidents)).append("\n");
        sb.append("    deletedIncidents: ").append(toIndentedString(deletedIncidents)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

