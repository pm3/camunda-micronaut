/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.18.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.camunda.rest.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import io.micronaut.core.annotation.Introspected;
import io.micronaut.core.annotation.Nullable;

import javax.annotation.Generated;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * AuthenticationResult
 */
@JsonPropertyOrder({
  AuthenticationResult.JSON_PROPERTY_AUTHENTICATED_USER,
  AuthenticationResult.JSON_PROPERTY_IS_AUTHENTICATED,
  AuthenticationResult.JSON_PROPERTY_TENANTS,
  AuthenticationResult.JSON_PROPERTY_GROUPS
})
@JsonTypeName("AuthenticationResult")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen")
@Introspected
public class AuthenticationResult {
    public static final String JSON_PROPERTY_AUTHENTICATED_USER = "authenticatedUser";
    private String authenticatedUser;

    public static final String JSON_PROPERTY_IS_AUTHENTICATED = "isAuthenticated";
    private Boolean isAuthenticated;

    public static final String JSON_PROPERTY_TENANTS = "tenants";
    private List<String> tenants = null;

    public static final String JSON_PROPERTY_GROUPS = "groups";
    private List<String> groups = null;

    public AuthenticationResult() {
    }

    public AuthenticationResult authenticatedUser(String authenticatedUser) {
        this.authenticatedUser = authenticatedUser;
        return this;
    }

    /**
     * An id of authenticated user.
     * @return authenticatedUser
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_AUTHENTICATED_USER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getAuthenticatedUser() {
        return authenticatedUser;
    }

    @JsonProperty(JSON_PROPERTY_AUTHENTICATED_USER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAuthenticatedUser(String authenticatedUser) {
        this.authenticatedUser = authenticatedUser;
    }

    public AuthenticationResult isAuthenticated(Boolean isAuthenticated) {
        this.isAuthenticated = isAuthenticated;
        return this;
    }

    /**
     * A flag indicating if user is authenticated.
     * @return isAuthenticated
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_IS_AUTHENTICATED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getIsAuthenticated() {
        return isAuthenticated;
    }

    @JsonProperty(JSON_PROPERTY_IS_AUTHENTICATED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIsAuthenticated(Boolean isAuthenticated) {
        this.isAuthenticated = isAuthenticated;
    }

    public AuthenticationResult tenants(List<String> tenants) {
        this.tenants = tenants;
        return this;
    }

    public AuthenticationResult addTenantsItem(String tenantsItem) {
        if (this.tenants == null) {
            this.tenants = new ArrayList<>();
        }
        this.tenants.add(tenantsItem);
        return this;
    }

    /**
     * Will be null.
     * @return tenants
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_TENANTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<String> getTenants() {
        return tenants;
    }

    @JsonProperty(JSON_PROPERTY_TENANTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTenants(List<String> tenants) {
        this.tenants = tenants;
    }

    public AuthenticationResult groups(List<String> groups) {
        this.groups = groups;
        return this;
    }

    public AuthenticationResult addGroupsItem(String groupsItem) {
        if (this.groups == null) {
            this.groups = new ArrayList<>();
        }
        this.groups.add(groupsItem);
        return this;
    }

    /**
     * Will be null.
     * @return groups
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_GROUPS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<String> getGroups() {
        return groups;
    }

    @JsonProperty(JSON_PROPERTY_GROUPS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setGroups(List<String> groups) {
        this.groups = groups;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AuthenticationResult authenticationResult = (AuthenticationResult) o;
        return Objects.equals(this.authenticatedUser, authenticationResult.authenticatedUser) &&
            Objects.equals(this.isAuthenticated, authenticationResult.isAuthenticated) &&
            Objects.equals(this.tenants, authenticationResult.tenants) &&
            Objects.equals(this.groups, authenticationResult.groups);
    }

    @Override
    public int hashCode() {
        return Objects.hash(authenticatedUser, isAuthenticated, tenants, groups);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class AuthenticationResult {\n");
        sb.append("    authenticatedUser: ").append(toIndentedString(authenticatedUser)).append("\n");
        sb.append("    isAuthenticated: ").append(toIndentedString(isAuthenticated)).append("\n");
        sb.append("    tenants: ").append(toIndentedString(tenants)).append("\n");
        sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

