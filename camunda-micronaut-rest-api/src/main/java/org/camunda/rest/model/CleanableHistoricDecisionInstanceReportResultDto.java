/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.18.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.camunda.rest.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import io.micronaut.core.annotation.Introspected;
import io.micronaut.core.annotation.Nullable;

import javax.annotation.Generated;
import java.util.Objects;

/**
 * CleanableHistoricDecisionInstanceReportResultDto
 */
@JsonPropertyOrder({
  CleanableHistoricDecisionInstanceReportResultDto.JSON_PROPERTY_DECISION_DEFINITION_ID,
  CleanableHistoricDecisionInstanceReportResultDto.JSON_PROPERTY_DECISION_DEFINITION_KEY,
  CleanableHistoricDecisionInstanceReportResultDto.JSON_PROPERTY_DECISION_DEFINITION_NAME,
  CleanableHistoricDecisionInstanceReportResultDto.JSON_PROPERTY_DECISION_DEFINITION_VERSION,
  CleanableHistoricDecisionInstanceReportResultDto.JSON_PROPERTY_HISTORY_TIME_TO_LIVE,
  CleanableHistoricDecisionInstanceReportResultDto.JSON_PROPERTY_FINISHED_DECISION_INSTANCE_COUNT,
  CleanableHistoricDecisionInstanceReportResultDto.JSON_PROPERTY_CLEANABLE_DECISION_INSTANCE_COUNT,
  CleanableHistoricDecisionInstanceReportResultDto.JSON_PROPERTY_TENANT_ID
})
@JsonTypeName("CleanableHistoricDecisionInstanceReportResultDto")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen")
@Introspected
public class CleanableHistoricDecisionInstanceReportResultDto {
    public static final String JSON_PROPERTY_DECISION_DEFINITION_ID = "decisionDefinitionId";
    private String decisionDefinitionId;

    public static final String JSON_PROPERTY_DECISION_DEFINITION_KEY = "decisionDefinitionKey";
    private String decisionDefinitionKey;

    public static final String JSON_PROPERTY_DECISION_DEFINITION_NAME = "decisionDefinitionName";
    private String decisionDefinitionName;

    public static final String JSON_PROPERTY_DECISION_DEFINITION_VERSION = "decisionDefinitionVersion";
    private Integer decisionDefinitionVersion;

    public static final String JSON_PROPERTY_HISTORY_TIME_TO_LIVE = "historyTimeToLive";
    private Integer historyTimeToLive;

    public static final String JSON_PROPERTY_FINISHED_DECISION_INSTANCE_COUNT = "finishedDecisionInstanceCount";
    private Long finishedDecisionInstanceCount;

    public static final String JSON_PROPERTY_CLEANABLE_DECISION_INSTANCE_COUNT = "cleanableDecisionInstanceCount";
    private Long cleanableDecisionInstanceCount;

    public static final String JSON_PROPERTY_TENANT_ID = "tenantId";
    private String tenantId;

    public CleanableHistoricDecisionInstanceReportResultDto() {
    }

    public CleanableHistoricDecisionInstanceReportResultDto decisionDefinitionId(String decisionDefinitionId) {
        this.decisionDefinitionId = decisionDefinitionId;
        return this;
    }

    /**
     * The id of the decision definition.
     * @return decisionDefinitionId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_DECISION_DEFINITION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDecisionDefinitionId() {
        return decisionDefinitionId;
    }

    @JsonProperty(JSON_PROPERTY_DECISION_DEFINITION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDecisionDefinitionId(String decisionDefinitionId) {
        this.decisionDefinitionId = decisionDefinitionId;
    }

    public CleanableHistoricDecisionInstanceReportResultDto decisionDefinitionKey(String decisionDefinitionKey) {
        this.decisionDefinitionKey = decisionDefinitionKey;
        return this;
    }

    /**
     * The key of the decision definition.
     * @return decisionDefinitionKey
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_DECISION_DEFINITION_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDecisionDefinitionKey() {
        return decisionDefinitionKey;
    }

    @JsonProperty(JSON_PROPERTY_DECISION_DEFINITION_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDecisionDefinitionKey(String decisionDefinitionKey) {
        this.decisionDefinitionKey = decisionDefinitionKey;
    }

    public CleanableHistoricDecisionInstanceReportResultDto decisionDefinitionName(String decisionDefinitionName) {
        this.decisionDefinitionName = decisionDefinitionName;
        return this;
    }

    /**
     * The name of the decision definition.
     * @return decisionDefinitionName
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_DECISION_DEFINITION_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDecisionDefinitionName() {
        return decisionDefinitionName;
    }

    @JsonProperty(JSON_PROPERTY_DECISION_DEFINITION_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDecisionDefinitionName(String decisionDefinitionName) {
        this.decisionDefinitionName = decisionDefinitionName;
    }

    public CleanableHistoricDecisionInstanceReportResultDto decisionDefinitionVersion(Integer decisionDefinitionVersion) {
        this.decisionDefinitionVersion = decisionDefinitionVersion;
        return this;
    }

    /**
     * The version of the decision definition.
     * @return decisionDefinitionVersion
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_DECISION_DEFINITION_VERSION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getDecisionDefinitionVersion() {
        return decisionDefinitionVersion;
    }

    @JsonProperty(JSON_PROPERTY_DECISION_DEFINITION_VERSION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDecisionDefinitionVersion(Integer decisionDefinitionVersion) {
        this.decisionDefinitionVersion = decisionDefinitionVersion;
    }

    public CleanableHistoricDecisionInstanceReportResultDto historyTimeToLive(Integer historyTimeToLive) {
        this.historyTimeToLive = historyTimeToLive;
        return this;
    }

    /**
     * The history time to live of the decision definition.
     * @return historyTimeToLive
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_HISTORY_TIME_TO_LIVE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getHistoryTimeToLive() {
        return historyTimeToLive;
    }

    @JsonProperty(JSON_PROPERTY_HISTORY_TIME_TO_LIVE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setHistoryTimeToLive(Integer historyTimeToLive) {
        this.historyTimeToLive = historyTimeToLive;
    }

    public CleanableHistoricDecisionInstanceReportResultDto finishedDecisionInstanceCount(Long finishedDecisionInstanceCount) {
        this.finishedDecisionInstanceCount = finishedDecisionInstanceCount;
        return this;
    }

    /**
     * The count of the finished historic decision instances.
     * @return finishedDecisionInstanceCount
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_FINISHED_DECISION_INSTANCE_COUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Long getFinishedDecisionInstanceCount() {
        return finishedDecisionInstanceCount;
    }

    @JsonProperty(JSON_PROPERTY_FINISHED_DECISION_INSTANCE_COUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFinishedDecisionInstanceCount(Long finishedDecisionInstanceCount) {
        this.finishedDecisionInstanceCount = finishedDecisionInstanceCount;
    }

    public CleanableHistoricDecisionInstanceReportResultDto cleanableDecisionInstanceCount(Long cleanableDecisionInstanceCount) {
        this.cleanableDecisionInstanceCount = cleanableDecisionInstanceCount;
        return this;
    }

    /**
     * The count of the cleanable historic decision instances, referring to history time to live.
     * @return cleanableDecisionInstanceCount
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_CLEANABLE_DECISION_INSTANCE_COUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Long getCleanableDecisionInstanceCount() {
        return cleanableDecisionInstanceCount;
    }

    @JsonProperty(JSON_PROPERTY_CLEANABLE_DECISION_INSTANCE_COUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCleanableDecisionInstanceCount(Long cleanableDecisionInstanceCount) {
        this.cleanableDecisionInstanceCount = cleanableDecisionInstanceCount;
    }

    public CleanableHistoricDecisionInstanceReportResultDto tenantId(String tenantId) {
        this.tenantId = tenantId;
        return this;
    }

    /**
     * The tenant id of the decision definition.
     * @return tenantId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_TENANT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getTenantId() {
        return tenantId;
    }

    @JsonProperty(JSON_PROPERTY_TENANT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTenantId(String tenantId) {
        this.tenantId = tenantId;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CleanableHistoricDecisionInstanceReportResultDto cleanableHistoricDecisionInstanceReportResultDto = (CleanableHistoricDecisionInstanceReportResultDto) o;
        return Objects.equals(this.decisionDefinitionId, cleanableHistoricDecisionInstanceReportResultDto.decisionDefinitionId) &&
            Objects.equals(this.decisionDefinitionKey, cleanableHistoricDecisionInstanceReportResultDto.decisionDefinitionKey) &&
            Objects.equals(this.decisionDefinitionName, cleanableHistoricDecisionInstanceReportResultDto.decisionDefinitionName) &&
            Objects.equals(this.decisionDefinitionVersion, cleanableHistoricDecisionInstanceReportResultDto.decisionDefinitionVersion) &&
            Objects.equals(this.historyTimeToLive, cleanableHistoricDecisionInstanceReportResultDto.historyTimeToLive) &&
            Objects.equals(this.finishedDecisionInstanceCount, cleanableHistoricDecisionInstanceReportResultDto.finishedDecisionInstanceCount) &&
            Objects.equals(this.cleanableDecisionInstanceCount, cleanableHistoricDecisionInstanceReportResultDto.cleanableDecisionInstanceCount) &&
            Objects.equals(this.tenantId, cleanableHistoricDecisionInstanceReportResultDto.tenantId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(decisionDefinitionId, decisionDefinitionKey, decisionDefinitionName, decisionDefinitionVersion, historyTimeToLive, finishedDecisionInstanceCount, cleanableDecisionInstanceCount, tenantId);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CleanableHistoricDecisionInstanceReportResultDto {\n");
        sb.append("    decisionDefinitionId: ").append(toIndentedString(decisionDefinitionId)).append("\n");
        sb.append("    decisionDefinitionKey: ").append(toIndentedString(decisionDefinitionKey)).append("\n");
        sb.append("    decisionDefinitionName: ").append(toIndentedString(decisionDefinitionName)).append("\n");
        sb.append("    decisionDefinitionVersion: ").append(toIndentedString(decisionDefinitionVersion)).append("\n");
        sb.append("    historyTimeToLive: ").append(toIndentedString(historyTimeToLive)).append("\n");
        sb.append("    finishedDecisionInstanceCount: ").append(toIndentedString(finishedDecisionInstanceCount)).append("\n");
        sb.append("    cleanableDecisionInstanceCount: ").append(toIndentedString(cleanableDecisionInstanceCount)).append("\n");
        sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

