/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.18.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.camunda.rest.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import io.micronaut.core.annotation.Introspected;
import io.micronaut.core.annotation.Nullable;

import javax.annotation.Generated;
import java.math.BigDecimal;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

/**
 * ParseExceptionDto
 */
@JsonPropertyOrder({
  ParseExceptionDto.JSON_PROPERTY_DETAILS,
  ParseExceptionDto.JSON_PROPERTY_TYPE,
  ParseExceptionDto.JSON_PROPERTY_MESSAGE,
  ParseExceptionDto.JSON_PROPERTY_CODE
})
@JsonTypeName("ParseExceptionDto")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen")
@Introspected
public class ParseExceptionDto {
    public static final String JSON_PROPERTY_DETAILS = "details";
    private Map<String, ResourceReportDto> details = null;

    public static final String JSON_PROPERTY_TYPE = "type";
    private String type;

    public static final String JSON_PROPERTY_MESSAGE = "message";
    private String message;

    public static final String JSON_PROPERTY_CODE = "code";
    private BigDecimal code;

    public ParseExceptionDto() {
    }

    public ParseExceptionDto details(Map<String, ResourceReportDto> details) {
        this.details = details;
        return this;
    }

    public ParseExceptionDto putDetailsItem(String key, ResourceReportDto detailsItem) {
        if (this.details == null) {
            this.details = new HashMap<>();
        }
        this.details.put(key, detailsItem);
        return this;
  }

    /**
     * A JSON Object containing list of errors and warnings occurred during deployment.
     * @return details
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_DETAILS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Map<String, ResourceReportDto> getDetails() {
        return details;
    }

    @JsonProperty(JSON_PROPERTY_DETAILS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDetails(Map<String, ResourceReportDto> details) {
        this.details = details;
    }

    public ParseExceptionDto type(String type) {
        this.type = type;
        return this;
    }

    /**
     * An exception class indicating the occurred error.
     * @return type
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getType() {
        return type;
    }

    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setType(String type) {
        this.type = type;
    }

    public ParseExceptionDto message(String message) {
        this.message = message;
        return this;
    }

    /**
     * A detailed message of the error.
     * @return message
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_MESSAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getMessage() {
        return message;
    }

    @JsonProperty(JSON_PROPERTY_MESSAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMessage(String message) {
        this.message = message;
    }

    public ParseExceptionDto code(BigDecimal code) {
        this.code = code;
        return this;
    }

    /**
     * The code allows your client application to identify the error in an automated fashion. You can look up the meaning of all built-in codes and learn how to add custom codes in the [User Guide](https://docs.camunda.org/manual/7.18/user-guide/process-engine/error-handling/#exception-codes).
     * @return code
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_CODE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public BigDecimal getCode() {
        return code;
    }

    @JsonProperty(JSON_PROPERTY_CODE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCode(BigDecimal code) {
        this.code = code;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ParseExceptionDto parseExceptionDto = (ParseExceptionDto) o;
        return Objects.equals(this.details, parseExceptionDto.details) &&
            Objects.equals(this.type, parseExceptionDto.type) &&
            Objects.equals(this.message, parseExceptionDto.message) &&
            Objects.equals(this.code, parseExceptionDto.code);
    }

    @Override
    public int hashCode() {
        return Objects.hash(details, type, message, code);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ParseExceptionDto {\n");
        sb.append("    details: ").append(toIndentedString(details)).append("\n");
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("    message: ").append(toIndentedString(message)).append("\n");
        sb.append("    code: ").append(toIndentedString(code)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

