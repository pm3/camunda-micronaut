/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.18.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.camunda.rest.model;

import com.fasterxml.jackson.annotation.*;
import io.micronaut.core.annotation.Introspected;
import io.micronaut.core.annotation.Nullable;

import javax.annotation.Generated;
import java.time.OffsetDateTime;
import java.util.Objects;

/**
 * MetricsIntervalResultDto
 */
@JsonPropertyOrder({
  MetricsIntervalResultDto.JSON_PROPERTY_TIMESTAMP,
  MetricsIntervalResultDto.JSON_PROPERTY_NAME,
  MetricsIntervalResultDto.JSON_PROPERTY_REPORTER,
  MetricsIntervalResultDto.JSON_PROPERTY_VALUE
})
@JsonTypeName("MetricsIntervalResultDto")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen")
@Introspected
public class MetricsIntervalResultDto {
    public static final String JSON_PROPERTY_TIMESTAMP = "timestamp";
    private OffsetDateTime timestamp;

    public static final String JSON_PROPERTY_NAME = "name";
    private String name;

    public static final String JSON_PROPERTY_REPORTER = "reporter";
    private String reporter;

    public static final String JSON_PROPERTY_VALUE = "value";
    private Long value;

    public MetricsIntervalResultDto() {
    }

    public MetricsIntervalResultDto timestamp(OffsetDateTime timestamp) {
        this.timestamp = timestamp;
        return this;
    }

    /**
     * The interval timestamp.
     * @return timestamp
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_TIMESTAMP)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public OffsetDateTime getTimestamp() {
        return timestamp;
    }

    @JsonProperty(JSON_PROPERTY_TIMESTAMP)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public void setTimestamp(OffsetDateTime timestamp) {
        this.timestamp = timestamp;
    }

    public MetricsIntervalResultDto name(String name) {
        this.name = name;
        return this;
    }

    /**
     * The name of the metric.
     * @return name
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getName() {
        return name;
    }

    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setName(String name) {
        this.name = name;
    }

    public MetricsIntervalResultDto reporter(String reporter) {
        this.reporter = reporter;
        return this;
    }

    /**
     * The reporter of the metric. &#x60;null&#x60; if the metrics are aggregated by reporter.
     * @return reporter
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_REPORTER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getReporter() {
        return reporter;
    }

    @JsonProperty(JSON_PROPERTY_REPORTER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setReporter(String reporter) {
        this.reporter = reporter;
    }

    public MetricsIntervalResultDto value(Long value) {
        this.value = value;
        return this;
    }

    /**
     * The value of the metric aggregated by the interval.
     * @return value
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_VALUE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Long getValue() {
        return value;
    }

    @JsonProperty(JSON_PROPERTY_VALUE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setValue(Long value) {
        this.value = value;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        MetricsIntervalResultDto metricsIntervalResultDto = (MetricsIntervalResultDto) o;
        return Objects.equals(this.timestamp, metricsIntervalResultDto.timestamp) &&
            Objects.equals(this.name, metricsIntervalResultDto.name) &&
            Objects.equals(this.reporter, metricsIntervalResultDto.reporter) &&
            Objects.equals(this.value, metricsIntervalResultDto.value);
    }

    @Override
    public int hashCode() {
        return Objects.hash(timestamp, name, reporter, value);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class MetricsIntervalResultDto {\n");
        sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    reporter: ").append(toIndentedString(reporter)).append("\n");
        sb.append("    value: ").append(toIndentedString(value)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

