/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.18.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.camunda.rest.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import io.micronaut.core.annotation.Introspected;
import io.micronaut.core.annotation.Nullable;

import javax.annotation.Generated;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * A Historic Job Log instance query which defines a list of Historic Job Log instances
 */
@JsonPropertyOrder({
  HistoricJobLogQueryDto.JSON_PROPERTY_LOG_ID,
  HistoricJobLogQueryDto.JSON_PROPERTY_JOB_ID,
  HistoricJobLogQueryDto.JSON_PROPERTY_JOB_EXCEPTION_MESSAGE,
  HistoricJobLogQueryDto.JSON_PROPERTY_JOB_DEFINITION_ID,
  HistoricJobLogQueryDto.JSON_PROPERTY_JOB_DEFINITION_TYPE,
  HistoricJobLogQueryDto.JSON_PROPERTY_JOB_DEFINITION_CONFIGURATION,
  HistoricJobLogQueryDto.JSON_PROPERTY_ACTIVITY_ID_IN,
  HistoricJobLogQueryDto.JSON_PROPERTY_FAILED_ACTIVITY_ID_IN,
  HistoricJobLogQueryDto.JSON_PROPERTY_EXECUTION_ID_IN,
  HistoricJobLogQueryDto.JSON_PROPERTY_PROCESS_INSTANCE_ID,
  HistoricJobLogQueryDto.JSON_PROPERTY_PROCESS_DEFINITION_ID,
  HistoricJobLogQueryDto.JSON_PROPERTY_PROCESS_DEFINITION_KEY,
  HistoricJobLogQueryDto.JSON_PROPERTY_DEPLOYMENT_ID,
  HistoricJobLogQueryDto.JSON_PROPERTY_TENANT_ID_IN,
  HistoricJobLogQueryDto.JSON_PROPERTY_WITHOUT_TENANT_ID,
  HistoricJobLogQueryDto.JSON_PROPERTY_HOSTNAME,
  HistoricJobLogQueryDto.JSON_PROPERTY_JOB_PRIORITY_LOWER_THAN_OR_EQUALS,
  HistoricJobLogQueryDto.JSON_PROPERTY_JOB_PRIORITY_HIGHER_THAN_OR_EQUALS,
  HistoricJobLogQueryDto.JSON_PROPERTY_CREATION_LOG,
  HistoricJobLogQueryDto.JSON_PROPERTY_FAILURE_LOG,
  HistoricJobLogQueryDto.JSON_PROPERTY_SUCCESS_LOG,
  HistoricJobLogQueryDto.JSON_PROPERTY_DELETION_LOG,
  HistoricJobLogQueryDto.JSON_PROPERTY_SORTING
})
@JsonTypeName("HistoricJobLogQueryDto")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen")
@Introspected
public class HistoricJobLogQueryDto {
    public static final String JSON_PROPERTY_LOG_ID = "logId";
    private String logId;

    public static final String JSON_PROPERTY_JOB_ID = "jobId";
    private String jobId;

    public static final String JSON_PROPERTY_JOB_EXCEPTION_MESSAGE = "jobExceptionMessage";
    private String jobExceptionMessage;

    public static final String JSON_PROPERTY_JOB_DEFINITION_ID = "jobDefinitionId";
    private String jobDefinitionId;

    public static final String JSON_PROPERTY_JOB_DEFINITION_TYPE = "jobDefinitionType";
    private String jobDefinitionType;

    public static final String JSON_PROPERTY_JOB_DEFINITION_CONFIGURATION = "jobDefinitionConfiguration";
    private String jobDefinitionConfiguration;

    public static final String JSON_PROPERTY_ACTIVITY_ID_IN = "activityIdIn";
    private List<String> activityIdIn = null;

    public static final String JSON_PROPERTY_FAILED_ACTIVITY_ID_IN = "failedActivityIdIn";
    private List<String> failedActivityIdIn = null;

    public static final String JSON_PROPERTY_EXECUTION_ID_IN = "executionIdIn";
    private List<String> executionIdIn = null;

    public static final String JSON_PROPERTY_PROCESS_INSTANCE_ID = "processInstanceId";
    private String processInstanceId;

    public static final String JSON_PROPERTY_PROCESS_DEFINITION_ID = "processDefinitionId";
    private String processDefinitionId;

    public static final String JSON_PROPERTY_PROCESS_DEFINITION_KEY = "processDefinitionKey";
    private String processDefinitionKey;

    public static final String JSON_PROPERTY_DEPLOYMENT_ID = "deploymentId";
    private String deploymentId;

    public static final String JSON_PROPERTY_TENANT_ID_IN = "tenantIdIn";
    private List<String> tenantIdIn = null;

    public static final String JSON_PROPERTY_WITHOUT_TENANT_ID = "withoutTenantId";
    private Boolean withoutTenantId;

    public static final String JSON_PROPERTY_HOSTNAME = "hostname";
    private String hostname;

    public static final String JSON_PROPERTY_JOB_PRIORITY_LOWER_THAN_OR_EQUALS = "jobPriorityLowerThanOrEquals";
    private Long jobPriorityLowerThanOrEquals;

    public static final String JSON_PROPERTY_JOB_PRIORITY_HIGHER_THAN_OR_EQUALS = "jobPriorityHigherThanOrEquals";
    private Long jobPriorityHigherThanOrEquals;

    public static final String JSON_PROPERTY_CREATION_LOG = "creationLog";
    private Boolean creationLog;

    public static final String JSON_PROPERTY_FAILURE_LOG = "failureLog";
    private Boolean failureLog;

    public static final String JSON_PROPERTY_SUCCESS_LOG = "successLog";
    private Boolean successLog;

    public static final String JSON_PROPERTY_DELETION_LOG = "deletionLog";
    private Boolean deletionLog;

    public static final String JSON_PROPERTY_SORTING = "sorting";
    private List<HistoricJobLogQueryDtoSortingInner> sorting = null;

    public HistoricJobLogQueryDto() {
    }

    public HistoricJobLogQueryDto logId(String logId) {
        this.logId = logId;
        return this;
    }

    /**
     * Filter by historic job log id.
     * @return logId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_LOG_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getLogId() {
        return logId;
    }

    @JsonProperty(JSON_PROPERTY_LOG_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLogId(String logId) {
        this.logId = logId;
    }

    public HistoricJobLogQueryDto jobId(String jobId) {
        this.jobId = jobId;
        return this;
    }

    /**
     * Filter by job id.
     * @return jobId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_JOB_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getJobId() {
        return jobId;
    }

    @JsonProperty(JSON_PROPERTY_JOB_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setJobId(String jobId) {
        this.jobId = jobId;
    }

    public HistoricJobLogQueryDto jobExceptionMessage(String jobExceptionMessage) {
        this.jobExceptionMessage = jobExceptionMessage;
        return this;
    }

    /**
     * Filter by job exception message.
     * @return jobExceptionMessage
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_JOB_EXCEPTION_MESSAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getJobExceptionMessage() {
        return jobExceptionMessage;
    }

    @JsonProperty(JSON_PROPERTY_JOB_EXCEPTION_MESSAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setJobExceptionMessage(String jobExceptionMessage) {
        this.jobExceptionMessage = jobExceptionMessage;
    }

    public HistoricJobLogQueryDto jobDefinitionId(String jobDefinitionId) {
        this.jobDefinitionId = jobDefinitionId;
        return this;
    }

    /**
     * Filter by job definition id.
     * @return jobDefinitionId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_JOB_DEFINITION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getJobDefinitionId() {
        return jobDefinitionId;
    }

    @JsonProperty(JSON_PROPERTY_JOB_DEFINITION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setJobDefinitionId(String jobDefinitionId) {
        this.jobDefinitionId = jobDefinitionId;
    }

    public HistoricJobLogQueryDto jobDefinitionType(String jobDefinitionType) {
        this.jobDefinitionType = jobDefinitionType;
        return this;
    }

    /**
     * Filter by job definition type. See the [User Guide](https://docs.camunda.org/manual/7.18/user-guide/process-engine/the-job-executor/#job-creation) for more information about job definition types.
     * @return jobDefinitionType
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_JOB_DEFINITION_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getJobDefinitionType() {
        return jobDefinitionType;
    }

    @JsonProperty(JSON_PROPERTY_JOB_DEFINITION_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setJobDefinitionType(String jobDefinitionType) {
        this.jobDefinitionType = jobDefinitionType;
    }

    public HistoricJobLogQueryDto jobDefinitionConfiguration(String jobDefinitionConfiguration) {
        this.jobDefinitionConfiguration = jobDefinitionConfiguration;
        return this;
    }

    /**
     * Filter by job definition configuration.
     * @return jobDefinitionConfiguration
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_JOB_DEFINITION_CONFIGURATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getJobDefinitionConfiguration() {
        return jobDefinitionConfiguration;
    }

    @JsonProperty(JSON_PROPERTY_JOB_DEFINITION_CONFIGURATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setJobDefinitionConfiguration(String jobDefinitionConfiguration) {
        this.jobDefinitionConfiguration = jobDefinitionConfiguration;
    }

    public HistoricJobLogQueryDto activityIdIn(List<String> activityIdIn) {
        this.activityIdIn = activityIdIn;
        return this;
    }

    public HistoricJobLogQueryDto addActivityIdInItem(String activityIdInItem) {
        if (this.activityIdIn == null) {
            this.activityIdIn = new ArrayList<>();
        }
        this.activityIdIn.add(activityIdInItem);
        return this;
    }

    /**
     * Only include historic job logs which belong to one of the passed activity ids.
     * @return activityIdIn
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_ACTIVITY_ID_IN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<String> getActivityIdIn() {
        return activityIdIn;
    }

    @JsonProperty(JSON_PROPERTY_ACTIVITY_ID_IN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setActivityIdIn(List<String> activityIdIn) {
        this.activityIdIn = activityIdIn;
    }

    public HistoricJobLogQueryDto failedActivityIdIn(List<String> failedActivityIdIn) {
        this.failedActivityIdIn = failedActivityIdIn;
        return this;
    }

    public HistoricJobLogQueryDto addFailedActivityIdInItem(String failedActivityIdInItem) {
        if (this.failedActivityIdIn == null) {
            this.failedActivityIdIn = new ArrayList<>();
        }
        this.failedActivityIdIn.add(failedActivityIdInItem);
        return this;
    }

    /**
     * Only include historic job logs which belong to failures of one of the passed activity ids.
     * @return failedActivityIdIn
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_FAILED_ACTIVITY_ID_IN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<String> getFailedActivityIdIn() {
        return failedActivityIdIn;
    }

    @JsonProperty(JSON_PROPERTY_FAILED_ACTIVITY_ID_IN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFailedActivityIdIn(List<String> failedActivityIdIn) {
        this.failedActivityIdIn = failedActivityIdIn;
    }

    public HistoricJobLogQueryDto executionIdIn(List<String> executionIdIn) {
        this.executionIdIn = executionIdIn;
        return this;
    }

    public HistoricJobLogQueryDto addExecutionIdInItem(String executionIdInItem) {
        if (this.executionIdIn == null) {
            this.executionIdIn = new ArrayList<>();
        }
        this.executionIdIn.add(executionIdInItem);
        return this;
    }

    /**
     * Only include historic job logs which belong to one of the passed execution ids.
     * @return executionIdIn
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_EXECUTION_ID_IN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<String> getExecutionIdIn() {
        return executionIdIn;
    }

    @JsonProperty(JSON_PROPERTY_EXECUTION_ID_IN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setExecutionIdIn(List<String> executionIdIn) {
        this.executionIdIn = executionIdIn;
    }

    public HistoricJobLogQueryDto processInstanceId(String processInstanceId) {
        this.processInstanceId = processInstanceId;
        return this;
    }

    /**
     * Filter by process instance id.
     * @return processInstanceId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_PROCESS_INSTANCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getProcessInstanceId() {
        return processInstanceId;
    }

    @JsonProperty(JSON_PROPERTY_PROCESS_INSTANCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setProcessInstanceId(String processInstanceId) {
        this.processInstanceId = processInstanceId;
    }

    public HistoricJobLogQueryDto processDefinitionId(String processDefinitionId) {
        this.processDefinitionId = processDefinitionId;
        return this;
    }

    /**
     * Filter by process definition id.
     * @return processDefinitionId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getProcessDefinitionId() {
        return processDefinitionId;
    }

    @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setProcessDefinitionId(String processDefinitionId) {
        this.processDefinitionId = processDefinitionId;
    }

    public HistoricJobLogQueryDto processDefinitionKey(String processDefinitionKey) {
        this.processDefinitionKey = processDefinitionKey;
        return this;
    }

    /**
     * Filter by process definition key.
     * @return processDefinitionKey
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getProcessDefinitionKey() {
        return processDefinitionKey;
    }

    @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setProcessDefinitionKey(String processDefinitionKey) {
        this.processDefinitionKey = processDefinitionKey;
    }

    public HistoricJobLogQueryDto deploymentId(String deploymentId) {
        this.deploymentId = deploymentId;
        return this;
    }

    /**
     * Filter by deployment id.
     * @return deploymentId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_DEPLOYMENT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDeploymentId() {
        return deploymentId;
    }

    @JsonProperty(JSON_PROPERTY_DEPLOYMENT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDeploymentId(String deploymentId) {
        this.deploymentId = deploymentId;
    }

    public HistoricJobLogQueryDto tenantIdIn(List<String> tenantIdIn) {
        this.tenantIdIn = tenantIdIn;
        return this;
    }

    public HistoricJobLogQueryDto addTenantIdInItem(String tenantIdInItem) {
        if (this.tenantIdIn == null) {
            this.tenantIdIn = new ArrayList<>();
        }
        this.tenantIdIn.add(tenantIdInItem);
        return this;
    }

    /**
     * Only include historic job log entries which belong to one of the passed and comma- separated tenant ids.
     * @return tenantIdIn
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_TENANT_ID_IN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<String> getTenantIdIn() {
        return tenantIdIn;
    }

    @JsonProperty(JSON_PROPERTY_TENANT_ID_IN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTenantIdIn(List<String> tenantIdIn) {
        this.tenantIdIn = tenantIdIn;
    }

    public HistoricJobLogQueryDto withoutTenantId(Boolean withoutTenantId) {
        this.withoutTenantId = withoutTenantId;
        return this;
    }

    /**
     * Only include historic job log entries that belong to no tenant. Value may only be &#x60;true&#x60;, as &#x60;false&#x60; is the default behavior.
     * @return withoutTenantId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_WITHOUT_TENANT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getWithoutTenantId() {
        return withoutTenantId;
    }

    @JsonProperty(JSON_PROPERTY_WITHOUT_TENANT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setWithoutTenantId(Boolean withoutTenantId) {
        this.withoutTenantId = withoutTenantId;
    }

    public HistoricJobLogQueryDto hostname(String hostname) {
        this.hostname = hostname;
        return this;
    }

    /**
     * Filter by hostname.
     * @return hostname
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_HOSTNAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getHostname() {
        return hostname;
    }

    @JsonProperty(JSON_PROPERTY_HOSTNAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setHostname(String hostname) {
        this.hostname = hostname;
    }

    public HistoricJobLogQueryDto jobPriorityLowerThanOrEquals(Long jobPriorityLowerThanOrEquals) {
        this.jobPriorityLowerThanOrEquals = jobPriorityLowerThanOrEquals;
        return this;
    }

    /**
     * Only include logs for which the associated job had a priority lower than or equal to the given value. Value must be a valid &#x60;long&#x60; value.
     * @return jobPriorityLowerThanOrEquals
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_JOB_PRIORITY_LOWER_THAN_OR_EQUALS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Long getJobPriorityLowerThanOrEquals() {
        return jobPriorityLowerThanOrEquals;
    }

    @JsonProperty(JSON_PROPERTY_JOB_PRIORITY_LOWER_THAN_OR_EQUALS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setJobPriorityLowerThanOrEquals(Long jobPriorityLowerThanOrEquals) {
        this.jobPriorityLowerThanOrEquals = jobPriorityLowerThanOrEquals;
    }

    public HistoricJobLogQueryDto jobPriorityHigherThanOrEquals(Long jobPriorityHigherThanOrEquals) {
        this.jobPriorityHigherThanOrEquals = jobPriorityHigherThanOrEquals;
        return this;
    }

    /**
     * Only include logs for which the associated job had a priority higher than or equal to the given value. Value must be a valid &#x60;long&#x60; value.
     * @return jobPriorityHigherThanOrEquals
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_JOB_PRIORITY_HIGHER_THAN_OR_EQUALS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Long getJobPriorityHigherThanOrEquals() {
        return jobPriorityHigherThanOrEquals;
    }

    @JsonProperty(JSON_PROPERTY_JOB_PRIORITY_HIGHER_THAN_OR_EQUALS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setJobPriorityHigherThanOrEquals(Long jobPriorityHigherThanOrEquals) {
        this.jobPriorityHigherThanOrEquals = jobPriorityHigherThanOrEquals;
    }

    public HistoricJobLogQueryDto creationLog(Boolean creationLog) {
        this.creationLog = creationLog;
        return this;
    }

    /**
     * Only include creation logs. Value may only be &#x60;true&#x60;, as &#x60;false&#x60; is the default behavior.
     * @return creationLog
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_CREATION_LOG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getCreationLog() {
        return creationLog;
    }

    @JsonProperty(JSON_PROPERTY_CREATION_LOG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCreationLog(Boolean creationLog) {
        this.creationLog = creationLog;
    }

    public HistoricJobLogQueryDto failureLog(Boolean failureLog) {
        this.failureLog = failureLog;
        return this;
    }

    /**
     * Only include failure logs. Value may only be &#x60;true&#x60;, as &#x60;false&#x60; is the default behavior.
     * @return failureLog
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_FAILURE_LOG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getFailureLog() {
        return failureLog;
    }

    @JsonProperty(JSON_PROPERTY_FAILURE_LOG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFailureLog(Boolean failureLog) {
        this.failureLog = failureLog;
    }

    public HistoricJobLogQueryDto successLog(Boolean successLog) {
        this.successLog = successLog;
        return this;
    }

    /**
     * Only include success logs. Value may only be &#x60;true&#x60;, as &#x60;false&#x60; is the default behavior.
     * @return successLog
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_SUCCESS_LOG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getSuccessLog() {
        return successLog;
    }

    @JsonProperty(JSON_PROPERTY_SUCCESS_LOG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSuccessLog(Boolean successLog) {
        this.successLog = successLog;
    }

    public HistoricJobLogQueryDto deletionLog(Boolean deletionLog) {
        this.deletionLog = deletionLog;
        return this;
    }

    /**
     * Only include deletion logs. Value may only be &#x60;true&#x60;, as &#x60;false&#x60; is the default behavior.
     * @return deletionLog
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_DELETION_LOG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getDeletionLog() {
        return deletionLog;
    }

    @JsonProperty(JSON_PROPERTY_DELETION_LOG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDeletionLog(Boolean deletionLog) {
        this.deletionLog = deletionLog;
    }

    public HistoricJobLogQueryDto sorting(List<HistoricJobLogQueryDtoSortingInner> sorting) {
        this.sorting = sorting;
        return this;
    }

    public HistoricJobLogQueryDto addSortingItem(HistoricJobLogQueryDtoSortingInner sortingItem) {
        if (this.sorting == null) {
            this.sorting = new ArrayList<>();
        }
        this.sorting.add(sortingItem);
        return this;
    }

    /**
     * An array of criteria to sort the result by. Each element of the array is                        an object that specifies one ordering. The position in the array                        identifies the rank of an ordering, i.e., whether it is primary, secondary,                        etc. Sorting has no effect for &#x60;count&#x60; endpoints
     * @return sorting
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_SORTING)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<HistoricJobLogQueryDtoSortingInner> getSorting() {
        return sorting;
    }

    @JsonProperty(JSON_PROPERTY_SORTING)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSorting(List<HistoricJobLogQueryDtoSortingInner> sorting) {
        this.sorting = sorting;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        HistoricJobLogQueryDto historicJobLogQueryDto = (HistoricJobLogQueryDto) o;
        return Objects.equals(this.logId, historicJobLogQueryDto.logId) &&
            Objects.equals(this.jobId, historicJobLogQueryDto.jobId) &&
            Objects.equals(this.jobExceptionMessage, historicJobLogQueryDto.jobExceptionMessage) &&
            Objects.equals(this.jobDefinitionId, historicJobLogQueryDto.jobDefinitionId) &&
            Objects.equals(this.jobDefinitionType, historicJobLogQueryDto.jobDefinitionType) &&
            Objects.equals(this.jobDefinitionConfiguration, historicJobLogQueryDto.jobDefinitionConfiguration) &&
            Objects.equals(this.activityIdIn, historicJobLogQueryDto.activityIdIn) &&
            Objects.equals(this.failedActivityIdIn, historicJobLogQueryDto.failedActivityIdIn) &&
            Objects.equals(this.executionIdIn, historicJobLogQueryDto.executionIdIn) &&
            Objects.equals(this.processInstanceId, historicJobLogQueryDto.processInstanceId) &&
            Objects.equals(this.processDefinitionId, historicJobLogQueryDto.processDefinitionId) &&
            Objects.equals(this.processDefinitionKey, historicJobLogQueryDto.processDefinitionKey) &&
            Objects.equals(this.deploymentId, historicJobLogQueryDto.deploymentId) &&
            Objects.equals(this.tenantIdIn, historicJobLogQueryDto.tenantIdIn) &&
            Objects.equals(this.withoutTenantId, historicJobLogQueryDto.withoutTenantId) &&
            Objects.equals(this.hostname, historicJobLogQueryDto.hostname) &&
            Objects.equals(this.jobPriorityLowerThanOrEquals, historicJobLogQueryDto.jobPriorityLowerThanOrEquals) &&
            Objects.equals(this.jobPriorityHigherThanOrEquals, historicJobLogQueryDto.jobPriorityHigherThanOrEquals) &&
            Objects.equals(this.creationLog, historicJobLogQueryDto.creationLog) &&
            Objects.equals(this.failureLog, historicJobLogQueryDto.failureLog) &&
            Objects.equals(this.successLog, historicJobLogQueryDto.successLog) &&
            Objects.equals(this.deletionLog, historicJobLogQueryDto.deletionLog) &&
            Objects.equals(this.sorting, historicJobLogQueryDto.sorting);
    }

    @Override
    public int hashCode() {
        return Objects.hash(logId, jobId, jobExceptionMessage, jobDefinitionId, jobDefinitionType, jobDefinitionConfiguration, activityIdIn, failedActivityIdIn, executionIdIn, processInstanceId, processDefinitionId, processDefinitionKey, deploymentId, tenantIdIn, withoutTenantId, hostname, jobPriorityLowerThanOrEquals, jobPriorityHigherThanOrEquals, creationLog, failureLog, successLog, deletionLog, sorting);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class HistoricJobLogQueryDto {\n");
        sb.append("    logId: ").append(toIndentedString(logId)).append("\n");
        sb.append("    jobId: ").append(toIndentedString(jobId)).append("\n");
        sb.append("    jobExceptionMessage: ").append(toIndentedString(jobExceptionMessage)).append("\n");
        sb.append("    jobDefinitionId: ").append(toIndentedString(jobDefinitionId)).append("\n");
        sb.append("    jobDefinitionType: ").append(toIndentedString(jobDefinitionType)).append("\n");
        sb.append("    jobDefinitionConfiguration: ").append(toIndentedString(jobDefinitionConfiguration)).append("\n");
        sb.append("    activityIdIn: ").append(toIndentedString(activityIdIn)).append("\n");
        sb.append("    failedActivityIdIn: ").append(toIndentedString(failedActivityIdIn)).append("\n");
        sb.append("    executionIdIn: ").append(toIndentedString(executionIdIn)).append("\n");
        sb.append("    processInstanceId: ").append(toIndentedString(processInstanceId)).append("\n");
        sb.append("    processDefinitionId: ").append(toIndentedString(processDefinitionId)).append("\n");
        sb.append("    processDefinitionKey: ").append(toIndentedString(processDefinitionKey)).append("\n");
        sb.append("    deploymentId: ").append(toIndentedString(deploymentId)).append("\n");
        sb.append("    tenantIdIn: ").append(toIndentedString(tenantIdIn)).append("\n");
        sb.append("    withoutTenantId: ").append(toIndentedString(withoutTenantId)).append("\n");
        sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
        sb.append("    jobPriorityLowerThanOrEquals: ").append(toIndentedString(jobPriorityLowerThanOrEquals)).append("\n");
        sb.append("    jobPriorityHigherThanOrEquals: ").append(toIndentedString(jobPriorityHigherThanOrEquals)).append("\n");
        sb.append("    creationLog: ").append(toIndentedString(creationLog)).append("\n");
        sb.append("    failureLog: ").append(toIndentedString(failureLog)).append("\n");
        sb.append("    successLog: ").append(toIndentedString(successLog)).append("\n");
        sb.append("    deletionLog: ").append(toIndentedString(deletionLog)).append("\n");
        sb.append("    sorting: ").append(toIndentedString(sorting)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

