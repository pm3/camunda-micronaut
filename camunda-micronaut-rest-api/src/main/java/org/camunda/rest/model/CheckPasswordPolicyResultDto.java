/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.18.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.camunda.rest.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import io.micronaut.core.annotation.Introspected;
import io.micronaut.core.annotation.Nullable;

import javax.annotation.Generated;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * CheckPasswordPolicyResultDto
 */
@JsonPropertyOrder({
  CheckPasswordPolicyResultDto.JSON_PROPERTY_VALID,
  CheckPasswordPolicyResultDto.JSON_PROPERTY_RULES
})
@JsonTypeName("CheckPasswordPolicyResultDto")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen")
@Introspected
public class CheckPasswordPolicyResultDto {
    public static final String JSON_PROPERTY_VALID = "valid";
    private Boolean valid;

    public static final String JSON_PROPERTY_RULES = "rules";
    private List<PasswordPolicyRuleDto> rules = null;

    public CheckPasswordPolicyResultDto() {
    }

    public CheckPasswordPolicyResultDto valid(Boolean valid) {
        this.valid = valid;
        return this;
    }

    /**
     * &#x60;true&#x60; if the password is compliant with the policy, otherwise &#x60;false&#x60;.
     * @return valid
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_VALID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getValid() {
        return valid;
    }

    @JsonProperty(JSON_PROPERTY_VALID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setValid(Boolean valid) {
        this.valid = valid;
    }

    public CheckPasswordPolicyResultDto rules(List<PasswordPolicyRuleDto> rules) {
        this.rules = rules;
        return this;
    }

    public CheckPasswordPolicyResultDto addRulesItem(PasswordPolicyRuleDto rulesItem) {
        if (this.rules == null) {
            this.rules = new ArrayList<>();
        }
        this.rules.add(rulesItem);
        return this;
    }

    /**
     * An array of password policy rules. Each element of the array is representing one rule of the policy.
     * @return rules
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_RULES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<PasswordPolicyRuleDto> getRules() {
        return rules;
    }

    @JsonProperty(JSON_PROPERTY_RULES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRules(List<PasswordPolicyRuleDto> rules) {
        this.rules = rules;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CheckPasswordPolicyResultDto checkPasswordPolicyResultDto = (CheckPasswordPolicyResultDto) o;
        return Objects.equals(this.valid, checkPasswordPolicyResultDto.valid) &&
            Objects.equals(this.rules, checkPasswordPolicyResultDto.rules);
    }

    @Override
    public int hashCode() {
        return Objects.hash(valid, rules);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CheckPasswordPolicyResultDto {\n");
        sb.append("    valid: ").append(toIndentedString(valid)).append("\n");
        sb.append("    rules: ").append(toIndentedString(rules)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

