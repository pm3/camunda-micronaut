/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.18.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.camunda.rest.model;

import com.fasterxml.jackson.annotation.*;
import io.micronaut.core.annotation.Introspected;
import io.micronaut.core.annotation.Nullable;

import javax.annotation.Generated;
import java.time.OffsetDateTime;
import java.util.Objects;

/**
 * HistoricIncidentDto
 */
@JsonPropertyOrder({
  HistoricIncidentDto.JSON_PROPERTY_ID,
  HistoricIncidentDto.JSON_PROPERTY_PROCESS_DEFINITION_KEY,
  HistoricIncidentDto.JSON_PROPERTY_PROCESS_DEFINITION_ID,
  HistoricIncidentDto.JSON_PROPERTY_PROCESS_INSTANCE_ID,
  HistoricIncidentDto.JSON_PROPERTY_EXECUTION_ID,
  HistoricIncidentDto.JSON_PROPERTY_ROOT_PROCESS_INSTANCE_ID,
  HistoricIncidentDto.JSON_PROPERTY_CREATE_TIME,
  HistoricIncidentDto.JSON_PROPERTY_END_TIME,
  HistoricIncidentDto.JSON_PROPERTY_REMOVAL_TIME,
  HistoricIncidentDto.JSON_PROPERTY_INCIDENT_TYPE,
  HistoricIncidentDto.JSON_PROPERTY_ACTIVITY_ID,
  HistoricIncidentDto.JSON_PROPERTY_FAILED_ACTIVITY_ID,
  HistoricIncidentDto.JSON_PROPERTY_CAUSE_INCIDENT_ID,
  HistoricIncidentDto.JSON_PROPERTY_ROOT_CAUSE_INCIDENT_ID,
  HistoricIncidentDto.JSON_PROPERTY_CONFIGURATION,
  HistoricIncidentDto.JSON_PROPERTY_HISTORY_CONFIGURATION,
  HistoricIncidentDto.JSON_PROPERTY_INCIDENT_MESSAGE,
  HistoricIncidentDto.JSON_PROPERTY_TENANT_ID,
  HistoricIncidentDto.JSON_PROPERTY_JOB_DEFINITION_ID,
  HistoricIncidentDto.JSON_PROPERTY_OPEN,
  HistoricIncidentDto.JSON_PROPERTY_DELETED,
  HistoricIncidentDto.JSON_PROPERTY_RESOLVED,
  HistoricIncidentDto.JSON_PROPERTY_ANNOTATION
})
@JsonTypeName("HistoricIncidentDto")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen")
@Introspected
public class HistoricIncidentDto {
    public static final String JSON_PROPERTY_ID = "id";
    private String id;

    public static final String JSON_PROPERTY_PROCESS_DEFINITION_KEY = "processDefinitionKey";
    private String processDefinitionKey;

    public static final String JSON_PROPERTY_PROCESS_DEFINITION_ID = "processDefinitionId";
    private String processDefinitionId;

    public static final String JSON_PROPERTY_PROCESS_INSTANCE_ID = "processInstanceId";
    private String processInstanceId;

    public static final String JSON_PROPERTY_EXECUTION_ID = "executionId";
    private String executionId;

    public static final String JSON_PROPERTY_ROOT_PROCESS_INSTANCE_ID = "rootProcessInstanceId";
    private String rootProcessInstanceId;

    public static final String JSON_PROPERTY_CREATE_TIME = "createTime";
    private OffsetDateTime createTime;

    public static final String JSON_PROPERTY_END_TIME = "endTime";
    private OffsetDateTime endTime;

    public static final String JSON_PROPERTY_REMOVAL_TIME = "removalTime";
    private OffsetDateTime removalTime;

    public static final String JSON_PROPERTY_INCIDENT_TYPE = "incidentType";
    private String incidentType;

    public static final String JSON_PROPERTY_ACTIVITY_ID = "activityId";
    private String activityId;

    public static final String JSON_PROPERTY_FAILED_ACTIVITY_ID = "failedActivityId";
    private String failedActivityId;

    public static final String JSON_PROPERTY_CAUSE_INCIDENT_ID = "causeIncidentId";
    private String causeIncidentId;

    public static final String JSON_PROPERTY_ROOT_CAUSE_INCIDENT_ID = "rootCauseIncidentId";
    private String rootCauseIncidentId;

    public static final String JSON_PROPERTY_CONFIGURATION = "configuration";
    private String _configuration;

    public static final String JSON_PROPERTY_HISTORY_CONFIGURATION = "historyConfiguration";
    private String historyConfiguration;

    public static final String JSON_PROPERTY_INCIDENT_MESSAGE = "incidentMessage";
    private String incidentMessage;

    public static final String JSON_PROPERTY_TENANT_ID = "tenantId";
    private String tenantId;

    public static final String JSON_PROPERTY_JOB_DEFINITION_ID = "jobDefinitionId";
    private String jobDefinitionId;

    public static final String JSON_PROPERTY_OPEN = "open";
    private Boolean open;

    public static final String JSON_PROPERTY_DELETED = "deleted";
    private Boolean deleted;

    public static final String JSON_PROPERTY_RESOLVED = "resolved";
    private Boolean resolved;

    public static final String JSON_PROPERTY_ANNOTATION = "annotation";
    private String annotation;

    public HistoricIncidentDto() {
    }

    public HistoricIncidentDto id(String id) {
        this.id = id;
        return this;
    }

    /**
     * The id of the incident.
     * @return id
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setId(String id) {
        this.id = id;
    }

    public HistoricIncidentDto processDefinitionKey(String processDefinitionKey) {
        this.processDefinitionKey = processDefinitionKey;
        return this;
    }

    /**
     * The key of the process definition this incident is associated with.
     * @return processDefinitionKey
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getProcessDefinitionKey() {
        return processDefinitionKey;
    }

    @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setProcessDefinitionKey(String processDefinitionKey) {
        this.processDefinitionKey = processDefinitionKey;
    }

    public HistoricIncidentDto processDefinitionId(String processDefinitionId) {
        this.processDefinitionId = processDefinitionId;
        return this;
    }

    /**
     * The id of the process definition this incident is associated with.
     * @return processDefinitionId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getProcessDefinitionId() {
        return processDefinitionId;
    }

    @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setProcessDefinitionId(String processDefinitionId) {
        this.processDefinitionId = processDefinitionId;
    }

    public HistoricIncidentDto processInstanceId(String processInstanceId) {
        this.processInstanceId = processInstanceId;
        return this;
    }

    /**
     * The key of the process definition this incident is associated with.
     * @return processInstanceId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_PROCESS_INSTANCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getProcessInstanceId() {
        return processInstanceId;
    }

    @JsonProperty(JSON_PROPERTY_PROCESS_INSTANCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setProcessInstanceId(String processInstanceId) {
        this.processInstanceId = processInstanceId;
    }

    public HistoricIncidentDto executionId(String executionId) {
        this.executionId = executionId;
        return this;
    }

    /**
     * The id of the execution this incident is associated with.
     * @return executionId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_EXECUTION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getExecutionId() {
        return executionId;
    }

    @JsonProperty(JSON_PROPERTY_EXECUTION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setExecutionId(String executionId) {
        this.executionId = executionId;
    }

    public HistoricIncidentDto rootProcessInstanceId(String rootProcessInstanceId) {
        this.rootProcessInstanceId = rootProcessInstanceId;
        return this;
    }

    /**
     * The process instance id of the root process instance that initiated the process containing this incident.
     * @return rootProcessInstanceId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_ROOT_PROCESS_INSTANCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getRootProcessInstanceId() {
        return rootProcessInstanceId;
    }

    @JsonProperty(JSON_PROPERTY_ROOT_PROCESS_INSTANCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRootProcessInstanceId(String rootProcessInstanceId) {
        this.rootProcessInstanceId = rootProcessInstanceId;
    }

    public HistoricIncidentDto createTime(OffsetDateTime createTime) {
        this.createTime = createTime;
        return this;
    }

    /**
     * The time this incident happened.  [Default format](https://docs.camunda.org/manual/7.18/reference/rest/overview/date-format/) &#x60;yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSSZ&#x60;.
     * @return createTime
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_CREATE_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public OffsetDateTime getCreateTime() {
        return createTime;
    }

    @JsonProperty(JSON_PROPERTY_CREATE_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public void setCreateTime(OffsetDateTime createTime) {
        this.createTime = createTime;
    }

    public HistoricIncidentDto endTime(OffsetDateTime endTime) {
        this.endTime = endTime;
        return this;
    }

    /**
     * The time this incident has been deleted or resolved.  [Default format](https://docs.camunda.org/manual/7.18/reference/rest/overview/date-format/) &#x60;yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSSZ&#x60;.
     * @return endTime
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_END_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public OffsetDateTime getEndTime() {
        return endTime;
    }

    @JsonProperty(JSON_PROPERTY_END_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public void setEndTime(OffsetDateTime endTime) {
        this.endTime = endTime;
    }

    public HistoricIncidentDto removalTime(OffsetDateTime removalTime) {
        this.removalTime = removalTime;
        return this;
    }

    /**
     * The time after which the incident should be removed by the History Cleanup job. [Default format](https://docs.camunda.org/manual/7.18/reference/rest/overview/date-format/) &#x60;yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSSZ&#x60;.
     * @return removalTime
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_REMOVAL_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public OffsetDateTime getRemovalTime() {
        return removalTime;
    }

    @JsonProperty(JSON_PROPERTY_REMOVAL_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public void setRemovalTime(OffsetDateTime removalTime) {
        this.removalTime = removalTime;
    }

    public HistoricIncidentDto incidentType(String incidentType) {
        this.incidentType = incidentType;
        return this;
    }

    /**
     * The type of incident, for example: &#x60;failedJobs&#x60; will be returned in case of an incident which identified a failed job during the execution of a process instance. See the [User Guide](/manual/develop/user- guide/process-engine/incidents/#incident-types) for a list of incident types.
     * @return incidentType
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_INCIDENT_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getIncidentType() {
        return incidentType;
    }

    @JsonProperty(JSON_PROPERTY_INCIDENT_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIncidentType(String incidentType) {
        this.incidentType = incidentType;
    }

    public HistoricIncidentDto activityId(String activityId) {
        this.activityId = activityId;
        return this;
    }

    /**
     * The id of the activity this incident is associated with.
     * @return activityId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_ACTIVITY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getActivityId() {
        return activityId;
    }

    @JsonProperty(JSON_PROPERTY_ACTIVITY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setActivityId(String activityId) {
        this.activityId = activityId;
    }

    public HistoricIncidentDto failedActivityId(String failedActivityId) {
        this.failedActivityId = failedActivityId;
        return this;
    }

    /**
     * The id of the activity on which the last exception occurred.
     * @return failedActivityId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_FAILED_ACTIVITY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getFailedActivityId() {
        return failedActivityId;
    }

    @JsonProperty(JSON_PROPERTY_FAILED_ACTIVITY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFailedActivityId(String failedActivityId) {
        this.failedActivityId = failedActivityId;
    }

    public HistoricIncidentDto causeIncidentId(String causeIncidentId) {
        this.causeIncidentId = causeIncidentId;
        return this;
    }

    /**
     * The id of the associated cause incident which has been triggered.
     * @return causeIncidentId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_CAUSE_INCIDENT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getCauseIncidentId() {
        return causeIncidentId;
    }

    @JsonProperty(JSON_PROPERTY_CAUSE_INCIDENT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCauseIncidentId(String causeIncidentId) {
        this.causeIncidentId = causeIncidentId;
    }

    public HistoricIncidentDto rootCauseIncidentId(String rootCauseIncidentId) {
        this.rootCauseIncidentId = rootCauseIncidentId;
        return this;
    }

    /**
     * The id of the associated root cause incident which has been triggered.
     * @return rootCauseIncidentId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_ROOT_CAUSE_INCIDENT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getRootCauseIncidentId() {
        return rootCauseIncidentId;
    }

    @JsonProperty(JSON_PROPERTY_ROOT_CAUSE_INCIDENT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRootCauseIncidentId(String rootCauseIncidentId) {
        this.rootCauseIncidentId = rootCauseIncidentId;
    }

    public HistoricIncidentDto _configuration(String _configuration) {
        this._configuration = _configuration;
        return this;
    }

    /**
     * The payload of this incident.
     * @return _configuration
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_CONFIGURATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getConfiguration() {
        return _configuration;
    }

    @JsonProperty(JSON_PROPERTY_CONFIGURATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setConfiguration(String _configuration) {
        this._configuration = _configuration;
    }

    public HistoricIncidentDto historyConfiguration(String historyConfiguration) {
        this.historyConfiguration = historyConfiguration;
        return this;
    }

    /**
     * The payload of this incident at the time when it occurred.
     * @return historyConfiguration
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_HISTORY_CONFIGURATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getHistoryConfiguration() {
        return historyConfiguration;
    }

    @JsonProperty(JSON_PROPERTY_HISTORY_CONFIGURATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setHistoryConfiguration(String historyConfiguration) {
        this.historyConfiguration = historyConfiguration;
    }

    public HistoricIncidentDto incidentMessage(String incidentMessage) {
        this.incidentMessage = incidentMessage;
        return this;
    }

    /**
     * The message of this incident.
     * @return incidentMessage
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_INCIDENT_MESSAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getIncidentMessage() {
        return incidentMessage;
    }

    @JsonProperty(JSON_PROPERTY_INCIDENT_MESSAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIncidentMessage(String incidentMessage) {
        this.incidentMessage = incidentMessage;
    }

    public HistoricIncidentDto tenantId(String tenantId) {
        this.tenantId = tenantId;
        return this;
    }

    /**
     * The id of the tenant this incident is associated with.
     * @return tenantId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_TENANT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getTenantId() {
        return tenantId;
    }

    @JsonProperty(JSON_PROPERTY_TENANT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTenantId(String tenantId) {
        this.tenantId = tenantId;
    }

    public HistoricIncidentDto jobDefinitionId(String jobDefinitionId) {
        this.jobDefinitionId = jobDefinitionId;
        return this;
    }

    /**
     * The job definition id the incident is associated with.
     * @return jobDefinitionId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_JOB_DEFINITION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getJobDefinitionId() {
        return jobDefinitionId;
    }

    @JsonProperty(JSON_PROPERTY_JOB_DEFINITION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setJobDefinitionId(String jobDefinitionId) {
        this.jobDefinitionId = jobDefinitionId;
    }

    public HistoricIncidentDto open(Boolean open) {
        this.open = open;
        return this;
    }

    /**
     * If true, this incident is open.
     * @return open
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_OPEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getOpen() {
        return open;
    }

    @JsonProperty(JSON_PROPERTY_OPEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOpen(Boolean open) {
        this.open = open;
    }

    public HistoricIncidentDto deleted(Boolean deleted) {
        this.deleted = deleted;
        return this;
    }

    /**
     * If true, this incident has been deleted.
     * @return deleted
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_DELETED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getDeleted() {
        return deleted;
    }

    @JsonProperty(JSON_PROPERTY_DELETED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDeleted(Boolean deleted) {
        this.deleted = deleted;
    }

    public HistoricIncidentDto resolved(Boolean resolved) {
        this.resolved = resolved;
        return this;
    }

    /**
     * If true, this incident has been resolved.
     * @return resolved
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_RESOLVED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getResolved() {
        return resolved;
    }

    @JsonProperty(JSON_PROPERTY_RESOLVED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setResolved(Boolean resolved) {
        this.resolved = resolved;
    }

    public HistoricIncidentDto annotation(String annotation) {
        this.annotation = annotation;
        return this;
    }

    /**
     * The annotation set to the incident.
     * @return annotation
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_ANNOTATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getAnnotation() {
        return annotation;
    }

    @JsonProperty(JSON_PROPERTY_ANNOTATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAnnotation(String annotation) {
        this.annotation = annotation;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        HistoricIncidentDto historicIncidentDto = (HistoricIncidentDto) o;
        return Objects.equals(this.id, historicIncidentDto.id) &&
            Objects.equals(this.processDefinitionKey, historicIncidentDto.processDefinitionKey) &&
            Objects.equals(this.processDefinitionId, historicIncidentDto.processDefinitionId) &&
            Objects.equals(this.processInstanceId, historicIncidentDto.processInstanceId) &&
            Objects.equals(this.executionId, historicIncidentDto.executionId) &&
            Objects.equals(this.rootProcessInstanceId, historicIncidentDto.rootProcessInstanceId) &&
            Objects.equals(this.createTime, historicIncidentDto.createTime) &&
            Objects.equals(this.endTime, historicIncidentDto.endTime) &&
            Objects.equals(this.removalTime, historicIncidentDto.removalTime) &&
            Objects.equals(this.incidentType, historicIncidentDto.incidentType) &&
            Objects.equals(this.activityId, historicIncidentDto.activityId) &&
            Objects.equals(this.failedActivityId, historicIncidentDto.failedActivityId) &&
            Objects.equals(this.causeIncidentId, historicIncidentDto.causeIncidentId) &&
            Objects.equals(this.rootCauseIncidentId, historicIncidentDto.rootCauseIncidentId) &&
            Objects.equals(this._configuration, historicIncidentDto._configuration) &&
            Objects.equals(this.historyConfiguration, historicIncidentDto.historyConfiguration) &&
            Objects.equals(this.incidentMessage, historicIncidentDto.incidentMessage) &&
            Objects.equals(this.tenantId, historicIncidentDto.tenantId) &&
            Objects.equals(this.jobDefinitionId, historicIncidentDto.jobDefinitionId) &&
            Objects.equals(this.open, historicIncidentDto.open) &&
            Objects.equals(this.deleted, historicIncidentDto.deleted) &&
            Objects.equals(this.resolved, historicIncidentDto.resolved) &&
            Objects.equals(this.annotation, historicIncidentDto.annotation);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, processDefinitionKey, processDefinitionId, processInstanceId, executionId, rootProcessInstanceId, createTime, endTime, removalTime, incidentType, activityId, failedActivityId, causeIncidentId, rootCauseIncidentId, _configuration, historyConfiguration, incidentMessage, tenantId, jobDefinitionId, open, deleted, resolved, annotation);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class HistoricIncidentDto {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    processDefinitionKey: ").append(toIndentedString(processDefinitionKey)).append("\n");
        sb.append("    processDefinitionId: ").append(toIndentedString(processDefinitionId)).append("\n");
        sb.append("    processInstanceId: ").append(toIndentedString(processInstanceId)).append("\n");
        sb.append("    executionId: ").append(toIndentedString(executionId)).append("\n");
        sb.append("    rootProcessInstanceId: ").append(toIndentedString(rootProcessInstanceId)).append("\n");
        sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
        sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
        sb.append("    removalTime: ").append(toIndentedString(removalTime)).append("\n");
        sb.append("    incidentType: ").append(toIndentedString(incidentType)).append("\n");
        sb.append("    activityId: ").append(toIndentedString(activityId)).append("\n");
        sb.append("    failedActivityId: ").append(toIndentedString(failedActivityId)).append("\n");
        sb.append("    causeIncidentId: ").append(toIndentedString(causeIncidentId)).append("\n");
        sb.append("    rootCauseIncidentId: ").append(toIndentedString(rootCauseIncidentId)).append("\n");
        sb.append("    _configuration: ").append(toIndentedString(_configuration)).append("\n");
        sb.append("    historyConfiguration: ").append(toIndentedString(historyConfiguration)).append("\n");
        sb.append("    incidentMessage: ").append(toIndentedString(incidentMessage)).append("\n");
        sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
        sb.append("    jobDefinitionId: ").append(toIndentedString(jobDefinitionId)).append("\n");
        sb.append("    open: ").append(toIndentedString(open)).append("\n");
        sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
        sb.append("    resolved: ").append(toIndentedString(resolved)).append("\n");
        sb.append("    annotation: ").append(toIndentedString(annotation)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

