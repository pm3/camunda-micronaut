/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.18.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.camunda.rest.model;

import com.fasterxml.jackson.annotation.*;
import io.micronaut.core.annotation.Introspected;
import io.micronaut.core.annotation.Nullable;

import javax.annotation.Generated;
import java.time.OffsetDateTime;
import java.util.Objects;

/**
 * HistoricJobLogDto
 */
@JsonPropertyOrder({
  HistoricJobLogDto.JSON_PROPERTY_ID,
  HistoricJobLogDto.JSON_PROPERTY_TIMESTAMP,
  HistoricJobLogDto.JSON_PROPERTY_REMOVAL_TIME,
  HistoricJobLogDto.JSON_PROPERTY_JOB_ID,
  HistoricJobLogDto.JSON_PROPERTY_JOB_DUE_DATE,
  HistoricJobLogDto.JSON_PROPERTY_JOB_RETRIES,
  HistoricJobLogDto.JSON_PROPERTY_JOB_PRIORITY,
  HistoricJobLogDto.JSON_PROPERTY_JOB_EXCEPTION_MESSAGE,
  HistoricJobLogDto.JSON_PROPERTY_FAILED_ACTIVITY_ID,
  HistoricJobLogDto.JSON_PROPERTY_JOB_DEFINITION_ID,
  HistoricJobLogDto.JSON_PROPERTY_JOB_DEFINITION_TYPE,
  HistoricJobLogDto.JSON_PROPERTY_JOB_DEFINITION_CONFIGURATION,
  HistoricJobLogDto.JSON_PROPERTY_ACTIVITY_ID,
  HistoricJobLogDto.JSON_PROPERTY_EXECUTION_ID,
  HistoricJobLogDto.JSON_PROPERTY_PROCESS_INSTANCE_ID,
  HistoricJobLogDto.JSON_PROPERTY_PROCESS_DEFINITION_ID,
  HistoricJobLogDto.JSON_PROPERTY_PROCESS_DEFINITION_KEY,
  HistoricJobLogDto.JSON_PROPERTY_DEPLOYMENT_ID,
  HistoricJobLogDto.JSON_PROPERTY_ROOT_PROCESS_INSTANCE_ID,
  HistoricJobLogDto.JSON_PROPERTY_TENANT_ID,
  HistoricJobLogDto.JSON_PROPERTY_HOSTNAME,
  HistoricJobLogDto.JSON_PROPERTY_CREATION_LOG,
  HistoricJobLogDto.JSON_PROPERTY_FAILURE_LOG,
  HistoricJobLogDto.JSON_PROPERTY_SUCCESS_LOG,
  HistoricJobLogDto.JSON_PROPERTY_DELETION_LOG
})
@JsonTypeName("HistoricJobLogDto")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen")
@Introspected
public class HistoricJobLogDto {
    public static final String JSON_PROPERTY_ID = "id";
    private String id;

    public static final String JSON_PROPERTY_TIMESTAMP = "timestamp";
    private OffsetDateTime timestamp;

    public static final String JSON_PROPERTY_REMOVAL_TIME = "removalTime";
    private OffsetDateTime removalTime;

    public static final String JSON_PROPERTY_JOB_ID = "jobId";
    private String jobId;

    public static final String JSON_PROPERTY_JOB_DUE_DATE = "jobDueDate";
    private OffsetDateTime jobDueDate;

    public static final String JSON_PROPERTY_JOB_RETRIES = "jobRetries";
    private Integer jobRetries;

    public static final String JSON_PROPERTY_JOB_PRIORITY = "jobPriority";
    private Long jobPriority;

    public static final String JSON_PROPERTY_JOB_EXCEPTION_MESSAGE = "jobExceptionMessage";
    private String jobExceptionMessage;

    public static final String JSON_PROPERTY_FAILED_ACTIVITY_ID = "failedActivityId";
    private String failedActivityId;

    public static final String JSON_PROPERTY_JOB_DEFINITION_ID = "jobDefinitionId";
    private String jobDefinitionId;

    public static final String JSON_PROPERTY_JOB_DEFINITION_TYPE = "jobDefinitionType";
    private String jobDefinitionType;

    public static final String JSON_PROPERTY_JOB_DEFINITION_CONFIGURATION = "jobDefinitionConfiguration";
    private String jobDefinitionConfiguration;

    public static final String JSON_PROPERTY_ACTIVITY_ID = "activityId";
    private String activityId;

    public static final String JSON_PROPERTY_EXECUTION_ID = "executionId";
    private String executionId;

    public static final String JSON_PROPERTY_PROCESS_INSTANCE_ID = "processInstanceId";
    private String processInstanceId;

    public static final String JSON_PROPERTY_PROCESS_DEFINITION_ID = "processDefinitionId";
    private String processDefinitionId;

    public static final String JSON_PROPERTY_PROCESS_DEFINITION_KEY = "processDefinitionKey";
    private String processDefinitionKey;

    public static final String JSON_PROPERTY_DEPLOYMENT_ID = "deploymentId";
    private String deploymentId;

    public static final String JSON_PROPERTY_ROOT_PROCESS_INSTANCE_ID = "rootProcessInstanceId";
    private String rootProcessInstanceId;

    public static final String JSON_PROPERTY_TENANT_ID = "tenantId";
    private String tenantId;

    public static final String JSON_PROPERTY_HOSTNAME = "hostname";
    private String hostname;

    public static final String JSON_PROPERTY_CREATION_LOG = "creationLog";
    private Boolean creationLog;

    public static final String JSON_PROPERTY_FAILURE_LOG = "failureLog";
    private Boolean failureLog;

    public static final String JSON_PROPERTY_SUCCESS_LOG = "successLog";
    private Boolean successLog;

    public static final String JSON_PROPERTY_DELETION_LOG = "deletionLog";
    private Boolean deletionLog;

    public HistoricJobLogDto() {
    }

    public HistoricJobLogDto id(String id) {
        this.id = id;
        return this;
    }

    /**
     * The id of the log entry.
     * @return id
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setId(String id) {
        this.id = id;
    }

    public HistoricJobLogDto timestamp(OffsetDateTime timestamp) {
        this.timestamp = timestamp;
        return this;
    }

    /**
     * The time when the log entry has been written.
     * @return timestamp
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_TIMESTAMP)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public OffsetDateTime getTimestamp() {
        return timestamp;
    }

    @JsonProperty(JSON_PROPERTY_TIMESTAMP)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public void setTimestamp(OffsetDateTime timestamp) {
        this.timestamp = timestamp;
    }

    public HistoricJobLogDto removalTime(OffsetDateTime removalTime) {
        this.removalTime = removalTime;
        return this;
    }

    /**
     * The time after which the log entry should be removed by the History Cleanup job. Default format &#x60;yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSSZ&#x60;. For further info see the [docs](https://docs.camunda.org/manual/7.18/reference/rest/overview/date-format/)
     * @return removalTime
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_REMOVAL_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public OffsetDateTime getRemovalTime() {
        return removalTime;
    }

    @JsonProperty(JSON_PROPERTY_REMOVAL_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public void setRemovalTime(OffsetDateTime removalTime) {
        this.removalTime = removalTime;
    }

    public HistoricJobLogDto jobId(String jobId) {
        this.jobId = jobId;
        return this;
    }

    /**
     * The id of the associated job.
     * @return jobId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_JOB_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getJobId() {
        return jobId;
    }

    @JsonProperty(JSON_PROPERTY_JOB_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setJobId(String jobId) {
        this.jobId = jobId;
    }

    public HistoricJobLogDto jobDueDate(OffsetDateTime jobDueDate) {
        this.jobDueDate = jobDueDate;
        return this;
    }

    /**
     * The date on which the associated job is supposed to be processed.
     * @return jobDueDate
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_JOB_DUE_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public OffsetDateTime getJobDueDate() {
        return jobDueDate;
    }

    @JsonProperty(JSON_PROPERTY_JOB_DUE_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public void setJobDueDate(OffsetDateTime jobDueDate) {
        this.jobDueDate = jobDueDate;
    }

    public HistoricJobLogDto jobRetries(Integer jobRetries) {
        this.jobRetries = jobRetries;
        return this;
    }

    /**
     * The number of retries the associated job has left.
     * @return jobRetries
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_JOB_RETRIES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getJobRetries() {
        return jobRetries;
    }

    @JsonProperty(JSON_PROPERTY_JOB_RETRIES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setJobRetries(Integer jobRetries) {
        this.jobRetries = jobRetries;
    }

    public HistoricJobLogDto jobPriority(Long jobPriority) {
        this.jobPriority = jobPriority;
        return this;
    }

    /**
     * The execution priority the job had when the log entry was created.
     * @return jobPriority
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_JOB_PRIORITY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Long getJobPriority() {
        return jobPriority;
    }

    @JsonProperty(JSON_PROPERTY_JOB_PRIORITY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setJobPriority(Long jobPriority) {
        this.jobPriority = jobPriority;
    }

    public HistoricJobLogDto jobExceptionMessage(String jobExceptionMessage) {
        this.jobExceptionMessage = jobExceptionMessage;
        return this;
    }

    /**
     * The message of the exception that occurred by executing the associated job.
     * @return jobExceptionMessage
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_JOB_EXCEPTION_MESSAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getJobExceptionMessage() {
        return jobExceptionMessage;
    }

    @JsonProperty(JSON_PROPERTY_JOB_EXCEPTION_MESSAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setJobExceptionMessage(String jobExceptionMessage) {
        this.jobExceptionMessage = jobExceptionMessage;
    }

    public HistoricJobLogDto failedActivityId(String failedActivityId) {
        this.failedActivityId = failedActivityId;
        return this;
    }

    /**
     * The id of the activity on which the last exception occurred by executing the associated job.
     * @return failedActivityId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_FAILED_ACTIVITY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getFailedActivityId() {
        return failedActivityId;
    }

    @JsonProperty(JSON_PROPERTY_FAILED_ACTIVITY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFailedActivityId(String failedActivityId) {
        this.failedActivityId = failedActivityId;
    }

    public HistoricJobLogDto jobDefinitionId(String jobDefinitionId) {
        this.jobDefinitionId = jobDefinitionId;
        return this;
    }

    /**
     * The id of the job definition on which the associated job was created.
     * @return jobDefinitionId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_JOB_DEFINITION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getJobDefinitionId() {
        return jobDefinitionId;
    }

    @JsonProperty(JSON_PROPERTY_JOB_DEFINITION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setJobDefinitionId(String jobDefinitionId) {
        this.jobDefinitionId = jobDefinitionId;
    }

    public HistoricJobLogDto jobDefinitionType(String jobDefinitionType) {
        this.jobDefinitionType = jobDefinitionType;
        return this;
    }

    /**
     * The job definition type of the associated job. See the [User Guide](https://docs.camunda.org/manual/7.18/user-guide/process-engine/the-job-executor/#job-creation) for more information about job definition types.
     * @return jobDefinitionType
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_JOB_DEFINITION_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getJobDefinitionType() {
        return jobDefinitionType;
    }

    @JsonProperty(JSON_PROPERTY_JOB_DEFINITION_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setJobDefinitionType(String jobDefinitionType) {
        this.jobDefinitionType = jobDefinitionType;
    }

    public HistoricJobLogDto jobDefinitionConfiguration(String jobDefinitionConfiguration) {
        this.jobDefinitionConfiguration = jobDefinitionConfiguration;
        return this;
    }

    /**
     * The job definition configuration type of the associated job.
     * @return jobDefinitionConfiguration
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_JOB_DEFINITION_CONFIGURATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getJobDefinitionConfiguration() {
        return jobDefinitionConfiguration;
    }

    @JsonProperty(JSON_PROPERTY_JOB_DEFINITION_CONFIGURATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setJobDefinitionConfiguration(String jobDefinitionConfiguration) {
        this.jobDefinitionConfiguration = jobDefinitionConfiguration;
    }

    public HistoricJobLogDto activityId(String activityId) {
        this.activityId = activityId;
        return this;
    }

    /**
     * The id of the activity on which the associated job was created.
     * @return activityId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_ACTIVITY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getActivityId() {
        return activityId;
    }

    @JsonProperty(JSON_PROPERTY_ACTIVITY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setActivityId(String activityId) {
        this.activityId = activityId;
    }

    public HistoricJobLogDto executionId(String executionId) {
        this.executionId = executionId;
        return this;
    }

    /**
     * The execution id on which the associated job was created.
     * @return executionId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_EXECUTION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getExecutionId() {
        return executionId;
    }

    @JsonProperty(JSON_PROPERTY_EXECUTION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setExecutionId(String executionId) {
        this.executionId = executionId;
    }

    public HistoricJobLogDto processInstanceId(String processInstanceId) {
        this.processInstanceId = processInstanceId;
        return this;
    }

    /**
     * The id of the process instance on which the associated job was created.
     * @return processInstanceId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_PROCESS_INSTANCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getProcessInstanceId() {
        return processInstanceId;
    }

    @JsonProperty(JSON_PROPERTY_PROCESS_INSTANCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setProcessInstanceId(String processInstanceId) {
        this.processInstanceId = processInstanceId;
    }

    public HistoricJobLogDto processDefinitionId(String processDefinitionId) {
        this.processDefinitionId = processDefinitionId;
        return this;
    }

    /**
     * The id of the process definition which the associated job belongs to.
     * @return processDefinitionId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getProcessDefinitionId() {
        return processDefinitionId;
    }

    @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setProcessDefinitionId(String processDefinitionId) {
        this.processDefinitionId = processDefinitionId;
    }

    public HistoricJobLogDto processDefinitionKey(String processDefinitionKey) {
        this.processDefinitionKey = processDefinitionKey;
        return this;
    }

    /**
     * The key of the process definition which the associated job belongs to.
     * @return processDefinitionKey
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getProcessDefinitionKey() {
        return processDefinitionKey;
    }

    @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setProcessDefinitionKey(String processDefinitionKey) {
        this.processDefinitionKey = processDefinitionKey;
    }

    public HistoricJobLogDto deploymentId(String deploymentId) {
        this.deploymentId = deploymentId;
        return this;
    }

    /**
     * The id of the deployment which the associated job belongs to.
     * @return deploymentId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_DEPLOYMENT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDeploymentId() {
        return deploymentId;
    }

    @JsonProperty(JSON_PROPERTY_DEPLOYMENT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDeploymentId(String deploymentId) {
        this.deploymentId = deploymentId;
    }

    public HistoricJobLogDto rootProcessInstanceId(String rootProcessInstanceId) {
        this.rootProcessInstanceId = rootProcessInstanceId;
        return this;
    }

    /**
     * The process instance id of the root process instance that initiated the process which the associated job belongs to.
     * @return rootProcessInstanceId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_ROOT_PROCESS_INSTANCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getRootProcessInstanceId() {
        return rootProcessInstanceId;
    }

    @JsonProperty(JSON_PROPERTY_ROOT_PROCESS_INSTANCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRootProcessInstanceId(String rootProcessInstanceId) {
        this.rootProcessInstanceId = rootProcessInstanceId;
    }

    public HistoricJobLogDto tenantId(String tenantId) {
        this.tenantId = tenantId;
        return this;
    }

    /**
     * The id of the tenant that this historic job log entry belongs to.
     * @return tenantId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_TENANT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getTenantId() {
        return tenantId;
    }

    @JsonProperty(JSON_PROPERTY_TENANT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTenantId(String tenantId) {
        this.tenantId = tenantId;
    }

    public HistoricJobLogDto hostname(String hostname) {
        this.hostname = hostname;
        return this;
    }

    /**
     *  The name of the host of the Process Engine where the job of this historic job log entry was executed.
     * @return hostname
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_HOSTNAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getHostname() {
        return hostname;
    }

    @JsonProperty(JSON_PROPERTY_HOSTNAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setHostname(String hostname) {
        this.hostname = hostname;
    }

    public HistoricJobLogDto creationLog(Boolean creationLog) {
        this.creationLog = creationLog;
        return this;
    }

    /**
     * A flag indicating whether this log represents the creation of the associated job.
     * @return creationLog
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_CREATION_LOG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getCreationLog() {
        return creationLog;
    }

    @JsonProperty(JSON_PROPERTY_CREATION_LOG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCreationLog(Boolean creationLog) {
        this.creationLog = creationLog;
    }

    public HistoricJobLogDto failureLog(Boolean failureLog) {
        this.failureLog = failureLog;
        return this;
    }

    /**
     * A flag indicating whether this log represents the failed execution of the associated job.
     * @return failureLog
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_FAILURE_LOG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getFailureLog() {
        return failureLog;
    }

    @JsonProperty(JSON_PROPERTY_FAILURE_LOG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFailureLog(Boolean failureLog) {
        this.failureLog = failureLog;
    }

    public HistoricJobLogDto successLog(Boolean successLog) {
        this.successLog = successLog;
        return this;
    }

    /**
     * A flag indicating whether this log represents the successful execution of the associated job.
     * @return successLog
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_SUCCESS_LOG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getSuccessLog() {
        return successLog;
    }

    @JsonProperty(JSON_PROPERTY_SUCCESS_LOG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSuccessLog(Boolean successLog) {
        this.successLog = successLog;
    }

    public HistoricJobLogDto deletionLog(Boolean deletionLog) {
        this.deletionLog = deletionLog;
        return this;
    }

    /**
     * A flag indicating whether this log represents the deletion of the associated job.
     * @return deletionLog
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_DELETION_LOG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getDeletionLog() {
        return deletionLog;
    }

    @JsonProperty(JSON_PROPERTY_DELETION_LOG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDeletionLog(Boolean deletionLog) {
        this.deletionLog = deletionLog;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        HistoricJobLogDto historicJobLogDto = (HistoricJobLogDto) o;
        return Objects.equals(this.id, historicJobLogDto.id) &&
            Objects.equals(this.timestamp, historicJobLogDto.timestamp) &&
            Objects.equals(this.removalTime, historicJobLogDto.removalTime) &&
            Objects.equals(this.jobId, historicJobLogDto.jobId) &&
            Objects.equals(this.jobDueDate, historicJobLogDto.jobDueDate) &&
            Objects.equals(this.jobRetries, historicJobLogDto.jobRetries) &&
            Objects.equals(this.jobPriority, historicJobLogDto.jobPriority) &&
            Objects.equals(this.jobExceptionMessage, historicJobLogDto.jobExceptionMessage) &&
            Objects.equals(this.failedActivityId, historicJobLogDto.failedActivityId) &&
            Objects.equals(this.jobDefinitionId, historicJobLogDto.jobDefinitionId) &&
            Objects.equals(this.jobDefinitionType, historicJobLogDto.jobDefinitionType) &&
            Objects.equals(this.jobDefinitionConfiguration, historicJobLogDto.jobDefinitionConfiguration) &&
            Objects.equals(this.activityId, historicJobLogDto.activityId) &&
            Objects.equals(this.executionId, historicJobLogDto.executionId) &&
            Objects.equals(this.processInstanceId, historicJobLogDto.processInstanceId) &&
            Objects.equals(this.processDefinitionId, historicJobLogDto.processDefinitionId) &&
            Objects.equals(this.processDefinitionKey, historicJobLogDto.processDefinitionKey) &&
            Objects.equals(this.deploymentId, historicJobLogDto.deploymentId) &&
            Objects.equals(this.rootProcessInstanceId, historicJobLogDto.rootProcessInstanceId) &&
            Objects.equals(this.tenantId, historicJobLogDto.tenantId) &&
            Objects.equals(this.hostname, historicJobLogDto.hostname) &&
            Objects.equals(this.creationLog, historicJobLogDto.creationLog) &&
            Objects.equals(this.failureLog, historicJobLogDto.failureLog) &&
            Objects.equals(this.successLog, historicJobLogDto.successLog) &&
            Objects.equals(this.deletionLog, historicJobLogDto.deletionLog);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, timestamp, removalTime, jobId, jobDueDate, jobRetries, jobPriority, jobExceptionMessage, failedActivityId, jobDefinitionId, jobDefinitionType, jobDefinitionConfiguration, activityId, executionId, processInstanceId, processDefinitionId, processDefinitionKey, deploymentId, rootProcessInstanceId, tenantId, hostname, creationLog, failureLog, successLog, deletionLog);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class HistoricJobLogDto {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
        sb.append("    removalTime: ").append(toIndentedString(removalTime)).append("\n");
        sb.append("    jobId: ").append(toIndentedString(jobId)).append("\n");
        sb.append("    jobDueDate: ").append(toIndentedString(jobDueDate)).append("\n");
        sb.append("    jobRetries: ").append(toIndentedString(jobRetries)).append("\n");
        sb.append("    jobPriority: ").append(toIndentedString(jobPriority)).append("\n");
        sb.append("    jobExceptionMessage: ").append(toIndentedString(jobExceptionMessage)).append("\n");
        sb.append("    failedActivityId: ").append(toIndentedString(failedActivityId)).append("\n");
        sb.append("    jobDefinitionId: ").append(toIndentedString(jobDefinitionId)).append("\n");
        sb.append("    jobDefinitionType: ").append(toIndentedString(jobDefinitionType)).append("\n");
        sb.append("    jobDefinitionConfiguration: ").append(toIndentedString(jobDefinitionConfiguration)).append("\n");
        sb.append("    activityId: ").append(toIndentedString(activityId)).append("\n");
        sb.append("    executionId: ").append(toIndentedString(executionId)).append("\n");
        sb.append("    processInstanceId: ").append(toIndentedString(processInstanceId)).append("\n");
        sb.append("    processDefinitionId: ").append(toIndentedString(processDefinitionId)).append("\n");
        sb.append("    processDefinitionKey: ").append(toIndentedString(processDefinitionKey)).append("\n");
        sb.append("    deploymentId: ").append(toIndentedString(deploymentId)).append("\n");
        sb.append("    rootProcessInstanceId: ").append(toIndentedString(rootProcessInstanceId)).append("\n");
        sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
        sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
        sb.append("    creationLog: ").append(toIndentedString(creationLog)).append("\n");
        sb.append("    failureLog: ").append(toIndentedString(failureLog)).append("\n");
        sb.append("    successLog: ").append(toIndentedString(successLog)).append("\n");
        sb.append("    deletionLog: ").append(toIndentedString(deletionLog)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

