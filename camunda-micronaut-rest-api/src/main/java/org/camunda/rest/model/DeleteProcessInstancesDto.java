/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.18.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.camunda.rest.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import io.micronaut.core.annotation.Introspected;
import io.micronaut.core.annotation.Nullable;

import javax.annotation.Generated;
import javax.validation.Valid;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * DeleteProcessInstancesDto
 */
@JsonPropertyOrder({
  DeleteProcessInstancesDto.JSON_PROPERTY_PROCESS_INSTANCE_IDS,
  DeleteProcessInstancesDto.JSON_PROPERTY_DELETE_REASON,
  DeleteProcessInstancesDto.JSON_PROPERTY_SKIP_CUSTOM_LISTENERS,
  DeleteProcessInstancesDto.JSON_PROPERTY_SKIP_SUBPROCESSES,
  DeleteProcessInstancesDto.JSON_PROPERTY_PROCESS_INSTANCE_QUERY,
  DeleteProcessInstancesDto.JSON_PROPERTY_HISTORIC_PROCESS_INSTANCE_QUERY
})
@JsonTypeName("DeleteProcessInstancesDto")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen")
@Introspected
public class DeleteProcessInstancesDto {
    public static final String JSON_PROPERTY_PROCESS_INSTANCE_IDS = "processInstanceIds";
    private List<String> processInstanceIds = null;

    public static final String JSON_PROPERTY_DELETE_REASON = "deleteReason";
    private String deleteReason;

    public static final String JSON_PROPERTY_SKIP_CUSTOM_LISTENERS = "skipCustomListeners";
    private Boolean skipCustomListeners;

    public static final String JSON_PROPERTY_SKIP_SUBPROCESSES = "skipSubprocesses";
    private Boolean skipSubprocesses;

    public static final String JSON_PROPERTY_PROCESS_INSTANCE_QUERY = "processInstanceQuery";
    private ProcessInstanceQueryDto processInstanceQuery;

    public static final String JSON_PROPERTY_HISTORIC_PROCESS_INSTANCE_QUERY = "historicProcessInstanceQuery";
    private HistoricProcessInstanceQueryDto historicProcessInstanceQuery;

    public DeleteProcessInstancesDto() {
    }

    public DeleteProcessInstancesDto processInstanceIds(List<String> processInstanceIds) {
        this.processInstanceIds = processInstanceIds;
        return this;
    }

    public DeleteProcessInstancesDto addProcessInstanceIdsItem(String processInstanceIdsItem) {
        if (this.processInstanceIds == null) {
            this.processInstanceIds = new ArrayList<>();
        }
        this.processInstanceIds.add(processInstanceIdsItem);
        return this;
    }

    /**
     * A list process instance ids to delete.
     * @return processInstanceIds
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_PROCESS_INSTANCE_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<String> getProcessInstanceIds() {
        return processInstanceIds;
    }

    @JsonProperty(JSON_PROPERTY_PROCESS_INSTANCE_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setProcessInstanceIds(List<String> processInstanceIds) {
        this.processInstanceIds = processInstanceIds;
    }

    public DeleteProcessInstancesDto deleteReason(String deleteReason) {
        this.deleteReason = deleteReason;
        return this;
    }

    /**
     * A string with delete reason.
     * @return deleteReason
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_DELETE_REASON)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDeleteReason() {
        return deleteReason;
    }

    @JsonProperty(JSON_PROPERTY_DELETE_REASON)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDeleteReason(String deleteReason) {
        this.deleteReason = deleteReason;
    }

    public DeleteProcessInstancesDto skipCustomListeners(Boolean skipCustomListeners) {
        this.skipCustomListeners = skipCustomListeners;
        return this;
    }

    /**
     * Skip execution listener invocation for activities that are started or ended as part of this request.
     * @return skipCustomListeners
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_SKIP_CUSTOM_LISTENERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getSkipCustomListeners() {
        return skipCustomListeners;
    }

    @JsonProperty(JSON_PROPERTY_SKIP_CUSTOM_LISTENERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSkipCustomListeners(Boolean skipCustomListeners) {
        this.skipCustomListeners = skipCustomListeners;
    }

    public DeleteProcessInstancesDto skipSubprocesses(Boolean skipSubprocesses) {
        this.skipSubprocesses = skipSubprocesses;
        return this;
    }

    /**
     * Skip deletion of the subprocesses related to deleted processes as part of this request.
     * @return skipSubprocesses
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_SKIP_SUBPROCESSES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getSkipSubprocesses() {
        return skipSubprocesses;
    }

    @JsonProperty(JSON_PROPERTY_SKIP_SUBPROCESSES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSkipSubprocesses(Boolean skipSubprocesses) {
        this.skipSubprocesses = skipSubprocesses;
    }

    public DeleteProcessInstancesDto processInstanceQuery(ProcessInstanceQueryDto processInstanceQuery) {
        this.processInstanceQuery = processInstanceQuery;
        return this;
    }

    /**
     * Get processInstanceQuery
     * @return processInstanceQuery
     **/
    @Valid
    @Nullable
    @JsonProperty(JSON_PROPERTY_PROCESS_INSTANCE_QUERY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public ProcessInstanceQueryDto getProcessInstanceQuery() {
        return processInstanceQuery;
    }

    @JsonProperty(JSON_PROPERTY_PROCESS_INSTANCE_QUERY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setProcessInstanceQuery(ProcessInstanceQueryDto processInstanceQuery) {
        this.processInstanceQuery = processInstanceQuery;
    }

    public DeleteProcessInstancesDto historicProcessInstanceQuery(HistoricProcessInstanceQueryDto historicProcessInstanceQuery) {
        this.historicProcessInstanceQuery = historicProcessInstanceQuery;
        return this;
    }

    /**
     * Get historicProcessInstanceQuery
     * @return historicProcessInstanceQuery
     **/
    @Valid
    @Nullable
    @JsonProperty(JSON_PROPERTY_HISTORIC_PROCESS_INSTANCE_QUERY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public HistoricProcessInstanceQueryDto getHistoricProcessInstanceQuery() {
        return historicProcessInstanceQuery;
    }

    @JsonProperty(JSON_PROPERTY_HISTORIC_PROCESS_INSTANCE_QUERY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setHistoricProcessInstanceQuery(HistoricProcessInstanceQueryDto historicProcessInstanceQuery) {
        this.historicProcessInstanceQuery = historicProcessInstanceQuery;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DeleteProcessInstancesDto deleteProcessInstancesDto = (DeleteProcessInstancesDto) o;
        return Objects.equals(this.processInstanceIds, deleteProcessInstancesDto.processInstanceIds) &&
            Objects.equals(this.deleteReason, deleteProcessInstancesDto.deleteReason) &&
            Objects.equals(this.skipCustomListeners, deleteProcessInstancesDto.skipCustomListeners) &&
            Objects.equals(this.skipSubprocesses, deleteProcessInstancesDto.skipSubprocesses) &&
            Objects.equals(this.processInstanceQuery, deleteProcessInstancesDto.processInstanceQuery) &&
            Objects.equals(this.historicProcessInstanceQuery, deleteProcessInstancesDto.historicProcessInstanceQuery);
    }

    @Override
    public int hashCode() {
        return Objects.hash(processInstanceIds, deleteReason, skipCustomListeners, skipSubprocesses, processInstanceQuery, historicProcessInstanceQuery);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class DeleteProcessInstancesDto {\n");
        sb.append("    processInstanceIds: ").append(toIndentedString(processInstanceIds)).append("\n");
        sb.append("    deleteReason: ").append(toIndentedString(deleteReason)).append("\n");
        sb.append("    skipCustomListeners: ").append(toIndentedString(skipCustomListeners)).append("\n");
        sb.append("    skipSubprocesses: ").append(toIndentedString(skipSubprocesses)).append("\n");
        sb.append("    processInstanceQuery: ").append(toIndentedString(processInstanceQuery)).append("\n");
        sb.append("    historicProcessInstanceQuery: ").append(toIndentedString(historicProcessInstanceQuery)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

