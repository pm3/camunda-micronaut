/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.18.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.camunda.rest.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import io.micronaut.core.annotation.Introspected;
import io.micronaut.core.annotation.Nullable;

import javax.annotation.Generated;
import java.util.Objects;

/**
 * Mandatory when &#x60;sortBy&#x60; is one of the following values: &#x60;processVariable&#x60;, &#x60;executionVariable&#x60;, &#x60;taskVariable&#x60;, &#x60;caseExecutionVariable&#x60; or &#x60;caseInstanceVariable&#x60;. Must be a JSON object with the properties &#x60;variable&#x60; and &#x60;type&#x60; where &#x60;variable&#x60; is a variable name and &#x60;type&#x60; is the name of a variable value type.
 */
@JsonPropertyOrder({
  SortTaskQueryParametersDto.JSON_PROPERTY_VARIABLE,
  SortTaskQueryParametersDto.JSON_PROPERTY_TYPE
})
@JsonTypeName("SortTaskQueryParametersDto")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen")
@Introspected
public class SortTaskQueryParametersDto {
    public static final String JSON_PROPERTY_VARIABLE = "variable";
    private String variable;

    public static final String JSON_PROPERTY_TYPE = "type";
    private String type;

    public SortTaskQueryParametersDto() {
    }

    public SortTaskQueryParametersDto variable(String variable) {
        this.variable = variable;
        return this;
    }

    /**
     * The name of the variable to sort by.
     * @return variable
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_VARIABLE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getVariable() {
        return variable;
    }

    @JsonProperty(JSON_PROPERTY_VARIABLE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setVariable(String variable) {
        this.variable = variable;
    }

    public SortTaskQueryParametersDto type(String type) {
        this.type = type;
        return this;
    }

    /**
     * The name of the type of the variable value.
     * @return type
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getType() {
        return type;
    }

    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setType(String type) {
        this.type = type;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SortTaskQueryParametersDto sortTaskQueryParametersDto = (SortTaskQueryParametersDto) o;
        return Objects.equals(this.variable, sortTaskQueryParametersDto.variable) &&
            Objects.equals(this.type, sortTaskQueryParametersDto.type);
    }

    @Override
    public int hashCode() {
        return Objects.hash(variable, type);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class SortTaskQueryParametersDto {\n");
        sb.append("    variable: ").append(toIndentedString(variable)).append("\n");
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

