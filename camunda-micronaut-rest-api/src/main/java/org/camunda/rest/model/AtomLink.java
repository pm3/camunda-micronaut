/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.18.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.camunda.rest.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import io.micronaut.core.annotation.Introspected;
import io.micronaut.core.annotation.Nullable;

import javax.annotation.Generated;
import java.util.Objects;

/**
 * AtomLink
 */
@JsonPropertyOrder({
  AtomLink.JSON_PROPERTY_REL,
  AtomLink.JSON_PROPERTY_HREF,
  AtomLink.JSON_PROPERTY_METHOD
})
@JsonTypeName("AtomLink")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen")
@Introspected
public class AtomLink {
    public static final String JSON_PROPERTY_REL = "rel";
    private String rel;

    public static final String JSON_PROPERTY_HREF = "href";
    private String href;

    public static final String JSON_PROPERTY_METHOD = "method";
    private String method;

    public AtomLink() {
    }

    public AtomLink rel(String rel) {
        this.rel = rel;
        return this;
    }

    /**
     * The relation of the link to the object that belongs to.
     * @return rel
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_REL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getRel() {
        return rel;
    }

    @JsonProperty(JSON_PROPERTY_REL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRel(String rel) {
        this.rel = rel;
    }

    public AtomLink href(String href) {
        this.href = href;
        return this;
    }

    /**
     * The url of the link.
     * @return href
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_HREF)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getHref() {
        return href;
    }

    @JsonProperty(JSON_PROPERTY_HREF)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setHref(String href) {
        this.href = href;
    }

    public AtomLink method(String method) {
        this.method = method;
        return this;
    }

    /**
     * The http method.
     * @return method
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_METHOD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getMethod() {
        return method;
    }

    @JsonProperty(JSON_PROPERTY_METHOD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMethod(String method) {
        this.method = method;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AtomLink atomLink = (AtomLink) o;
        return Objects.equals(this.rel, atomLink.rel) &&
            Objects.equals(this.href, atomLink.href) &&
            Objects.equals(this.method, atomLink.method);
    }

    @Override
    public int hashCode() {
        return Objects.hash(rel, href, method);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class AtomLink {\n");
        sb.append("    rel: ").append(toIndentedString(rel)).append("\n");
        sb.append("    href: ").append(toIndentedString(href)).append("\n");
        sb.append("    method: ").append(toIndentedString(method)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

