/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.18.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.camunda.rest.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import io.micronaut.core.annotation.Introspected;
import io.micronaut.core.annotation.Nullable;

import javax.annotation.Generated;
import java.util.Objects;

/**
 * CleanableHistoricProcessInstanceReportResultDto
 */
@JsonPropertyOrder({
  CleanableHistoricProcessInstanceReportResultDto.JSON_PROPERTY_PROCESS_DEFINITION_ID,
  CleanableHistoricProcessInstanceReportResultDto.JSON_PROPERTY_PROCESS_DEFINITION_KEY,
  CleanableHistoricProcessInstanceReportResultDto.JSON_PROPERTY_PROCESS_DEFINITION_NAME,
  CleanableHistoricProcessInstanceReportResultDto.JSON_PROPERTY_PROCESS_DEFINITION_VERSION,
  CleanableHistoricProcessInstanceReportResultDto.JSON_PROPERTY_HISTORY_TIME_TO_LIVE,
  CleanableHistoricProcessInstanceReportResultDto.JSON_PROPERTY_FINISHED_PROCESS_INSTANCE_COUNT,
  CleanableHistoricProcessInstanceReportResultDto.JSON_PROPERTY_CLEANABLE_PROCESS_INSTANCE_COUNT,
  CleanableHistoricProcessInstanceReportResultDto.JSON_PROPERTY_TENANT_ID
})
@JsonTypeName("CleanableHistoricProcessInstanceReportResultDto")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen")
@Introspected
public class CleanableHistoricProcessInstanceReportResultDto {
    public static final String JSON_PROPERTY_PROCESS_DEFINITION_ID = "processDefinitionId";
    private String processDefinitionId;

    public static final String JSON_PROPERTY_PROCESS_DEFINITION_KEY = "processDefinitionKey";
    private String processDefinitionKey;

    public static final String JSON_PROPERTY_PROCESS_DEFINITION_NAME = "processDefinitionName";
    private String processDefinitionName;

    public static final String JSON_PROPERTY_PROCESS_DEFINITION_VERSION = "processDefinitionVersion";
    private Integer processDefinitionVersion;

    public static final String JSON_PROPERTY_HISTORY_TIME_TO_LIVE = "historyTimeToLive";
    private Integer historyTimeToLive;

    public static final String JSON_PROPERTY_FINISHED_PROCESS_INSTANCE_COUNT = "finishedProcessInstanceCount";
    private Long finishedProcessInstanceCount;

    public static final String JSON_PROPERTY_CLEANABLE_PROCESS_INSTANCE_COUNT = "cleanableProcessInstanceCount";
    private Long cleanableProcessInstanceCount;

    public static final String JSON_PROPERTY_TENANT_ID = "tenantId";
    private String tenantId;

    public CleanableHistoricProcessInstanceReportResultDto() {
    }

    public CleanableHistoricProcessInstanceReportResultDto processDefinitionId(String processDefinitionId) {
        this.processDefinitionId = processDefinitionId;
        return this;
    }

    /**
     * The id of the process definition.
     * @return processDefinitionId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getProcessDefinitionId() {
        return processDefinitionId;
    }

    @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setProcessDefinitionId(String processDefinitionId) {
        this.processDefinitionId = processDefinitionId;
    }

    public CleanableHistoricProcessInstanceReportResultDto processDefinitionKey(String processDefinitionKey) {
        this.processDefinitionKey = processDefinitionKey;
        return this;
    }

    /**
     * The key of the process definition.
     * @return processDefinitionKey
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getProcessDefinitionKey() {
        return processDefinitionKey;
    }

    @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setProcessDefinitionKey(String processDefinitionKey) {
        this.processDefinitionKey = processDefinitionKey;
    }

    public CleanableHistoricProcessInstanceReportResultDto processDefinitionName(String processDefinitionName) {
        this.processDefinitionName = processDefinitionName;
        return this;
    }

    /**
     * The name of the process definition.
     * @return processDefinitionName
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getProcessDefinitionName() {
        return processDefinitionName;
    }

    @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setProcessDefinitionName(String processDefinitionName) {
        this.processDefinitionName = processDefinitionName;
    }

    public CleanableHistoricProcessInstanceReportResultDto processDefinitionVersion(Integer processDefinitionVersion) {
        this.processDefinitionVersion = processDefinitionVersion;
        return this;
    }

    /**
     * The version of the process definition.
     * @return processDefinitionVersion
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_VERSION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getProcessDefinitionVersion() {
        return processDefinitionVersion;
    }

    @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_VERSION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setProcessDefinitionVersion(Integer processDefinitionVersion) {
        this.processDefinitionVersion = processDefinitionVersion;
    }

    public CleanableHistoricProcessInstanceReportResultDto historyTimeToLive(Integer historyTimeToLive) {
        this.historyTimeToLive = historyTimeToLive;
        return this;
    }

    /**
     * The history time to live of the process definition.
     * @return historyTimeToLive
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_HISTORY_TIME_TO_LIVE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getHistoryTimeToLive() {
        return historyTimeToLive;
    }

    @JsonProperty(JSON_PROPERTY_HISTORY_TIME_TO_LIVE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setHistoryTimeToLive(Integer historyTimeToLive) {
        this.historyTimeToLive = historyTimeToLive;
    }

    public CleanableHistoricProcessInstanceReportResultDto finishedProcessInstanceCount(Long finishedProcessInstanceCount) {
        this.finishedProcessInstanceCount = finishedProcessInstanceCount;
        return this;
    }

    /**
     * The count of the finished historic process instances.
     * @return finishedProcessInstanceCount
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_FINISHED_PROCESS_INSTANCE_COUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Long getFinishedProcessInstanceCount() {
        return finishedProcessInstanceCount;
    }

    @JsonProperty(JSON_PROPERTY_FINISHED_PROCESS_INSTANCE_COUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFinishedProcessInstanceCount(Long finishedProcessInstanceCount) {
        this.finishedProcessInstanceCount = finishedProcessInstanceCount;
    }

    public CleanableHistoricProcessInstanceReportResultDto cleanableProcessInstanceCount(Long cleanableProcessInstanceCount) {
        this.cleanableProcessInstanceCount = cleanableProcessInstanceCount;
        return this;
    }

    /**
     * The count of the cleanable historic process instances, referring to history time to live.
     * @return cleanableProcessInstanceCount
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_CLEANABLE_PROCESS_INSTANCE_COUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Long getCleanableProcessInstanceCount() {
        return cleanableProcessInstanceCount;
    }

    @JsonProperty(JSON_PROPERTY_CLEANABLE_PROCESS_INSTANCE_COUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCleanableProcessInstanceCount(Long cleanableProcessInstanceCount) {
        this.cleanableProcessInstanceCount = cleanableProcessInstanceCount;
    }

    public CleanableHistoricProcessInstanceReportResultDto tenantId(String tenantId) {
        this.tenantId = tenantId;
        return this;
    }

    /**
     * The tenant id of the process definition.
     * @return tenantId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_TENANT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getTenantId() {
        return tenantId;
    }

    @JsonProperty(JSON_PROPERTY_TENANT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTenantId(String tenantId) {
        this.tenantId = tenantId;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CleanableHistoricProcessInstanceReportResultDto cleanableHistoricProcessInstanceReportResultDto = (CleanableHistoricProcessInstanceReportResultDto) o;
        return Objects.equals(this.processDefinitionId, cleanableHistoricProcessInstanceReportResultDto.processDefinitionId) &&
            Objects.equals(this.processDefinitionKey, cleanableHistoricProcessInstanceReportResultDto.processDefinitionKey) &&
            Objects.equals(this.processDefinitionName, cleanableHistoricProcessInstanceReportResultDto.processDefinitionName) &&
            Objects.equals(this.processDefinitionVersion, cleanableHistoricProcessInstanceReportResultDto.processDefinitionVersion) &&
            Objects.equals(this.historyTimeToLive, cleanableHistoricProcessInstanceReportResultDto.historyTimeToLive) &&
            Objects.equals(this.finishedProcessInstanceCount, cleanableHistoricProcessInstanceReportResultDto.finishedProcessInstanceCount) &&
            Objects.equals(this.cleanableProcessInstanceCount, cleanableHistoricProcessInstanceReportResultDto.cleanableProcessInstanceCount) &&
            Objects.equals(this.tenantId, cleanableHistoricProcessInstanceReportResultDto.tenantId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(processDefinitionId, processDefinitionKey, processDefinitionName, processDefinitionVersion, historyTimeToLive, finishedProcessInstanceCount, cleanableProcessInstanceCount, tenantId);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CleanableHistoricProcessInstanceReportResultDto {\n");
        sb.append("    processDefinitionId: ").append(toIndentedString(processDefinitionId)).append("\n");
        sb.append("    processDefinitionKey: ").append(toIndentedString(processDefinitionKey)).append("\n");
        sb.append("    processDefinitionName: ").append(toIndentedString(processDefinitionName)).append("\n");
        sb.append("    processDefinitionVersion: ").append(toIndentedString(processDefinitionVersion)).append("\n");
        sb.append("    historyTimeToLive: ").append(toIndentedString(historyTimeToLive)).append("\n");
        sb.append("    finishedProcessInstanceCount: ").append(toIndentedString(finishedProcessInstanceCount)).append("\n");
        sb.append("    cleanableProcessInstanceCount: ").append(toIndentedString(cleanableProcessInstanceCount)).append("\n");
        sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

