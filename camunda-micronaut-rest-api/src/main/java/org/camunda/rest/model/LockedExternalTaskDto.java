/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.18.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.camunda.rest.model;

import com.fasterxml.jackson.annotation.*;
import io.micronaut.core.annotation.Introspected;
import io.micronaut.core.annotation.Nullable;

import javax.annotation.Generated;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

/**
 * LockedExternalTaskDto
 */
@JsonPropertyOrder({
  LockedExternalTaskDto.JSON_PROPERTY_ACTIVITY_ID,
  LockedExternalTaskDto.JSON_PROPERTY_ACTIVITY_INSTANCE_ID,
  LockedExternalTaskDto.JSON_PROPERTY_ERROR_MESSAGE,
  LockedExternalTaskDto.JSON_PROPERTY_ERROR_DETAILS,
  LockedExternalTaskDto.JSON_PROPERTY_EXECUTION_ID,
  LockedExternalTaskDto.JSON_PROPERTY_ID,
  LockedExternalTaskDto.JSON_PROPERTY_LOCK_EXPIRATION_TIME,
  LockedExternalTaskDto.JSON_PROPERTY_PROCESS_DEFINITION_ID,
  LockedExternalTaskDto.JSON_PROPERTY_PROCESS_DEFINITION_KEY,
  LockedExternalTaskDto.JSON_PROPERTY_PROCESS_DEFINITION_VERSION_TAG,
  LockedExternalTaskDto.JSON_PROPERTY_PROCESS_INSTANCE_ID,
  LockedExternalTaskDto.JSON_PROPERTY_TENANT_ID,
  LockedExternalTaskDto.JSON_PROPERTY_RETRIES,
  LockedExternalTaskDto.JSON_PROPERTY_SUSPENDED,
  LockedExternalTaskDto.JSON_PROPERTY_WORKER_ID,
  LockedExternalTaskDto.JSON_PROPERTY_PRIORITY,
  LockedExternalTaskDto.JSON_PROPERTY_TOPIC_NAME,
  LockedExternalTaskDto.JSON_PROPERTY_BUSINESS_KEY,
  LockedExternalTaskDto.JSON_PROPERTY_VARIABLES
})
@JsonTypeName("LockedExternalTaskDto")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen")
@Introspected
public class LockedExternalTaskDto {
    public static final String JSON_PROPERTY_ACTIVITY_ID = "activityId";
    private String activityId;

    public static final String JSON_PROPERTY_ACTIVITY_INSTANCE_ID = "activityInstanceId";
    private String activityInstanceId;

    public static final String JSON_PROPERTY_ERROR_MESSAGE = "errorMessage";
    private String errorMessage;

    public static final String JSON_PROPERTY_ERROR_DETAILS = "errorDetails";
    private String errorDetails;

    public static final String JSON_PROPERTY_EXECUTION_ID = "executionId";
    private String executionId;

    public static final String JSON_PROPERTY_ID = "id";
    private String id;

    public static final String JSON_PROPERTY_LOCK_EXPIRATION_TIME = "lockExpirationTime";
    private OffsetDateTime lockExpirationTime;

    public static final String JSON_PROPERTY_PROCESS_DEFINITION_ID = "processDefinitionId";
    private String processDefinitionId;

    public static final String JSON_PROPERTY_PROCESS_DEFINITION_KEY = "processDefinitionKey";
    private String processDefinitionKey;

    public static final String JSON_PROPERTY_PROCESS_DEFINITION_VERSION_TAG = "processDefinitionVersionTag";
    private String processDefinitionVersionTag;

    public static final String JSON_PROPERTY_PROCESS_INSTANCE_ID = "processInstanceId";
    private String processInstanceId;

    public static final String JSON_PROPERTY_TENANT_ID = "tenantId";
    private String tenantId;

    public static final String JSON_PROPERTY_RETRIES = "retries";
    private Integer retries;

    public static final String JSON_PROPERTY_SUSPENDED = "suspended";
    private Boolean suspended;

    public static final String JSON_PROPERTY_WORKER_ID = "workerId";
    private String workerId;

    public static final String JSON_PROPERTY_PRIORITY = "priority";
    private Long priority;

    public static final String JSON_PROPERTY_TOPIC_NAME = "topicName";
    private String topicName;

    public static final String JSON_PROPERTY_BUSINESS_KEY = "businessKey";
    private String businessKey;

    public static final String JSON_PROPERTY_VARIABLES = "variables";
    private Map<String, VariableValueDto> variables = null;

    public LockedExternalTaskDto() {
    }

    public LockedExternalTaskDto activityId(String activityId) {
        this.activityId = activityId;
        return this;
    }

    /**
     * The id of the activity that this external task belongs to.
     * @return activityId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_ACTIVITY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getActivityId() {
        return activityId;
    }

    @JsonProperty(JSON_PROPERTY_ACTIVITY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setActivityId(String activityId) {
        this.activityId = activityId;
    }

    public LockedExternalTaskDto activityInstanceId(String activityInstanceId) {
        this.activityInstanceId = activityInstanceId;
        return this;
    }

    /**
     * The id of the activity instance that the external task belongs to.
     * @return activityInstanceId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_ACTIVITY_INSTANCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getActivityInstanceId() {
        return activityInstanceId;
    }

    @JsonProperty(JSON_PROPERTY_ACTIVITY_INSTANCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setActivityInstanceId(String activityInstanceId) {
        this.activityInstanceId = activityInstanceId;
    }

    public LockedExternalTaskDto errorMessage(String errorMessage) {
        this.errorMessage = errorMessage;
        return this;
    }

    /**
     * The full error message submitted with the latest reported failure executing this task;&#x60;null&#x60; if no failure was reported previously or if no error message was submitted
     * @return errorMessage
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_ERROR_MESSAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getErrorMessage() {
        return errorMessage;
    }

    @JsonProperty(JSON_PROPERTY_ERROR_MESSAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setErrorMessage(String errorMessage) {
        this.errorMessage = errorMessage;
    }

    public LockedExternalTaskDto errorDetails(String errorDetails) {
        this.errorDetails = errorDetails;
        return this;
    }

    /**
     * The error details submitted with the latest reported failure executing this task.&#x60;null&#x60; if no failure was reported previously or if no error details was submitted
     * @return errorDetails
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_ERROR_DETAILS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getErrorDetails() {
        return errorDetails;
    }

    @JsonProperty(JSON_PROPERTY_ERROR_DETAILS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setErrorDetails(String errorDetails) {
        this.errorDetails = errorDetails;
    }

    public LockedExternalTaskDto executionId(String executionId) {
        this.executionId = executionId;
        return this;
    }

    /**
     * The id of the execution that the external task belongs to.
     * @return executionId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_EXECUTION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getExecutionId() {
        return executionId;
    }

    @JsonProperty(JSON_PROPERTY_EXECUTION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setExecutionId(String executionId) {
        this.executionId = executionId;
    }

    public LockedExternalTaskDto id(String id) {
        this.id = id;
        return this;
    }

    /**
     * The id of the external task.
     * @return id
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setId(String id) {
        this.id = id;
    }

    public LockedExternalTaskDto lockExpirationTime(OffsetDateTime lockExpirationTime) {
        this.lockExpirationTime = lockExpirationTime;
        return this;
    }

    /**
     * The date that the task&#39;s most recent lock expires or has expired.
     * @return lockExpirationTime
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_LOCK_EXPIRATION_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public OffsetDateTime getLockExpirationTime() {
        return lockExpirationTime;
    }

    @JsonProperty(JSON_PROPERTY_LOCK_EXPIRATION_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public void setLockExpirationTime(OffsetDateTime lockExpirationTime) {
        this.lockExpirationTime = lockExpirationTime;
    }

    public LockedExternalTaskDto processDefinitionId(String processDefinitionId) {
        this.processDefinitionId = processDefinitionId;
        return this;
    }

    /**
     * The id of the process definition the external task is defined in.
     * @return processDefinitionId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getProcessDefinitionId() {
        return processDefinitionId;
    }

    @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setProcessDefinitionId(String processDefinitionId) {
        this.processDefinitionId = processDefinitionId;
    }

    public LockedExternalTaskDto processDefinitionKey(String processDefinitionKey) {
        this.processDefinitionKey = processDefinitionKey;
        return this;
    }

    /**
     * The key of the process definition the external task is defined in.
     * @return processDefinitionKey
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getProcessDefinitionKey() {
        return processDefinitionKey;
    }

    @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setProcessDefinitionKey(String processDefinitionKey) {
        this.processDefinitionKey = processDefinitionKey;
    }

    public LockedExternalTaskDto processDefinitionVersionTag(String processDefinitionVersionTag) {
        this.processDefinitionVersionTag = processDefinitionVersionTag;
        return this;
    }

    /**
     * The version tag of the process definition the external task is defined in.
     * @return processDefinitionVersionTag
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_VERSION_TAG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getProcessDefinitionVersionTag() {
        return processDefinitionVersionTag;
    }

    @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_VERSION_TAG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setProcessDefinitionVersionTag(String processDefinitionVersionTag) {
        this.processDefinitionVersionTag = processDefinitionVersionTag;
    }

    public LockedExternalTaskDto processInstanceId(String processInstanceId) {
        this.processInstanceId = processInstanceId;
        return this;
    }

    /**
     * The id of the process instance the external task belongs to.
     * @return processInstanceId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_PROCESS_INSTANCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getProcessInstanceId() {
        return processInstanceId;
    }

    @JsonProperty(JSON_PROPERTY_PROCESS_INSTANCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setProcessInstanceId(String processInstanceId) {
        this.processInstanceId = processInstanceId;
    }

    public LockedExternalTaskDto tenantId(String tenantId) {
        this.tenantId = tenantId;
        return this;
    }

    /**
     * The id of the tenant the external task belongs to.
     * @return tenantId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_TENANT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getTenantId() {
        return tenantId;
    }

    @JsonProperty(JSON_PROPERTY_TENANT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTenantId(String tenantId) {
        this.tenantId = tenantId;
    }

    public LockedExternalTaskDto retries(Integer retries) {
        this.retries = retries;
        return this;
    }

    /**
     * The number of retries the task currently has left.
     * @return retries
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_RETRIES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getRetries() {
        return retries;
    }

    @JsonProperty(JSON_PROPERTY_RETRIES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRetries(Integer retries) {
        this.retries = retries;
    }

    public LockedExternalTaskDto suspended(Boolean suspended) {
        this.suspended = suspended;
        return this;
    }

    /**
     * Whether the process instance the external task belongs to is suspended.
     * @return suspended
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_SUSPENDED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getSuspended() {
        return suspended;
    }

    @JsonProperty(JSON_PROPERTY_SUSPENDED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSuspended(Boolean suspended) {
        this.suspended = suspended;
    }

    public LockedExternalTaskDto workerId(String workerId) {
        this.workerId = workerId;
        return this;
    }

    /**
     * The id of the worker that posesses or posessed the most recent lock.
     * @return workerId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_WORKER_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getWorkerId() {
        return workerId;
    }

    @JsonProperty(JSON_PROPERTY_WORKER_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setWorkerId(String workerId) {
        this.workerId = workerId;
    }

    public LockedExternalTaskDto priority(Long priority) {
        this.priority = priority;
        return this;
    }

    /**
     * The priority of the external task.
     * @return priority
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_PRIORITY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Long getPriority() {
        return priority;
    }

    @JsonProperty(JSON_PROPERTY_PRIORITY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPriority(Long priority) {
        this.priority = priority;
    }

    public LockedExternalTaskDto topicName(String topicName) {
        this.topicName = topicName;
        return this;
    }

    /**
     * The topic name of the external task.
     * @return topicName
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_TOPIC_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getTopicName() {
        return topicName;
    }

    @JsonProperty(JSON_PROPERTY_TOPIC_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTopicName(String topicName) {
        this.topicName = topicName;
    }

    public LockedExternalTaskDto businessKey(String businessKey) {
        this.businessKey = businessKey;
        return this;
    }

    /**
     * The business key of the process instance the external task belongs to.
     * @return businessKey
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_BUSINESS_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getBusinessKey() {
        return businessKey;
    }

    @JsonProperty(JSON_PROPERTY_BUSINESS_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBusinessKey(String businessKey) {
        this.businessKey = businessKey;
    }

    public LockedExternalTaskDto variables(Map<String, VariableValueDto> variables) {
        this.variables = variables;
        return this;
    }

    public LockedExternalTaskDto putVariablesItem(String key, VariableValueDto variablesItem) {
        if (this.variables == null) {
            this.variables = new HashMap<>();
        }
        this.variables.put(key, variablesItem);
        return this;
  }

    /**
     * A JSON object containing a property for each of the requested variables. The key is the variable name, the value is a JSON object of serialized variable values with the following properties:
     * @return variables
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_VARIABLES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Map<String, VariableValueDto> getVariables() {
        return variables;
    }

    @JsonProperty(JSON_PROPERTY_VARIABLES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setVariables(Map<String, VariableValueDto> variables) {
        this.variables = variables;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        LockedExternalTaskDto lockedExternalTaskDto = (LockedExternalTaskDto) o;
        return Objects.equals(this.activityId, lockedExternalTaskDto.activityId) &&
            Objects.equals(this.activityInstanceId, lockedExternalTaskDto.activityInstanceId) &&
            Objects.equals(this.errorMessage, lockedExternalTaskDto.errorMessage) &&
            Objects.equals(this.errorDetails, lockedExternalTaskDto.errorDetails) &&
            Objects.equals(this.executionId, lockedExternalTaskDto.executionId) &&
            Objects.equals(this.id, lockedExternalTaskDto.id) &&
            Objects.equals(this.lockExpirationTime, lockedExternalTaskDto.lockExpirationTime) &&
            Objects.equals(this.processDefinitionId, lockedExternalTaskDto.processDefinitionId) &&
            Objects.equals(this.processDefinitionKey, lockedExternalTaskDto.processDefinitionKey) &&
            Objects.equals(this.processDefinitionVersionTag, lockedExternalTaskDto.processDefinitionVersionTag) &&
            Objects.equals(this.processInstanceId, lockedExternalTaskDto.processInstanceId) &&
            Objects.equals(this.tenantId, lockedExternalTaskDto.tenantId) &&
            Objects.equals(this.retries, lockedExternalTaskDto.retries) &&
            Objects.equals(this.suspended, lockedExternalTaskDto.suspended) &&
            Objects.equals(this.workerId, lockedExternalTaskDto.workerId) &&
            Objects.equals(this.priority, lockedExternalTaskDto.priority) &&
            Objects.equals(this.topicName, lockedExternalTaskDto.topicName) &&
            Objects.equals(this.businessKey, lockedExternalTaskDto.businessKey) &&
            Objects.equals(this.variables, lockedExternalTaskDto.variables);
    }

    @Override
    public int hashCode() {
        return Objects.hash(activityId, activityInstanceId, errorMessage, errorDetails, executionId, id, lockExpirationTime, processDefinitionId, processDefinitionKey, processDefinitionVersionTag, processInstanceId, tenantId, retries, suspended, workerId, priority, topicName, businessKey, variables);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class LockedExternalTaskDto {\n");
        sb.append("    activityId: ").append(toIndentedString(activityId)).append("\n");
        sb.append("    activityInstanceId: ").append(toIndentedString(activityInstanceId)).append("\n");
        sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
        sb.append("    errorDetails: ").append(toIndentedString(errorDetails)).append("\n");
        sb.append("    executionId: ").append(toIndentedString(executionId)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    lockExpirationTime: ").append(toIndentedString(lockExpirationTime)).append("\n");
        sb.append("    processDefinitionId: ").append(toIndentedString(processDefinitionId)).append("\n");
        sb.append("    processDefinitionKey: ").append(toIndentedString(processDefinitionKey)).append("\n");
        sb.append("    processDefinitionVersionTag: ").append(toIndentedString(processDefinitionVersionTag)).append("\n");
        sb.append("    processInstanceId: ").append(toIndentedString(processInstanceId)).append("\n");
        sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
        sb.append("    retries: ").append(toIndentedString(retries)).append("\n");
        sb.append("    suspended: ").append(toIndentedString(suspended)).append("\n");
        sb.append("    workerId: ").append(toIndentedString(workerId)).append("\n");
        sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
        sb.append("    topicName: ").append(toIndentedString(topicName)).append("\n");
        sb.append("    businessKey: ").append(toIndentedString(businessKey)).append("\n");
        sb.append("    variables: ").append(toIndentedString(variables)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

