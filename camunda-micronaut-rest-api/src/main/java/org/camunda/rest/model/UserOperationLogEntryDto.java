/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.18.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.camunda.rest.model;

import com.fasterxml.jackson.annotation.*;
import io.micronaut.core.annotation.Introspected;
import io.micronaut.core.annotation.Nullable;

import javax.annotation.Generated;
import java.time.OffsetDateTime;
import java.util.Objects;

/**
 * UserOperationLogEntryDto
 */
@JsonPropertyOrder({
  UserOperationLogEntryDto.JSON_PROPERTY_ID,
  UserOperationLogEntryDto.JSON_PROPERTY_USER_ID,
  UserOperationLogEntryDto.JSON_PROPERTY_TIMESTAMP,
  UserOperationLogEntryDto.JSON_PROPERTY_OPERATION_ID,
  UserOperationLogEntryDto.JSON_PROPERTY_OPERATION_TYPE,
  UserOperationLogEntryDto.JSON_PROPERTY_ENTITY_TYPE,
  UserOperationLogEntryDto.JSON_PROPERTY_CATEGORY,
  UserOperationLogEntryDto.JSON_PROPERTY_ANNOTATION,
  UserOperationLogEntryDto.JSON_PROPERTY_PROPERTY,
  UserOperationLogEntryDto.JSON_PROPERTY_ORG_VALUE,
  UserOperationLogEntryDto.JSON_PROPERTY_NEW_VALUE,
  UserOperationLogEntryDto.JSON_PROPERTY_DEPLOYMENT_ID,
  UserOperationLogEntryDto.JSON_PROPERTY_PROCESS_DEFINITION_ID,
  UserOperationLogEntryDto.JSON_PROPERTY_PROCESS_DEFINITION_KEY,
  UserOperationLogEntryDto.JSON_PROPERTY_PROCESS_INSTANCE_ID,
  UserOperationLogEntryDto.JSON_PROPERTY_EXECUTION_ID,
  UserOperationLogEntryDto.JSON_PROPERTY_CASE_DEFINITION_ID,
  UserOperationLogEntryDto.JSON_PROPERTY_CASE_INSTANCE_ID,
  UserOperationLogEntryDto.JSON_PROPERTY_CASE_EXECUTION_ID,
  UserOperationLogEntryDto.JSON_PROPERTY_TASK_ID,
  UserOperationLogEntryDto.JSON_PROPERTY_EXTERNAL_TASK_ID,
  UserOperationLogEntryDto.JSON_PROPERTY_BATCH_ID,
  UserOperationLogEntryDto.JSON_PROPERTY_JOB_ID,
  UserOperationLogEntryDto.JSON_PROPERTY_JOB_DEFINITION_ID,
  UserOperationLogEntryDto.JSON_PROPERTY_REMOVAL_TIME,
  UserOperationLogEntryDto.JSON_PROPERTY_ROOT_PROCESS_INSTANCE_ID
})
@JsonTypeName("UserOperationLogEntryDto")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen")
@Introspected
public class UserOperationLogEntryDto {
    public static final String JSON_PROPERTY_ID = "id";
    private String id;

    public static final String JSON_PROPERTY_USER_ID = "userId";
    private String userId;

    public static final String JSON_PROPERTY_TIMESTAMP = "timestamp";
    private OffsetDateTime timestamp;

    public static final String JSON_PROPERTY_OPERATION_ID = "operationId";
    private String operationId;

    public static final String JSON_PROPERTY_OPERATION_TYPE = "operationType";
    private String operationType;

    public static final String JSON_PROPERTY_ENTITY_TYPE = "entityType";
    private String entityType;

    public static final String JSON_PROPERTY_CATEGORY = "category";
    private String category;

    public static final String JSON_PROPERTY_ANNOTATION = "annotation";
    private String annotation;

    public static final String JSON_PROPERTY_PROPERTY = "property";
    private String property;

    public static final String JSON_PROPERTY_ORG_VALUE = "orgValue";
    private String orgValue;

    public static final String JSON_PROPERTY_NEW_VALUE = "newValue";
    private String newValue;

    public static final String JSON_PROPERTY_DEPLOYMENT_ID = "deploymentId";
    private String deploymentId;

    public static final String JSON_PROPERTY_PROCESS_DEFINITION_ID = "processDefinitionId";
    private String processDefinitionId;

    public static final String JSON_PROPERTY_PROCESS_DEFINITION_KEY = "processDefinitionKey";
    private String processDefinitionKey;

    public static final String JSON_PROPERTY_PROCESS_INSTANCE_ID = "processInstanceId";
    private String processInstanceId;

    public static final String JSON_PROPERTY_EXECUTION_ID = "executionId";
    private String executionId;

    public static final String JSON_PROPERTY_CASE_DEFINITION_ID = "caseDefinitionId";
    private String caseDefinitionId;

    public static final String JSON_PROPERTY_CASE_INSTANCE_ID = "caseInstanceId";
    private String caseInstanceId;

    public static final String JSON_PROPERTY_CASE_EXECUTION_ID = "caseExecutionId";
    private String caseExecutionId;

    public static final String JSON_PROPERTY_TASK_ID = "taskId";
    private String taskId;

    public static final String JSON_PROPERTY_EXTERNAL_TASK_ID = "externalTaskId";
    private String externalTaskId;

    public static final String JSON_PROPERTY_BATCH_ID = "batchId";
    private String batchId;

    public static final String JSON_PROPERTY_JOB_ID = "jobId";
    private String jobId;

    public static final String JSON_PROPERTY_JOB_DEFINITION_ID = "jobDefinitionId";
    private String jobDefinitionId;

    public static final String JSON_PROPERTY_REMOVAL_TIME = "removalTime";
    private OffsetDateTime removalTime;

    public static final String JSON_PROPERTY_ROOT_PROCESS_INSTANCE_ID = "rootProcessInstanceId";
    private String rootProcessInstanceId;

    public UserOperationLogEntryDto() {
    }

    public UserOperationLogEntryDto id(String id) {
        this.id = id;
        return this;
    }

    /**
     * The unique identifier of this log entry.
     * @return id
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setId(String id) {
        this.id = id;
    }

    public UserOperationLogEntryDto userId(String userId) {
        this.userId = userId;
        return this;
    }

    /**
     * The user who performed this operation.
     * @return userId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_USER_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getUserId() {
        return userId;
    }

    @JsonProperty(JSON_PROPERTY_USER_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUserId(String userId) {
        this.userId = userId;
    }

    public UserOperationLogEntryDto timestamp(OffsetDateTime timestamp) {
        this.timestamp = timestamp;
        return this;
    }

    /**
     * Timestamp of this operation.
     * @return timestamp
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_TIMESTAMP)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public OffsetDateTime getTimestamp() {
        return timestamp;
    }

    @JsonProperty(JSON_PROPERTY_TIMESTAMP)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public void setTimestamp(OffsetDateTime timestamp) {
        this.timestamp = timestamp;
    }

    public UserOperationLogEntryDto operationId(String operationId) {
        this.operationId = operationId;
        return this;
    }

    /**
     * The unique identifier of this operation. A composite operation that changes multiple properties has a common &#x60;operationId&#x60;.
     * @return operationId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_OPERATION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getOperationId() {
        return operationId;
    }

    @JsonProperty(JSON_PROPERTY_OPERATION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOperationId(String operationId) {
        this.operationId = operationId;
    }

    public UserOperationLogEntryDto operationType(String operationType) {
        this.operationType = operationType;
        return this;
    }

    /**
     * The type of this operation, e.g., &#x60;Assign&#x60;, &#x60;Claim&#x60; and so on.
     * @return operationType
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_OPERATION_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getOperationType() {
        return operationType;
    }

    @JsonProperty(JSON_PROPERTY_OPERATION_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOperationType(String operationType) {
        this.operationType = operationType;
    }

    public UserOperationLogEntryDto entityType(String entityType) {
        this.entityType = entityType;
        return this;
    }

    /**
     * The type of the entity on which this operation was executed, e.g., &#x60;Task&#x60; or &#x60;Attachment&#x60;.
     * @return entityType
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_ENTITY_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getEntityType() {
        return entityType;
    }

    @JsonProperty(JSON_PROPERTY_ENTITY_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEntityType(String entityType) {
        this.entityType = entityType;
    }

    public UserOperationLogEntryDto category(String category) {
        this.category = category;
        return this;
    }

    /**
     * The name of the category this operation was associated with, e.g., &#x60;TaskWorker&#x60; or &#x60;Admin&#x60;.
     * @return category
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_CATEGORY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getCategory() {
        return category;
    }

    @JsonProperty(JSON_PROPERTY_CATEGORY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCategory(String category) {
        this.category = category;
    }

    public UserOperationLogEntryDto annotation(String annotation) {
        this.annotation = annotation;
        return this;
    }

    /**
     * An arbitrary annotation set by a user for auditing reasons.
     * @return annotation
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_ANNOTATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getAnnotation() {
        return annotation;
    }

    @JsonProperty(JSON_PROPERTY_ANNOTATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAnnotation(String annotation) {
        this.annotation = annotation;
    }

    public UserOperationLogEntryDto property(String property) {
        this.property = property;
        return this;
    }

    /**
     * The property changed by this operation.
     * @return property
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_PROPERTY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getProperty() {
        return property;
    }

    @JsonProperty(JSON_PROPERTY_PROPERTY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setProperty(String property) {
        this.property = property;
    }

    public UserOperationLogEntryDto orgValue(String orgValue) {
        this.orgValue = orgValue;
        return this;
    }

    /**
     * The original value of the changed property.
     * @return orgValue
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_ORG_VALUE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getOrgValue() {
        return orgValue;
    }

    @JsonProperty(JSON_PROPERTY_ORG_VALUE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOrgValue(String orgValue) {
        this.orgValue = orgValue;
    }

    public UserOperationLogEntryDto newValue(String newValue) {
        this.newValue = newValue;
        return this;
    }

    /**
     * The new value of the changed property.
     * @return newValue
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_NEW_VALUE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getNewValue() {
        return newValue;
    }

    @JsonProperty(JSON_PROPERTY_NEW_VALUE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNewValue(String newValue) {
        this.newValue = newValue;
    }

    public UserOperationLogEntryDto deploymentId(String deploymentId) {
        this.deploymentId = deploymentId;
        return this;
    }

    /**
     * If not &#x60;null&#x60;, the operation is restricted to entities in relation to this deployment.
     * @return deploymentId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_DEPLOYMENT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDeploymentId() {
        return deploymentId;
    }

    @JsonProperty(JSON_PROPERTY_DEPLOYMENT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDeploymentId(String deploymentId) {
        this.deploymentId = deploymentId;
    }

    public UserOperationLogEntryDto processDefinitionId(String processDefinitionId) {
        this.processDefinitionId = processDefinitionId;
        return this;
    }

    /**
     * If not &#x60;null&#x60;, the operation is restricted to entities in relation to this process definition.
     * @return processDefinitionId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getProcessDefinitionId() {
        return processDefinitionId;
    }

    @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setProcessDefinitionId(String processDefinitionId) {
        this.processDefinitionId = processDefinitionId;
    }

    public UserOperationLogEntryDto processDefinitionKey(String processDefinitionKey) {
        this.processDefinitionKey = processDefinitionKey;
        return this;
    }

    /**
     * If not &#x60;null&#x60;, the operation is restricted to entities in relation to process definitions with this key.
     * @return processDefinitionKey
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getProcessDefinitionKey() {
        return processDefinitionKey;
    }

    @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setProcessDefinitionKey(String processDefinitionKey) {
        this.processDefinitionKey = processDefinitionKey;
    }

    public UserOperationLogEntryDto processInstanceId(String processInstanceId) {
        this.processInstanceId = processInstanceId;
        return this;
    }

    /**
     * If not &#x60;null&#x60;, the operation is restricted to entities in relation to this process instance.
     * @return processInstanceId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_PROCESS_INSTANCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getProcessInstanceId() {
        return processInstanceId;
    }

    @JsonProperty(JSON_PROPERTY_PROCESS_INSTANCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setProcessInstanceId(String processInstanceId) {
        this.processInstanceId = processInstanceId;
    }

    public UserOperationLogEntryDto executionId(String executionId) {
        this.executionId = executionId;
        return this;
    }

    /**
     * If not &#x60;null&#x60;, the operation is restricted to entities in relation to this execution.
     * @return executionId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_EXECUTION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getExecutionId() {
        return executionId;
    }

    @JsonProperty(JSON_PROPERTY_EXECUTION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setExecutionId(String executionId) {
        this.executionId = executionId;
    }

    public UserOperationLogEntryDto caseDefinitionId(String caseDefinitionId) {
        this.caseDefinitionId = caseDefinitionId;
        return this;
    }

    /**
     * If not &#x60;null&#x60;, the operation is restricted to entities in relation to this case definition.
     * @return caseDefinitionId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_CASE_DEFINITION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getCaseDefinitionId() {
        return caseDefinitionId;
    }

    @JsonProperty(JSON_PROPERTY_CASE_DEFINITION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCaseDefinitionId(String caseDefinitionId) {
        this.caseDefinitionId = caseDefinitionId;
    }

    public UserOperationLogEntryDto caseInstanceId(String caseInstanceId) {
        this.caseInstanceId = caseInstanceId;
        return this;
    }

    /**
     * If not &#x60;null&#x60;, the operation is restricted to entities in relation to this case instance.
     * @return caseInstanceId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_CASE_INSTANCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getCaseInstanceId() {
        return caseInstanceId;
    }

    @JsonProperty(JSON_PROPERTY_CASE_INSTANCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCaseInstanceId(String caseInstanceId) {
        this.caseInstanceId = caseInstanceId;
    }

    public UserOperationLogEntryDto caseExecutionId(String caseExecutionId) {
        this.caseExecutionId = caseExecutionId;
        return this;
    }

    /**
     * If not &#x60;null&#x60;, the operation is restricted to entities in relation to this case execution.
     * @return caseExecutionId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_CASE_EXECUTION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getCaseExecutionId() {
        return caseExecutionId;
    }

    @JsonProperty(JSON_PROPERTY_CASE_EXECUTION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCaseExecutionId(String caseExecutionId) {
        this.caseExecutionId = caseExecutionId;
    }

    public UserOperationLogEntryDto taskId(String taskId) {
        this.taskId = taskId;
        return this;
    }

    /**
     * If not &#x60;null&#x60;, the operation is restricted to entities in relation to this task.
     * @return taskId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_TASK_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getTaskId() {
        return taskId;
    }

    @JsonProperty(JSON_PROPERTY_TASK_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTaskId(String taskId) {
        this.taskId = taskId;
    }

    public UserOperationLogEntryDto externalTaskId(String externalTaskId) {
        this.externalTaskId = externalTaskId;
        return this;
    }

    /**
     * If not &#x60;null&#x60;, the operation is restricted to entities in relation to this external task.
     * @return externalTaskId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_EXTERNAL_TASK_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getExternalTaskId() {
        return externalTaskId;
    }

    @JsonProperty(JSON_PROPERTY_EXTERNAL_TASK_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setExternalTaskId(String externalTaskId) {
        this.externalTaskId = externalTaskId;
    }

    public UserOperationLogEntryDto batchId(String batchId) {
        this.batchId = batchId;
        return this;
    }

    /**
     * If not &#x60;null&#x60;, the operation is restricted to entities in relation to this batch.
     * @return batchId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_BATCH_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getBatchId() {
        return batchId;
    }

    @JsonProperty(JSON_PROPERTY_BATCH_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBatchId(String batchId) {
        this.batchId = batchId;
    }

    public UserOperationLogEntryDto jobId(String jobId) {
        this.jobId = jobId;
        return this;
    }

    /**
     * If not &#x60;null&#x60;, the operation is restricted to entities in relation to this job.
     * @return jobId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_JOB_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getJobId() {
        return jobId;
    }

    @JsonProperty(JSON_PROPERTY_JOB_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setJobId(String jobId) {
        this.jobId = jobId;
    }

    public UserOperationLogEntryDto jobDefinitionId(String jobDefinitionId) {
        this.jobDefinitionId = jobDefinitionId;
        return this;
    }

    /**
     * If not &#x60;null&#x60;, the operation is restricted to entities in relation to this job definition.
     * @return jobDefinitionId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_JOB_DEFINITION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getJobDefinitionId() {
        return jobDefinitionId;
    }

    @JsonProperty(JSON_PROPERTY_JOB_DEFINITION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setJobDefinitionId(String jobDefinitionId) {
        this.jobDefinitionId = jobDefinitionId;
    }

    public UserOperationLogEntryDto removalTime(OffsetDateTime removalTime) {
        this.removalTime = removalTime;
        return this;
    }

    /**
     * The time after which the entry should be removed by the History Cleanup job. [Default format](https://docs.camunda.org/manual/7.18/reference/rest/overview/date-format/) &#x60;yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSSZ&#x60;.
     * @return removalTime
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_REMOVAL_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public OffsetDateTime getRemovalTime() {
        return removalTime;
    }

    @JsonProperty(JSON_PROPERTY_REMOVAL_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public void setRemovalTime(OffsetDateTime removalTime) {
        this.removalTime = removalTime;
    }

    public UserOperationLogEntryDto rootProcessInstanceId(String rootProcessInstanceId) {
        this.rootProcessInstanceId = rootProcessInstanceId;
        return this;
    }

    /**
     * The process instance id of the root process instance that initiated the process containing this entry.
     * @return rootProcessInstanceId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_ROOT_PROCESS_INSTANCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getRootProcessInstanceId() {
        return rootProcessInstanceId;
    }

    @JsonProperty(JSON_PROPERTY_ROOT_PROCESS_INSTANCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRootProcessInstanceId(String rootProcessInstanceId) {
        this.rootProcessInstanceId = rootProcessInstanceId;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UserOperationLogEntryDto userOperationLogEntryDto = (UserOperationLogEntryDto) o;
        return Objects.equals(this.id, userOperationLogEntryDto.id) &&
            Objects.equals(this.userId, userOperationLogEntryDto.userId) &&
            Objects.equals(this.timestamp, userOperationLogEntryDto.timestamp) &&
            Objects.equals(this.operationId, userOperationLogEntryDto.operationId) &&
            Objects.equals(this.operationType, userOperationLogEntryDto.operationType) &&
            Objects.equals(this.entityType, userOperationLogEntryDto.entityType) &&
            Objects.equals(this.category, userOperationLogEntryDto.category) &&
            Objects.equals(this.annotation, userOperationLogEntryDto.annotation) &&
            Objects.equals(this.property, userOperationLogEntryDto.property) &&
            Objects.equals(this.orgValue, userOperationLogEntryDto.orgValue) &&
            Objects.equals(this.newValue, userOperationLogEntryDto.newValue) &&
            Objects.equals(this.deploymentId, userOperationLogEntryDto.deploymentId) &&
            Objects.equals(this.processDefinitionId, userOperationLogEntryDto.processDefinitionId) &&
            Objects.equals(this.processDefinitionKey, userOperationLogEntryDto.processDefinitionKey) &&
            Objects.equals(this.processInstanceId, userOperationLogEntryDto.processInstanceId) &&
            Objects.equals(this.executionId, userOperationLogEntryDto.executionId) &&
            Objects.equals(this.caseDefinitionId, userOperationLogEntryDto.caseDefinitionId) &&
            Objects.equals(this.caseInstanceId, userOperationLogEntryDto.caseInstanceId) &&
            Objects.equals(this.caseExecutionId, userOperationLogEntryDto.caseExecutionId) &&
            Objects.equals(this.taskId, userOperationLogEntryDto.taskId) &&
            Objects.equals(this.externalTaskId, userOperationLogEntryDto.externalTaskId) &&
            Objects.equals(this.batchId, userOperationLogEntryDto.batchId) &&
            Objects.equals(this.jobId, userOperationLogEntryDto.jobId) &&
            Objects.equals(this.jobDefinitionId, userOperationLogEntryDto.jobDefinitionId) &&
            Objects.equals(this.removalTime, userOperationLogEntryDto.removalTime) &&
            Objects.equals(this.rootProcessInstanceId, userOperationLogEntryDto.rootProcessInstanceId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, userId, timestamp, operationId, operationType, entityType, category, annotation, property, orgValue, newValue, deploymentId, processDefinitionId, processDefinitionKey, processInstanceId, executionId, caseDefinitionId, caseInstanceId, caseExecutionId, taskId, externalTaskId, batchId, jobId, jobDefinitionId, removalTime, rootProcessInstanceId);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class UserOperationLogEntryDto {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
        sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
        sb.append("    operationId: ").append(toIndentedString(operationId)).append("\n");
        sb.append("    operationType: ").append(toIndentedString(operationType)).append("\n");
        sb.append("    entityType: ").append(toIndentedString(entityType)).append("\n");
        sb.append("    category: ").append(toIndentedString(category)).append("\n");
        sb.append("    annotation: ").append(toIndentedString(annotation)).append("\n");
        sb.append("    property: ").append(toIndentedString(property)).append("\n");
        sb.append("    orgValue: ").append(toIndentedString(orgValue)).append("\n");
        sb.append("    newValue: ").append(toIndentedString(newValue)).append("\n");
        sb.append("    deploymentId: ").append(toIndentedString(deploymentId)).append("\n");
        sb.append("    processDefinitionId: ").append(toIndentedString(processDefinitionId)).append("\n");
        sb.append("    processDefinitionKey: ").append(toIndentedString(processDefinitionKey)).append("\n");
        sb.append("    processInstanceId: ").append(toIndentedString(processInstanceId)).append("\n");
        sb.append("    executionId: ").append(toIndentedString(executionId)).append("\n");
        sb.append("    caseDefinitionId: ").append(toIndentedString(caseDefinitionId)).append("\n");
        sb.append("    caseInstanceId: ").append(toIndentedString(caseInstanceId)).append("\n");
        sb.append("    caseExecutionId: ").append(toIndentedString(caseExecutionId)).append("\n");
        sb.append("    taskId: ").append(toIndentedString(taskId)).append("\n");
        sb.append("    externalTaskId: ").append(toIndentedString(externalTaskId)).append("\n");
        sb.append("    batchId: ").append(toIndentedString(batchId)).append("\n");
        sb.append("    jobId: ").append(toIndentedString(jobId)).append("\n");
        sb.append("    jobDefinitionId: ").append(toIndentedString(jobDefinitionId)).append("\n");
        sb.append("    removalTime: ").append(toIndentedString(removalTime)).append("\n");
        sb.append("    rootProcessInstanceId: ").append(toIndentedString(rootProcessInstanceId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

