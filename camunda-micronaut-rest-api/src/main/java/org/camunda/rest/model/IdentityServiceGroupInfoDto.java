/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.18.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.camunda.rest.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import io.micronaut.core.annotation.Introspected;
import io.micronaut.core.annotation.Nullable;

import javax.annotation.Generated;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * IdentityServiceGroupInfoDto
 */
@JsonPropertyOrder({
  IdentityServiceGroupInfoDto.JSON_PROPERTY_GROUPS,
  IdentityServiceGroupInfoDto.JSON_PROPERTY_GROUP_USERS
})
@JsonTypeName("IdentityServiceGroupInfoDto")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen")
@Introspected
public class IdentityServiceGroupInfoDto {
    public static final String JSON_PROPERTY_GROUPS = "groups";
    private List<IdentityServiceGroupDto> groups = null;

    public static final String JSON_PROPERTY_GROUP_USERS = "groupUsers";
    private List<IdentityServiceUserDto> groupUsers = null;

    public IdentityServiceGroupInfoDto() {
    }

    public IdentityServiceGroupInfoDto groups(List<IdentityServiceGroupDto> groups) {
        this.groups = groups;
        return this;
    }

    public IdentityServiceGroupInfoDto addGroupsItem(IdentityServiceGroupDto groupsItem) {
        if (this.groups == null) {
            this.groups = new ArrayList<>();
        }
        this.groups.add(groupsItem);
        return this;
    }

    /**
     * An array of group objects.
     * @return groups
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_GROUPS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<IdentityServiceGroupDto> getGroups() {
        return groups;
    }

    @JsonProperty(JSON_PROPERTY_GROUPS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setGroups(List<IdentityServiceGroupDto> groups) {
        this.groups = groups;
    }

    public IdentityServiceGroupInfoDto groupUsers(List<IdentityServiceUserDto> groupUsers) {
        this.groupUsers = groupUsers;
        return this;
    }

    public IdentityServiceGroupInfoDto addGroupUsersItem(IdentityServiceUserDto groupUsersItem) {
        if (this.groupUsers == null) {
            this.groupUsers = new ArrayList<>();
        }
        this.groupUsers.add(groupUsersItem);
        return this;
    }

    /**
     * An array that contains all users that are member in one of the groups.
     * @return groupUsers
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_GROUP_USERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<IdentityServiceUserDto> getGroupUsers() {
        return groupUsers;
    }

    @JsonProperty(JSON_PROPERTY_GROUP_USERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setGroupUsers(List<IdentityServiceUserDto> groupUsers) {
        this.groupUsers = groupUsers;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        IdentityServiceGroupInfoDto identityServiceGroupInfoDto = (IdentityServiceGroupInfoDto) o;
        return Objects.equals(this.groups, identityServiceGroupInfoDto.groups) &&
            Objects.equals(this.groupUsers, identityServiceGroupInfoDto.groupUsers);
    }

    @Override
    public int hashCode() {
        return Objects.hash(groups, groupUsers);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class IdentityServiceGroupInfoDto {\n");
        sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
        sb.append("    groupUsers: ").append(toIndentedString(groupUsers)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

