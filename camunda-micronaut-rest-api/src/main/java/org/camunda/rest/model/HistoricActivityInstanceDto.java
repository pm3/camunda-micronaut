/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.18.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.camunda.rest.model;

import com.fasterxml.jackson.annotation.*;
import io.micronaut.core.annotation.Introspected;
import io.micronaut.core.annotation.Nullable;

import javax.annotation.Generated;
import java.time.OffsetDateTime;
import java.util.Objects;

/**
 * HistoricActivityInstanceDto
 */
@JsonPropertyOrder({
  HistoricActivityInstanceDto.JSON_PROPERTY_ID,
  HistoricActivityInstanceDto.JSON_PROPERTY_PARENT_ACTIVITY_INSTANCE_ID,
  HistoricActivityInstanceDto.JSON_PROPERTY_ACTIVITY_ID,
  HistoricActivityInstanceDto.JSON_PROPERTY_ACTIVITY_NAME,
  HistoricActivityInstanceDto.JSON_PROPERTY_ACTIVITY_TYPE,
  HistoricActivityInstanceDto.JSON_PROPERTY_PROCESS_DEFINITION_KEY,
  HistoricActivityInstanceDto.JSON_PROPERTY_PROCESS_DEFINITION_ID,
  HistoricActivityInstanceDto.JSON_PROPERTY_PROCESS_INSTANCE_ID,
  HistoricActivityInstanceDto.JSON_PROPERTY_EXECUTION_ID,
  HistoricActivityInstanceDto.JSON_PROPERTY_TASK_ID,
  HistoricActivityInstanceDto.JSON_PROPERTY_ASSIGNEE,
  HistoricActivityInstanceDto.JSON_PROPERTY_CALLED_PROCESS_INSTANCE_ID,
  HistoricActivityInstanceDto.JSON_PROPERTY_CALLED_CASE_INSTANCE_ID,
  HistoricActivityInstanceDto.JSON_PROPERTY_START_TIME,
  HistoricActivityInstanceDto.JSON_PROPERTY_END_TIME,
  HistoricActivityInstanceDto.JSON_PROPERTY_DURATION_IN_MILLIS,
  HistoricActivityInstanceDto.JSON_PROPERTY_CANCELED,
  HistoricActivityInstanceDto.JSON_PROPERTY_COMPLETE_SCOPE,
  HistoricActivityInstanceDto.JSON_PROPERTY_TENANT_ID,
  HistoricActivityInstanceDto.JSON_PROPERTY_REMOVAL_TIME,
  HistoricActivityInstanceDto.JSON_PROPERTY_ROOT_PROCESS_INSTANCE_ID
})
@JsonTypeName("HistoricActivityInstanceDto")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen")
@Introspected
public class HistoricActivityInstanceDto {
    public static final String JSON_PROPERTY_ID = "id";
    private String id;

    public static final String JSON_PROPERTY_PARENT_ACTIVITY_INSTANCE_ID = "parentActivityInstanceId";
    private String parentActivityInstanceId;

    public static final String JSON_PROPERTY_ACTIVITY_ID = "activityId";
    private String activityId;

    public static final String JSON_PROPERTY_ACTIVITY_NAME = "activityName";
    private String activityName;

    public static final String JSON_PROPERTY_ACTIVITY_TYPE = "activityType";
    private String activityType;

    public static final String JSON_PROPERTY_PROCESS_DEFINITION_KEY = "processDefinitionKey";
    private String processDefinitionKey;

    public static final String JSON_PROPERTY_PROCESS_DEFINITION_ID = "processDefinitionId";
    private String processDefinitionId;

    public static final String JSON_PROPERTY_PROCESS_INSTANCE_ID = "processInstanceId";
    private String processInstanceId;

    public static final String JSON_PROPERTY_EXECUTION_ID = "executionId";
    private String executionId;

    public static final String JSON_PROPERTY_TASK_ID = "taskId";
    private String taskId;

    public static final String JSON_PROPERTY_ASSIGNEE = "assignee";
    private String assignee;

    public static final String JSON_PROPERTY_CALLED_PROCESS_INSTANCE_ID = "calledProcessInstanceId";
    private String calledProcessInstanceId;

    public static final String JSON_PROPERTY_CALLED_CASE_INSTANCE_ID = "calledCaseInstanceId";
    private String calledCaseInstanceId;

    public static final String JSON_PROPERTY_START_TIME = "startTime";
    private OffsetDateTime startTime;

    public static final String JSON_PROPERTY_END_TIME = "endTime";
    private OffsetDateTime endTime;

    public static final String JSON_PROPERTY_DURATION_IN_MILLIS = "durationInMillis";
    private Long durationInMillis;

    public static final String JSON_PROPERTY_CANCELED = "canceled";
    private Boolean canceled;

    public static final String JSON_PROPERTY_COMPLETE_SCOPE = "completeScope";
    private Boolean completeScope;

    public static final String JSON_PROPERTY_TENANT_ID = "tenantId";
    private String tenantId;

    public static final String JSON_PROPERTY_REMOVAL_TIME = "removalTime";
    private OffsetDateTime removalTime;

    public static final String JSON_PROPERTY_ROOT_PROCESS_INSTANCE_ID = "rootProcessInstanceId";
    private String rootProcessInstanceId;

    public HistoricActivityInstanceDto() {
    }

    public HistoricActivityInstanceDto id(String id) {
        this.id = id;
        return this;
    }

    /**
     * The id of the activity instance.
     * @return id
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setId(String id) {
        this.id = id;
    }

    public HistoricActivityInstanceDto parentActivityInstanceId(String parentActivityInstanceId) {
        this.parentActivityInstanceId = parentActivityInstanceId;
        return this;
    }

    /**
     * The id of the parent activity instance, for example a sub process instance.
     * @return parentActivityInstanceId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_PARENT_ACTIVITY_INSTANCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getParentActivityInstanceId() {
        return parentActivityInstanceId;
    }

    @JsonProperty(JSON_PROPERTY_PARENT_ACTIVITY_INSTANCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setParentActivityInstanceId(String parentActivityInstanceId) {
        this.parentActivityInstanceId = parentActivityInstanceId;
    }

    public HistoricActivityInstanceDto activityId(String activityId) {
        this.activityId = activityId;
        return this;
    }

    /**
     * The id of the activity that this object is an instance of.
     * @return activityId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_ACTIVITY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getActivityId() {
        return activityId;
    }

    @JsonProperty(JSON_PROPERTY_ACTIVITY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setActivityId(String activityId) {
        this.activityId = activityId;
    }

    public HistoricActivityInstanceDto activityName(String activityName) {
        this.activityName = activityName;
        return this;
    }

    /**
     * The name of the activity that this object is an instance of.
     * @return activityName
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_ACTIVITY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getActivityName() {
        return activityName;
    }

    @JsonProperty(JSON_PROPERTY_ACTIVITY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setActivityName(String activityName) {
        this.activityName = activityName;
    }

    public HistoricActivityInstanceDto activityType(String activityType) {
        this.activityType = activityType;
        return this;
    }

    /**
     * The type of the activity that this object is an instance of.
     * @return activityType
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_ACTIVITY_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getActivityType() {
        return activityType;
    }

    @JsonProperty(JSON_PROPERTY_ACTIVITY_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setActivityType(String activityType) {
        this.activityType = activityType;
    }

    public HistoricActivityInstanceDto processDefinitionKey(String processDefinitionKey) {
        this.processDefinitionKey = processDefinitionKey;
        return this;
    }

    /**
     * The key of the process definition that this activity instance belongs to.
     * @return processDefinitionKey
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getProcessDefinitionKey() {
        return processDefinitionKey;
    }

    @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_KEY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setProcessDefinitionKey(String processDefinitionKey) {
        this.processDefinitionKey = processDefinitionKey;
    }

    public HistoricActivityInstanceDto processDefinitionId(String processDefinitionId) {
        this.processDefinitionId = processDefinitionId;
        return this;
    }

    /**
     * The id of the process definition that this activity instance belongs to.
     * @return processDefinitionId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getProcessDefinitionId() {
        return processDefinitionId;
    }

    @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setProcessDefinitionId(String processDefinitionId) {
        this.processDefinitionId = processDefinitionId;
    }

    public HistoricActivityInstanceDto processInstanceId(String processInstanceId) {
        this.processInstanceId = processInstanceId;
        return this;
    }

    /**
     * The id of the process instance that this activity instance belongs to.
     * @return processInstanceId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_PROCESS_INSTANCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getProcessInstanceId() {
        return processInstanceId;
    }

    @JsonProperty(JSON_PROPERTY_PROCESS_INSTANCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setProcessInstanceId(String processInstanceId) {
        this.processInstanceId = processInstanceId;
    }

    public HistoricActivityInstanceDto executionId(String executionId) {
        this.executionId = executionId;
        return this;
    }

    /**
     * The id of the execution that executed this activity instance.
     * @return executionId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_EXECUTION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getExecutionId() {
        return executionId;
    }

    @JsonProperty(JSON_PROPERTY_EXECUTION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setExecutionId(String executionId) {
        this.executionId = executionId;
    }

    public HistoricActivityInstanceDto taskId(String taskId) {
        this.taskId = taskId;
        return this;
    }

    /**
     * The id of the task that is associated to this activity instance. Is only set if the activity is a user task.
     * @return taskId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_TASK_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getTaskId() {
        return taskId;
    }

    @JsonProperty(JSON_PROPERTY_TASK_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTaskId(String taskId) {
        this.taskId = taskId;
    }

    public HistoricActivityInstanceDto assignee(String assignee) {
        this.assignee = assignee;
        return this;
    }

    /**
     * The assignee of the task that is associated to this activity instance. Is only set if the activity is a user task.
     * @return assignee
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_ASSIGNEE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getAssignee() {
        return assignee;
    }

    @JsonProperty(JSON_PROPERTY_ASSIGNEE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAssignee(String assignee) {
        this.assignee = assignee;
    }

    public HistoricActivityInstanceDto calledProcessInstanceId(String calledProcessInstanceId) {
        this.calledProcessInstanceId = calledProcessInstanceId;
        return this;
    }

    /**
     * The id of the called process instance. Is only set if the activity is a call activity and the called instance a process instance.
     * @return calledProcessInstanceId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_CALLED_PROCESS_INSTANCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getCalledProcessInstanceId() {
        return calledProcessInstanceId;
    }

    @JsonProperty(JSON_PROPERTY_CALLED_PROCESS_INSTANCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCalledProcessInstanceId(String calledProcessInstanceId) {
        this.calledProcessInstanceId = calledProcessInstanceId;
    }

    public HistoricActivityInstanceDto calledCaseInstanceId(String calledCaseInstanceId) {
        this.calledCaseInstanceId = calledCaseInstanceId;
        return this;
    }

    /**
     * The id of the called case instance. Is only set if the activity is a call activity and the called instance a case instance.
     * @return calledCaseInstanceId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_CALLED_CASE_INSTANCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getCalledCaseInstanceId() {
        return calledCaseInstanceId;
    }

    @JsonProperty(JSON_PROPERTY_CALLED_CASE_INSTANCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCalledCaseInstanceId(String calledCaseInstanceId) {
        this.calledCaseInstanceId = calledCaseInstanceId;
    }

    public HistoricActivityInstanceDto startTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }

    /**
     * The time the instance was started. By [default](https://docs.camunda.org/manual/7.18/reference/rest/overview/date-format/), the date must have the format &#x60;yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSSZ&#x60;, e.g., &#x60;2013-01-23T14:42:45.000+0200&#x60;.
     * @return startTime
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_START_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public OffsetDateTime getStartTime() {
        return startTime;
    }

    @JsonProperty(JSON_PROPERTY_START_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public void setStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
    }

    public HistoricActivityInstanceDto endTime(OffsetDateTime endTime) {
        this.endTime = endTime;
        return this;
    }

    /**
     * The time the instance ended. By [default](https://docs.camunda.org/manual/7.18/reference/rest/overview/date-format/), the date must have the format &#x60;yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSSZ&#x60;, e.g., &#x60;2013-01-23T14:42:45.000+0200&#x60;.
     * @return endTime
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_END_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public OffsetDateTime getEndTime() {
        return endTime;
    }

    @JsonProperty(JSON_PROPERTY_END_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public void setEndTime(OffsetDateTime endTime) {
        this.endTime = endTime;
    }

    public HistoricActivityInstanceDto durationInMillis(Long durationInMillis) {
        this.durationInMillis = durationInMillis;
        return this;
    }

    /**
     * The time the instance took to finish (in milliseconds).
     * @return durationInMillis
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_DURATION_IN_MILLIS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Long getDurationInMillis() {
        return durationInMillis;
    }

    @JsonProperty(JSON_PROPERTY_DURATION_IN_MILLIS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDurationInMillis(Long durationInMillis) {
        this.durationInMillis = durationInMillis;
    }

    public HistoricActivityInstanceDto canceled(Boolean canceled) {
        this.canceled = canceled;
        return this;
    }

    /**
     * If &#x60;true&#x60;, this activity instance is canceled.
     * @return canceled
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_CANCELED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getCanceled() {
        return canceled;
    }

    @JsonProperty(JSON_PROPERTY_CANCELED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCanceled(Boolean canceled) {
        this.canceled = canceled;
    }

    public HistoricActivityInstanceDto completeScope(Boolean completeScope) {
        this.completeScope = completeScope;
        return this;
    }

    /**
     * If &#x60;true&#x60;, this activity instance did complete a BPMN 2.0 scope.
     * @return completeScope
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_COMPLETE_SCOPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getCompleteScope() {
        return completeScope;
    }

    @JsonProperty(JSON_PROPERTY_COMPLETE_SCOPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCompleteScope(Boolean completeScope) {
        this.completeScope = completeScope;
    }

    public HistoricActivityInstanceDto tenantId(String tenantId) {
        this.tenantId = tenantId;
        return this;
    }

    /**
     * The tenant id of the activity instance.
     * @return tenantId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_TENANT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getTenantId() {
        return tenantId;
    }

    @JsonProperty(JSON_PROPERTY_TENANT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTenantId(String tenantId) {
        this.tenantId = tenantId;
    }

    public HistoricActivityInstanceDto removalTime(OffsetDateTime removalTime) {
        this.removalTime = removalTime;
        return this;
    }

    /**
     * The time after which the activity instance should be removed by the History Cleanup job. By [default](https://docs.camunda.org/manual/7.18/reference/rest/overview/date-format/), the date must have the format &#x60;yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSSZ&#x60;, e.g., &#x60;2013-01-23T14:42:45.000+0200&#x60;.
     * @return removalTime
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_REMOVAL_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public OffsetDateTime getRemovalTime() {
        return removalTime;
    }

    @JsonProperty(JSON_PROPERTY_REMOVAL_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSXXXX")
    public void setRemovalTime(OffsetDateTime removalTime) {
        this.removalTime = removalTime;
    }

    public HistoricActivityInstanceDto rootProcessInstanceId(String rootProcessInstanceId) {
        this.rootProcessInstanceId = rootProcessInstanceId;
        return this;
    }

    /**
     * The process instance id of the root process instance that initiated the process containing this activity instance.
     * @return rootProcessInstanceId
     **/
    @Nullable
    @JsonProperty(JSON_PROPERTY_ROOT_PROCESS_INSTANCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getRootProcessInstanceId() {
        return rootProcessInstanceId;
    }

    @JsonProperty(JSON_PROPERTY_ROOT_PROCESS_INSTANCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRootProcessInstanceId(String rootProcessInstanceId) {
        this.rootProcessInstanceId = rootProcessInstanceId;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        HistoricActivityInstanceDto historicActivityInstanceDto = (HistoricActivityInstanceDto) o;
        return Objects.equals(this.id, historicActivityInstanceDto.id) &&
            Objects.equals(this.parentActivityInstanceId, historicActivityInstanceDto.parentActivityInstanceId) &&
            Objects.equals(this.activityId, historicActivityInstanceDto.activityId) &&
            Objects.equals(this.activityName, historicActivityInstanceDto.activityName) &&
            Objects.equals(this.activityType, historicActivityInstanceDto.activityType) &&
            Objects.equals(this.processDefinitionKey, historicActivityInstanceDto.processDefinitionKey) &&
            Objects.equals(this.processDefinitionId, historicActivityInstanceDto.processDefinitionId) &&
            Objects.equals(this.processInstanceId, historicActivityInstanceDto.processInstanceId) &&
            Objects.equals(this.executionId, historicActivityInstanceDto.executionId) &&
            Objects.equals(this.taskId, historicActivityInstanceDto.taskId) &&
            Objects.equals(this.assignee, historicActivityInstanceDto.assignee) &&
            Objects.equals(this.calledProcessInstanceId, historicActivityInstanceDto.calledProcessInstanceId) &&
            Objects.equals(this.calledCaseInstanceId, historicActivityInstanceDto.calledCaseInstanceId) &&
            Objects.equals(this.startTime, historicActivityInstanceDto.startTime) &&
            Objects.equals(this.endTime, historicActivityInstanceDto.endTime) &&
            Objects.equals(this.durationInMillis, historicActivityInstanceDto.durationInMillis) &&
            Objects.equals(this.canceled, historicActivityInstanceDto.canceled) &&
            Objects.equals(this.completeScope, historicActivityInstanceDto.completeScope) &&
            Objects.equals(this.tenantId, historicActivityInstanceDto.tenantId) &&
            Objects.equals(this.removalTime, historicActivityInstanceDto.removalTime) &&
            Objects.equals(this.rootProcessInstanceId, historicActivityInstanceDto.rootProcessInstanceId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, parentActivityInstanceId, activityId, activityName, activityType, processDefinitionKey, processDefinitionId, processInstanceId, executionId, taskId, assignee, calledProcessInstanceId, calledCaseInstanceId, startTime, endTime, durationInMillis, canceled, completeScope, tenantId, removalTime, rootProcessInstanceId);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class HistoricActivityInstanceDto {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    parentActivityInstanceId: ").append(toIndentedString(parentActivityInstanceId)).append("\n");
        sb.append("    activityId: ").append(toIndentedString(activityId)).append("\n");
        sb.append("    activityName: ").append(toIndentedString(activityName)).append("\n");
        sb.append("    activityType: ").append(toIndentedString(activityType)).append("\n");
        sb.append("    processDefinitionKey: ").append(toIndentedString(processDefinitionKey)).append("\n");
        sb.append("    processDefinitionId: ").append(toIndentedString(processDefinitionId)).append("\n");
        sb.append("    processInstanceId: ").append(toIndentedString(processInstanceId)).append("\n");
        sb.append("    executionId: ").append(toIndentedString(executionId)).append("\n");
        sb.append("    taskId: ").append(toIndentedString(taskId)).append("\n");
        sb.append("    assignee: ").append(toIndentedString(assignee)).append("\n");
        sb.append("    calledProcessInstanceId: ").append(toIndentedString(calledProcessInstanceId)).append("\n");
        sb.append("    calledCaseInstanceId: ").append(toIndentedString(calledCaseInstanceId)).append("\n");
        sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
        sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
        sb.append("    durationInMillis: ").append(toIndentedString(durationInMillis)).append("\n");
        sb.append("    canceled: ").append(toIndentedString(canceled)).append("\n");
        sb.append("    completeScope: ").append(toIndentedString(completeScope)).append("\n");
        sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
        sb.append("    removalTime: ").append(toIndentedString(removalTime)).append("\n");
        sb.append("    rootProcessInstanceId: ").append(toIndentedString(rootProcessInstanceId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

