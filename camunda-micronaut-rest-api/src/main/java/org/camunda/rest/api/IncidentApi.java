/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.18.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.camunda.rest.api;

import io.micronaut.core.annotation.Nullable;
import io.micronaut.core.convert.format.Format;
import io.micronaut.http.annotation.*;
import io.micronaut.http.client.annotation.Client;
import org.camunda.rest.model.AnnotationDto;
import org.camunda.rest.model.CountResultDto;
import org.camunda.rest.model.IncidentDto;
import reactor.core.publisher.Mono;

import javax.annotation.Generated;
import javax.validation.Valid;
import javax.validation.constraints.NotNull;
import java.time.OffsetDateTime;
import java.util.List;

@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen")
@Client("${openapi-micronaut-client-base-path}")
public interface IncidentApi {
    /**
     * Clear Incident Annotation
     * Clears the annotation of an incident with given id.
     *
     * @param id The id of the incident to clear the annotation at. (required)
     */
    @Delete(uri="/incident/{id}/annotation")
    @Consumes({"application/json"})
    Mono<Void> clearIncidentAnnotation(
        @PathVariable(name="id") @NotNull String id
    );

    /**
     * Get Incident
     * Retrieves an incident by ID.
     *
     * @param id The id of the incident to be retrieved. (required)
     * @return IncidentDto
     */
    @Get(uri="/incident/{id}")
    @Consumes({"application/json"})
    Mono<IncidentDto> getIncident(
        @PathVariable(name="id") @NotNull String id
    );

    /**
     * Get List
     * Queries for incidents that fulfill given parameters. The size of the result set can be retrieved by using the [Get Incident Count](https://docs.camunda.org/manual/7.18/reference/rest/incident/get-query-count/) method.
     *
     * @param incidentId Restricts to incidents that have the given id. (optional)
     * @param incidentType Restricts to incidents that belong to the given incident type. See the [User Guide](https://docs.camunda.org/manual/7.18/user-guide/process-engine/incidents/#incident-types) for a list of incident types. (optional)
     * @param incidentMessage Restricts to incidents that have the given incident message. (optional)
     * @param incidentMessageLike Restricts to incidents that incidents message is a substring of the given value. The string can include the wildcard character &#39;%&#39; to express like-strategy: starts with (&#x60;string%&#x60;), ends with (&#x60;%string&#x60;) or contains (&#x60;%string%&#x60;). (optional)
     * @param processDefinitionId Restricts to incidents that belong to a process definition with the given id. (optional)
     * @param processDefinitionKeyIn Restricts to incidents that belong to a process definition with the given keys. Must be a comma-separated list. (optional)
     * @param processInstanceId Restricts to incidents that belong to a process instance with the given id. (optional)
     * @param executionId Restricts to incidents that belong to an execution with the given id. (optional)
     * @param incidentTimestampBefore Restricts to incidents that have an incidentTimestamp date before the given date.  By [default](https://docs.camunda.org/manual/7.18/reference/rest/overview/date-format/), the date must have the format &#x60;yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSSZ&#x60;, e.g., &#x60;2013-01-23T14:42:45.000+0200&#x60;. (optional)
     * @param incidentTimestampAfter Restricts to incidents that have an incidentTimestamp date after the given date.  By [default](https://docs.camunda.org/manual/7.18/reference/rest/overview/date-format/), the date must have the format &#x60;yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSSZ&#x60;, e.g., &#x60;2013-01-23T14:42:45.000+0200&#x60;. (optional)
     * @param activityId Restricts to incidents that belong to an activity with the given id. (optional)
     * @param failedActivityId Restricts to incidents that were created due to the failure of an activity with the given id. (optional)
     * @param causeIncidentId Restricts to incidents that have the given incident id as cause incident. (optional)
     * @param rootCauseIncidentId Restricts to incidents that have the given incident id as root cause incident. (optional)
     * @param _configuration Restricts to incidents that have the given parameter set as configuration. (optional)
     * @param tenantIdIn Restricts to incidents that have one of the given comma-separated tenant ids. (optional)
     * @param jobDefinitionIdIn Restricts to incidents that have one of the given comma-separated job definition ids. (optional)
     * @param sortBy Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter. (optional)
     * @param sortOrder Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter. (optional)
     * @param firstResult Pagination of results. Specifies the index of the first result to return. (optional)
     * @param maxResults Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left. (optional)
     * @return List&lt;IncidentDto&gt;
     */
    @Get(uri="/incident")
    @Consumes({"application/json"})
    Mono<List<IncidentDto>> getIncidents(
        @QueryValue(value="incidentId") @Nullable String incidentId, 
        @QueryValue(value="incidentType") @Nullable String incidentType, 
        @QueryValue(value="incidentMessage") @Nullable String incidentMessage, 
        @QueryValue(value="incidentMessageLike") @Nullable String incidentMessageLike, 
        @QueryValue(value="processDefinitionId") @Nullable String processDefinitionId, 
        @QueryValue(value="processDefinitionKeyIn") @Nullable String processDefinitionKeyIn, 
        @QueryValue(value="processInstanceId") @Nullable String processInstanceId, 
        @QueryValue(value="executionId") @Nullable String executionId, 
        @QueryValue(value="incidentTimestampBefore") @Nullable @Format("yyyy-MM-dd'T'HH:mm:ss.SSSXXXX") OffsetDateTime incidentTimestampBefore, 
        @QueryValue(value="incidentTimestampAfter") @Nullable @Format("yyyy-MM-dd'T'HH:mm:ss.SSSXXXX") OffsetDateTime incidentTimestampAfter, 
        @QueryValue(value="activityId") @Nullable String activityId, 
        @QueryValue(value="failedActivityId") @Nullable String failedActivityId, 
        @QueryValue(value="causeIncidentId") @Nullable String causeIncidentId, 
        @QueryValue(value="rootCauseIncidentId") @Nullable String rootCauseIncidentId, 
        @QueryValue(value="configuration") @Nullable String _configuration, 
        @QueryValue(value="tenantIdIn") @Nullable String tenantIdIn, 
        @QueryValue(value="jobDefinitionIdIn") @Nullable String jobDefinitionIdIn, 
        @QueryValue(value="sortBy") @Nullable String sortBy, 
        @QueryValue(value="sortOrder") @Nullable String sortOrder, 
        @QueryValue(value="firstResult") @Nullable Integer firstResult, 
        @QueryValue(value="maxResults") @Nullable Integer maxResults
    );

    /**
     * Get List Count
     * Queries for the number of incidents that fulfill given parameters. Takes the same parameters as the [Get Incidents](https://docs.camunda.org/manual/7.18/reference/rest/incident/get-query/) method.
     *
     * @param incidentId Restricts to incidents that have the given id. (optional)
     * @param incidentType Restricts to incidents that belong to the given incident type. See the [User Guide](https://docs.camunda.org/manual/7.18/user-guide/process-engine/incidents/#incident-types) for a list of incident types. (optional)
     * @param incidentMessage Restricts to incidents that have the given incident message. (optional)
     * @param incidentMessageLike Restricts to incidents that incidents message is a substring of the given value. The string can include the wildcard character &#39;%&#39; to express like-strategy: starts with (&#x60;string%&#x60;), ends with (&#x60;%string&#x60;) or contains (&#x60;%string%&#x60;). (optional)
     * @param processDefinitionId Restricts to incidents that belong to a process definition with the given id. (optional)
     * @param processDefinitionKeyIn Restricts to incidents that belong to a process definition with the given keys. Must be a comma-separated list. (optional)
     * @param processInstanceId Restricts to incidents that belong to a process instance with the given id. (optional)
     * @param executionId Restricts to incidents that belong to an execution with the given id. (optional)
     * @param incidentTimestampBefore Restricts to incidents that have an incidentTimestamp date before the given date.  By [default](https://docs.camunda.org/manual/7.18/reference/rest/overview/date-format/), the date must have the format &#x60;yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSSZ&#x60;, e.g., &#x60;2013-01-23T14:42:45.000+0200&#x60;. (optional)
     * @param incidentTimestampAfter Restricts to incidents that have an incidentTimestamp date after the given date.  By [default](https://docs.camunda.org/manual/7.18/reference/rest/overview/date-format/), the date must have the format &#x60;yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSSZ&#x60;, e.g., &#x60;2013-01-23T14:42:45.000+0200&#x60;. (optional)
     * @param activityId Restricts to incidents that belong to an activity with the given id. (optional)
     * @param failedActivityId Restricts to incidents that were created due to the failure of an activity with the given id. (optional)
     * @param causeIncidentId Restricts to incidents that have the given incident id as cause incident. (optional)
     * @param rootCauseIncidentId Restricts to incidents that have the given incident id as root cause incident. (optional)
     * @param _configuration Restricts to incidents that have the given parameter set as configuration. (optional)
     * @param tenantIdIn Restricts to incidents that have one of the given comma-separated tenant ids. (optional)
     * @param jobDefinitionIdIn Restricts to incidents that have one of the given comma-separated job definition ids. (optional)
     * @return CountResultDto
     */
    @Get(uri="/incident/count")
    @Consumes({"application/json"})
    Mono<CountResultDto> getIncidentsCount(
        @QueryValue(value="incidentId") @Nullable String incidentId, 
        @QueryValue(value="incidentType") @Nullable String incidentType, 
        @QueryValue(value="incidentMessage") @Nullable String incidentMessage, 
        @QueryValue(value="incidentMessageLike") @Nullable String incidentMessageLike, 
        @QueryValue(value="processDefinitionId") @Nullable String processDefinitionId, 
        @QueryValue(value="processDefinitionKeyIn") @Nullable String processDefinitionKeyIn, 
        @QueryValue(value="processInstanceId") @Nullable String processInstanceId, 
        @QueryValue(value="executionId") @Nullable String executionId, 
        @QueryValue(value="incidentTimestampBefore") @Nullable @Format("yyyy-MM-dd'T'HH:mm:ss.SSSXXXX") OffsetDateTime incidentTimestampBefore, 
        @QueryValue(value="incidentTimestampAfter") @Nullable @Format("yyyy-MM-dd'T'HH:mm:ss.SSSXXXX") OffsetDateTime incidentTimestampAfter, 
        @QueryValue(value="activityId") @Nullable String activityId, 
        @QueryValue(value="failedActivityId") @Nullable String failedActivityId, 
        @QueryValue(value="causeIncidentId") @Nullable String causeIncidentId, 
        @QueryValue(value="rootCauseIncidentId") @Nullable String rootCauseIncidentId, 
        @QueryValue(value="configuration") @Nullable String _configuration, 
        @QueryValue(value="tenantIdIn") @Nullable String tenantIdIn, 
        @QueryValue(value="jobDefinitionIdIn") @Nullable String jobDefinitionIdIn
    );

    /**
     * Resolve Incident
     * Resolves an incident with given id.
     *
     * @param id The id of the incident to be resolved. (required)
     */
    @Delete(uri="/incident/{id}")
    @Consumes({"application/json"})
    Mono<Void> resolveIncident(
        @PathVariable(name="id") @NotNull String id
    );

    /**
     * Set Incident Annotation
     * Sets the annotation of an incident with given id.
     *
     * @param id The id of the incident to clear the annotation at. (required)
     * @param annotationDto  (optional)
     */
    @Put(uri="/incident/{id}/annotation")
    @Consumes({"application/json"})
    @Produces({"application/json"})
    Mono<Void> setIncidentAnnotation(
        @PathVariable(name="id") @NotNull String id, 
        @Body @Nullable @Valid AnnotationDto annotationDto
    );

}
