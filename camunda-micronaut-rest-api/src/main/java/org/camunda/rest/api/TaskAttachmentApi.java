/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.18.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.camunda.rest.api;

import io.micronaut.core.annotation.Nullable;
import io.micronaut.http.annotation.*;
import io.micronaut.http.client.annotation.Client;
import org.camunda.rest.model.AttachmentDto;
import reactor.core.publisher.Mono;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import java.io.File;
import java.util.List;

@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen")
@Client("${openapi-micronaut-client-base-path}")
public interface TaskAttachmentApi {
    /**
     * Create
     * Creates an attachment for a task.
     *
     * @param id The id of the task to add the attachment to. (required)
     * @param attachmentName The name of the attachment. (optional)
     * @param attachmentDescription The description of the attachment. (optional)
     * @param attachmentType The type of the attachment. (optional)
     * @param url The url to the remote content of the attachment. (optional)
     * @param content The content of the attachment. (optional)
     * @return AttachmentDto
     */
    @Post(uri="/task/{id}/attachment/create")
    @Consumes({"application/json"})
    @Produces({"multipart/form-data"})
    Mono<AttachmentDto> addAttachment(
        @PathVariable(name="id") @NotNull String id, 
        @Nullable String attachmentName, 
        @Nullable String attachmentDescription, 
        @Nullable String attachmentType, 
        @Nullable String url, 
        @Nullable File content
    );

    /**
     * Delete
     * Removes an attachment from a task by id.
     *
     * @param id The id of the task. (required)
     * @param attachmentId The id of the attachment to be removed. (required)
     */
    @Delete(uri="/task/{id}/attachment/{attachmentId}")
    @Consumes({"application/json"})
    Mono<Void> deleteAttachment(
        @PathVariable(name="id") @NotNull String id, 
        @PathVariable(name="attachmentId") @NotNull String attachmentId
    );

    /**
     * Get
     * Retrieves a task attachment by task id and attachment id.
     *
     * @param id The id of the task. (required)
     * @param attachmentId The id of the attachment to be retrieved. (required)
     * @return AttachmentDto
     */
    @Get(uri="/task/{id}/attachment/{attachmentId}")
    @Consumes({"application/json"})
    Mono<AttachmentDto> getAttachment(
        @PathVariable(name="id") @NotNull String id, 
        @PathVariable(name="attachmentId") @NotNull String attachmentId
    );

    /**
     * Get (Binary)
     * Retrieves the binary content of a task attachment by task id and attachment id.
     *
     * @param id The id of the task. (required)
     * @param attachmentId The id of the attachment to be retrieved. (required)
     * @return File
     */
    @Get(uri="/task/{id}/attachment/{attachmentId}/data")
    @Consumes({"application/octet-stream", "text/plain", "application/json"})
    Mono<File> getAttachmentData(
        @PathVariable(name="id") @NotNull String id, 
        @PathVariable(name="attachmentId") @NotNull String attachmentId
    );

    /**
     * Get List
     * Gets the attachments for a task.
     *
     * @param id The id of the task to retrieve the attachments for. (required)
     * @return List&lt;AttachmentDto&gt;
     */
    @Get(uri="/task/{id}/attachment")
    @Consumes({"application/json"})
    Mono<List<AttachmentDto>> getAttachments(
        @PathVariable(name="id") @NotNull String id
    );

}
