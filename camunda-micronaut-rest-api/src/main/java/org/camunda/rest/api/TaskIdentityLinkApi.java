/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.18.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.camunda.rest.api;

import io.micronaut.core.annotation.Nullable;
import io.micronaut.http.annotation.*;
import io.micronaut.http.client.annotation.Client;
import org.camunda.rest.model.IdentityLinkDto;
import reactor.core.publisher.Mono;

import javax.annotation.Generated;
import javax.validation.Valid;
import javax.validation.constraints.NotNull;
import java.util.List;

@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen")
@Client("${openapi-micronaut-client-base-path}")
public interface TaskIdentityLinkApi {
    /**
     * Add
     * Adds an identity link to a task by id. Can be used to link any user or group to a task and specify a relation.
     *
     * @param id The id of the task to add a link to. (required)
     * @param identityLinkDto  (optional)
     */
    @Post(uri="/task/{id}/identity-links")
    @Consumes({"application/json"})
    @Produces({"application/json"})
    Mono<Void> addIdentityLink(
        @PathVariable(name="id") @NotNull String id, 
        @Body @Nullable @Valid IdentityLinkDto identityLinkDto
    );

    /**
     * Delete
     * Removes an identity link from a task by id
     *
     * @param id The id of the task to remove a link from. (required)
     * @param identityLinkDto  (optional)
     */
    @Post(uri="/task/{id}/identity-links/delete")
    @Consumes({"application/json"})
    @Produces({"application/json"})
    Mono<Void> deleteIdentityLink(
        @PathVariable(name="id") @NotNull String id, 
        @Body @Nullable @Valid IdentityLinkDto identityLinkDto
    );

    /**
     * Get List
     * Gets the identity links for a task by id, which are the users and groups that are in *some* relation to it (including assignee and owner).
     *
     * @param id The id of the task to retrieve the identity links for. (required)
     * @param type Filter by the type of links to include. (optional)
     * @return List&lt;IdentityLinkDto&gt;
     */
    @Get(uri="/task/{id}/identity-links")
    @Consumes({"application/json"})
    Mono<List<IdentityLinkDto>> getIdentityLinks(
        @PathVariable(name="id") @NotNull String id, 
        @QueryValue(value="type") @Nullable String type
    );

}
